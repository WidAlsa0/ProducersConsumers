<Events startTimestamp="1647716908162" logVersion="1.0.0.202111260825">
  <Command __id="1" _type="MoveCaretCommand" caretOffset="507" date="Sat Mar 19 15:08:28 EDT 2022" docOffset="840" starttimestamp="1647716908162" timestamp="414" />
  <Command __id="0" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 15:08:28 EDT 2022" docASTNodeCount="860" docActiveCodeLength="4670" docExpressionCount="586" docLength="4670" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="144">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AnAvatar.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;
import java.beans.PropertyChangeListener;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import tags301.Comp301Tags;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.misc.ThreadSupport;

@Tags(Comp301Tags.AVATAR)
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"Arms",
	"Legs",
	"Neck",
	"Torso",
	"head",
	"text",
	"plate"
})
@EditablePropertyNames({
	"Arms",
	"Legs",
	"Neck",
	"Torso",
	"head",
	"text"
})
public class AnAvatar implements Avatar {
	Angle Legs;
	Angle Arms;
	Line Torso;
	Line Neck;
	StringShape text;
	Head head;
	String headImage = "";
	String plateImage = "";
	Plate plate;
	
	int INIT_X = 50;
	int INIT_Y = 50;
	int INIT_Radius = 20;
	int INIT_Neck = 10;
	int INIT_Head = 99;

	
	public AnAvatar() {
		Legs = new AnAngle();
		Legs.moveX(INIT_X);
		Legs.moveY(INIT_Y+40);
		Arms = new AnAngle();
		Arms.moveX(INIT_X);
		Arms.moveY(INIT_Y);
		Torso = new ALine();
		Torso.setX(INIT_X);
		Torso.setY(INIT_X);
		Neck = new ALine();
		Neck.setHeight(10);
		Neck.setWidth(0);
		Neck.setRadius(INIT_Radius);
		Neck.setX(INIT_X);
		Neck.setY(INIT_Y-INIT_Neck);
		head = new AHead();
		text = new AStringShape();
		text.setText("");
		head.setImageFileName(headImage);
		head.setX(13);
		head.setY(INIT_Y-INIT_Head);
		head.setHeight(90);
		head.setWidth(80);
		plate = new APlate();
		plate.setImageFileName(plateImage);
		plate.setHeight(0);
		plate.setWidth(0);
		plate.setX(INIT_X-20);
		plate.setY(INIT_Y+30);
		plate.setZIndex(60000);
	}
	
	@Override
	public Plate getPlate() {
		return plate;
	}

	@Override
	public void setPlate(Plate newPlate) {
		plate = newPlate;
	}

	@Override
	public Angle getArms() {
		return Arms;
	}
	
	@Override
	public void setArms(Angle NewArms) {
		Arms = NewArms;
	}


	@Override
	public Angle getLegs() {
		return Legs;
	}
	
	@Override
	public void setLegs(Angle NewLegs) {
		Legs = NewLegs;
	}


	@Override
	public Line getTorso() {
		return Torso;
	}
	
	@Override
	public void setTorso(Line NewTorso) {
		Torso = NewTorso;
	}


	@Override
	public Line getNeck() {
		return Neck;
	}
	
	@Override
	public void setNeck(Line newNeck) {
		Neck = newNeck;
	}
	
	@Override
	public StringShape getText() {
		return text;
	}
	
	@Override
	public void setText(StringShape NewText) {
		text = NewText;
	}
	

	@Override
	public Head getHead() {
		return head;
	}

	@Override
	public void setHead(Head NewHead) {
		head = NewHead;
	}
	
	@Override
	public void dropPlate(String imageName) {
		plate.setImageFileName(imageName);
		plate.setHeight(40);
		plate.setWidth(40);
	}
	
	@Override
	public void goBack(int X, int Y) {
		Legs.move(X, Y);
		Arms.move(X, Y);
		Torso.move(X, Y);
		Neck.move(X, Y);
		head.move(X, Y);
	}
	
	@Override
	public void move(int X, int Y) {
		Legs.move(X, Y);
		Arms.move(X, Y);
		Torso.move(X, Y);
		Neck.move(X, Y);
		head.move(X, Y);
		plate.move(X, Y);
	}
	
	@Override
	public void moveTo(int newX, int newY) {
		Legs.moveTo(newX, newY);
		Arms.moveTo(newX, newY);
		Torso.moveTo(newX, newY);
		Neck.moveTo(newX, newY);
		head.moveTo(newX, newY);	
		plate.moveTo(newX, newY);
	}
	
	@Override
	public void scale(double ratio) {
		Legs.getRightLine().setRadius(Legs.getRightLine().getRadius()*ratio);
		Legs.getLeftLine().setRadius(Legs.getLeftLine().getRadius()*ratio);
		Arms.getRightLine().setRadius(Arms.getRightLine().getRadius()*ratio);
		Arms.getLeftLine().setRadius(Arms.getLeftLine().getRadius()*ratio);
		Neck.setRadius(Neck.getRadius()*ratio);
		Torso.setRadius(Torso.getRadius()*ratio);
	}
	
	
	@Override
	public void addPropertyChangeListener(Avatar avatarParameter, PropertyChangeListener aListener) {
		avatarParameter.getArms().addPropertyChangeListener(getArms(), aListener);
		avatarParameter.getLegs().addPropertyChangeListener(getLegs(), aListener);
		avatarParameter.getHead().addPropertyChangeListener(aListener);
		avatarParameter.getNeck().addPropertyChangeListener(aListener);
		avatarParameter.getTorso().addPropertyChangeListener(aListener);
		avatarParameter.getText().addPropertyChangeListener(aListener);
	}
	
	public static void main(String[] args) {
		Avatar scene = new AnAvatar();
		scene.getHead().setImageFileName("images/0.png");
		OEFrame editor = ObjectEditor.edit(scene);
		editor.showDrawPanel();
	}




	
}
]]></snapshot>
  </Command>
  <Command __id="3" _type="PauseCommand" date="Sat Mar 19 15:08:42 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="13962">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13542]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4" _type="MoveCaretCommand" caretOffset="976" date="Sat Mar 19 15:08:42 EDT 2022" docOffset="1852" starttimestamp="1647716908162" timestamp="14157" />
  <Command __id="6" _type="PauseCommand" date="Sat Mar 19 15:08:45 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17013">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2855]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5" _type="MoveCaretCommand" caretOffset="893" date="Sat Mar 19 15:08:45 EDT 2022" docOffset="1769" starttimestamp="1647716908162" timestamp="17012" />
  <Command __id="8" _type="PauseCommand" date="Sat Mar 19 15:08:52 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="24485">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7472]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="7" _type="MoveCaretCommand" caretOffset="922" date="Sat Mar 19 15:08:52 EDT 2022" docOffset="1798" starttimestamp="1647716908162" timestamp="24484" />
  <Command __id="9" _type="MoveCaretCommand" caretOffset="949" date="Sat Mar 19 15:08:53 EDT 2022" docOffset="1825" starttimestamp="1647716908162" timestamp="25053" />
  <Command __id="11" _type="PauseCommand" date="Sat Mar 19 15:08:54 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="26561">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1508]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="10" _type="MoveCaretCommand" caretOffset="893" date="Sat Mar 19 15:08:54 EDT 2022" docOffset="1769" starttimestamp="1647716908162" timestamp="26561" />
  <Command __id="13" _type="PauseCommand" date="Sat Mar 19 15:08:58 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="30138">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3577]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="12" _type="MoveCaretCommand" caretOffset="745" date="Sat Mar 19 15:08:58 EDT 2022" docOffset="1621" starttimestamp="1647716908162" timestamp="30138" />
  <Command __id="14" _type="SelectTextCommand" caretOffset="747" date="Sat Mar 19 15:08:58 EDT 2022" end="747" start="735" starttimestamp="1647716908162" timestamp="30325" />
  <Command __id="15" _type="SelectTextCommand" caretOffset="848" date="Sat Mar 19 15:08:58 EDT 2022" end="848" start="731" starttimestamp="1647716908162" timestamp="30563" />
  <Command __id="2" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 15:08:42 EDT 2022" docASTNodeCount="355" docActiveCodeLength="2124" docExpressionCount="249" docLength="2731" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13956">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package main;

import java.awt.BorderLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import bus.uigen.attributes.AttributeNames;
import bus.uigen.widgets.VirtualComponent;
import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import controls.Painter;
import factories.AFactory;
import graphics.ACircle;
import graphics.AButtonArrayScene;
import graphics.AChef;
import graphics.ALine;
import graphics.APatron;
import graphics.AScene;
import graphics.AnAngle;
import graphics.AnArrayBasedScene;
import graphics.AnAvatar;
import graphics.Angle;
import graphics.ArrayBasedScene;
import graphics.Avatar;
import graphics.Line;
import graphics.Scene;
import util.misc.Console;

public class MainClass {
	static ArrayBasedScene scene = AFactory.arrayBasedSceneFactoryMethod();
	static ArrayBasedScene scene1 = new AButtonArrayScene();

	public static void main(String[] args) {
		
//		animateGraphics();
//		animateArrayUse();
		animateArrayUseInteractive();
	}
	
	public static void animateGraphics() {
		Scene Restaurant = new AScene();
		OEFrame editor = ObjectEditor.edit(Restaurant);
		editor.showDrawPanel();
		editor.showTreePanel();
//		Component c = editor.getDrawComponent();
//		VirtualComponent v = editor.getDrawVirtualComponent();
//		c.addMouseListener(null);

		
	}

	public static void animateArrayUseInteractive() {

		//ObjectEditor.setMethodAttribute(AnArrayBasedScene.class, "Chef to Table", AttributeNames.TOOLBAR_METHOD, true);
		OEFrame editor = ObjectEditor.edit(scene1);
		//editor.hideMainPanel();
		editor.showDrawPanel();
		//editor.showToolBar();
		
//		JFrame frame = new JFrame();
//		//frame.add((Component) console, BorderLayout.CENTER);
//		frame.setSize(1000, 1000);
//		frame.setVisible(true);
		
	
		
//		JPanel panel = new JPanel();
//		JButton button1 = control.getChefToBuffer();
//		panel.add(button1);
//		frame.add(panel);
	}
	
	public static void animatePainterTwo(Painter view) {
		JFrame aFrame = new JFrame();
		aFrame.add((Component) view, BorderLayout.CENTER);
		aFrame.setSize(1000, 1000);
		aFrame.setVisible(true);
		JPanel panel = new JPanel();
		aFrame.add(panel, BorderLayout.NORTH);
	}
	
	public static void moveAvatar() {
		System.out.println("test1");
		scene.getChefList().get(2).getChef().move(30, 0);
		scene.getChefList().get(2).getStove().move(10, 0);
		System.out.println("Moving the stove: \n");
		scene.getChefList().get(3).getStove().move(30, 30);
	}

}
]]></snapshot>
  </Command>
  <Command __id="17" _type="PauseCommand" date="Sat Mar 19 15:08:59 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="31623">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1060]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="18" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 15:08:59 EDT 2022" starttimestamp="1647716908162" timestamp="31676" />
  <Command __id="20" _type="PauseCommand" date="Sat Mar 19 15:09:00 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="32748">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1071]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="19" _type="MoveCaretCommand" caretOffset="729" date="Sat Mar 19 15:09:00 EDT 2022" docOffset="1605" starttimestamp="1647716908162" timestamp="32747" />
  <Command __id="22" _type="InsertStringCommand" date="Sat Mar 19 15:09:01 EDT 2022" starttimestamp="1647716908162" timestamp="33029" timestamp2="33029">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="16" _type="Delete" date="Sat Mar 19 15:08:59 EDT 2022" docASTNodeCount="355" docActiveCodeLength="2120" docExpressionCount="249" docLength="2614" endLine="62" length="117" offset="1607" startLine="61" starttimestamp="1647716908162" timestamp="31623">
    <text><![CDATA[		//ObjectEditor.setMethodAttribute(AnArrayBasedScene.class, "Chef to Table", AttributeNames.TOOLBAR_METHOD, true);
]]></text>
  </DocumentChange>
  <DocumentChange __id="21" _type="Insert" date="Sat Mar 19 15:09:01 EDT 2022" docASTNodeCount="355" docActiveCodeLength="2124" docExpressionCount="249" docLength="2618" length="4" offset="1605" starttimestamp="1647716908162" timestamp="33012">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="24" _type="PauseCommand" date="Sat Mar 19 15:09:03 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="34891">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1862]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="23" _type="Delete" date="Sat Mar 19 15:09:03 EDT 2022" docASTNodeCount="355" docActiveCodeLength="2120" docExpressionCount="249" docLength="2614" endLine="61" length="4" offset="1605" startLine="60" starttimestamp="1647716908162" timestamp="34891">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="25" _type="UndoCommand" date="Sat Mar 19 15:09:03 EDT 2022" starttimestamp="1647716908162" timestamp="34912" />
  <DocumentChange __id="26" _type="Insert" date="Sat Mar 19 15:09:03 EDT 2022" docASTNodeCount="355" docActiveCodeLength="2124" docExpressionCount="249" docLength="2731" length="117" offset="1607" starttimestamp="1647716908162" timestamp="35342">
    <text><![CDATA[		//ObjectEditor.setMethodAttribute(AnArrayBasedScene.class, "Chef to Table", AttributeNames.TOOLBAR_METHOD, true);
]]></text>
  </DocumentChange>
  <Command __id="27" _type="UndoCommand" date="Sat Mar 19 15:09:03 EDT 2022" starttimestamp="1647716908162" timestamp="35352" />
  <Command __id="28" _type="MoveCaretCommand" caretOffset="729" date="Sat Mar 19 15:09:04 EDT 2022" docOffset="1605" starttimestamp="1647716908162" timestamp="36278" />
  <DocumentChange __id="29" _type="Insert" date="Sat Mar 19 15:09:05 EDT 2022" docASTNodeCount="358" docActiveCodeLength="2129" docExpressionCount="251" docLength="2736" length="5" offset="1605" repeat="2" starttimestamp="1647716908162" timestamp="36866" timestamp2="38035">
    <text><![CDATA[
		o]]></text>
  </DocumentChange>
  <Command __id="30" _type="InsertStringCommand" date="Sat Mar 19 15:09:05 EDT 2022" starttimestamp="1647716908162" timestamp="36899" timestamp2="36899">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="33" _type="PauseCommand" date="Sat Mar 19 15:09:06 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="38050">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1151]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="32" _type="InsertStringCommand" date="Sat Mar 19 15:09:06 EDT 2022" starttimestamp="1647716908162" timestamp="38050" timestamp2="38050">
    <data><![CDATA[o]]></data>
  </Command>
  <DocumentChange __id="34" _type="Delete" date="Sat Mar 19 15:09:06 EDT 2022" docASTNodeCount="355" docActiveCodeLength="2128" docExpressionCount="249" docLength="2735" endLine="61" length="1" offset="1609" startLine="61" starttimestamp="1647716908162" timestamp="38296">
    <text><![CDATA[o]]></text>
  </DocumentChange>
  <Command __id="35" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 15:09:06 EDT 2022" starttimestamp="1647716908162" timestamp="38321" />
  <Command __id="37" _type="InsertStringCommand" date="Sat Mar 19 15:09:06 EDT 2022" starttimestamp="1647716908162" timestamp="38646" timestamp2="38646">
    <data><![CDATA[O]]></data>
  </Command>
  <Command __id="39" _type="InsertStringCommand" date="Sat Mar 19 15:09:06 EDT 2022" starttimestamp="1647716908162" timestamp="38803" timestamp2="38803">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="41" _type="InsertStringCommand" date="Sat Mar 19 15:09:07 EDT 2022" starttimestamp="1647716908162" timestamp="38968" timestamp2="38968">
    <data><![CDATA[j]]></data>
  </Command>
  <Command __id="43" _type="InsertStringCommand" date="Sat Mar 19 15:09:07 EDT 2022" starttimestamp="1647716908162" timestamp="39023" timestamp2="39023">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="45" _type="InsertStringCommand" date="Sat Mar 19 15:09:07 EDT 2022" starttimestamp="1647716908162" timestamp="39188" timestamp2="39188">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="47" _type="InsertStringCommand" date="Sat Mar 19 15:09:07 EDT 2022" starttimestamp="1647716908162" timestamp="39363" timestamp2="39363">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="49" _type="InsertStringCommand" date="Sat Mar 19 15:09:07 EDT 2022" starttimestamp="1647716908162" timestamp="39613" timestamp2="39613">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="51" _type="InsertStringCommand" date="Sat Mar 19 15:09:07 EDT 2022" starttimestamp="1647716908162" timestamp="39817" timestamp2="39817">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="53" _type="InsertStringCommand" date="Sat Mar 19 15:09:07 EDT 2022" starttimestamp="1647716908162" timestamp="39837" timestamp2="39837">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="55" _type="InsertStringCommand" date="Sat Mar 19 15:09:08 EDT 2022" starttimestamp="1647716908162" timestamp="39943" timestamp2="39943">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="57" _type="InsertStringCommand" date="Sat Mar 19 15:09:08 EDT 2022" starttimestamp="1647716908162" timestamp="40055" timestamp2="40055">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="59" _type="InsertStringCommand" date="Sat Mar 19 15:09:08 EDT 2022" starttimestamp="1647716908162" timestamp="40136" timestamp2="40136">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="61" _type="InsertStringCommand" date="Sat Mar 19 15:09:08 EDT 2022" starttimestamp="1647716908162" timestamp="40322" timestamp2="40322">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="62" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sat Mar 19 15:09:08 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="40367" />
  <Command __id="64" _type="PauseCommand" date="Sat Mar 19 15:09:10 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="41847">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1480]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="63" _type="ShellCommand" date="Sat Mar 19 15:09:10 EDT 2022" starttimestamp="1647716908162" timestamp="41847" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="65" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sat Mar 19 15:09:10 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="41896" />
  <Command __id="67" _type="PauseCommand" date="Sat Mar 19 15:09:14 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="46337">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[4441]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="66" _type="ShellCommand" date="Sat Mar 19 15:09:14 EDT 2022" starttimestamp="1647716908162" timestamp="46337" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="69" _type="InsertStringCommand" date="Sat Mar 19 15:09:15 EDT 2022" starttimestamp="1647716908162" timestamp="46855" timestamp2="46855">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="71" _type="InsertStringCommand" date="Sat Mar 19 15:09:15 EDT 2022" starttimestamp="1647716908162" timestamp="46904" timestamp2="46904">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="73" _type="InsertStringCommand" date="Sat Mar 19 15:09:15 EDT 2022" starttimestamp="1647716908162" timestamp="47240" timestamp2="47240">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="75" _type="InsertStringCommand" date="Sat Mar 19 15:09:15 EDT 2022" starttimestamp="1647716908162" timestamp="47429" timestamp2="47429">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="77" _type="InsertStringCommand" date="Sat Mar 19 15:09:16 EDT 2022" starttimestamp="1647716908162" timestamp="47857" timestamp2="47857">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="79" _type="InsertStringCommand" date="Sat Mar 19 15:09:16 EDT 2022" starttimestamp="1647716908162" timestamp="47996" timestamp2="47996">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="81" _type="InsertStringCommand" date="Sat Mar 19 15:09:16 EDT 2022" starttimestamp="1647716908162" timestamp="48048" timestamp2="48048">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="83" _type="InsertStringCommand" date="Sat Mar 19 15:09:16 EDT 2022" starttimestamp="1647716908162" timestamp="48521" timestamp2="48521">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="85" _type="InsertStringCommand" date="Sat Mar 19 15:09:16 EDT 2022" starttimestamp="1647716908162" timestamp="48701" timestamp2="48701">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="87" _type="InsertStringCommand" date="Sat Mar 19 15:09:16 EDT 2022" starttimestamp="1647716908162" timestamp="48806" timestamp2="48806">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="89" _type="InsertStringCommand" date="Sat Mar 19 15:09:17 EDT 2022" starttimestamp="1647716908162" timestamp="48848" timestamp2="48848">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="91" _type="InsertStringCommand" date="Sat Mar 19 15:09:17 EDT 2022" starttimestamp="1647716908162" timestamp="49031" timestamp2="49031">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="93" _type="InsertStringCommand" date="Sat Mar 19 15:09:17 EDT 2022" starttimestamp="1647716908162" timestamp="49200" timestamp2="49200">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="95" _type="InsertStringCommand" date="Sat Mar 19 15:09:17 EDT 2022" starttimestamp="1647716908162" timestamp="49242" timestamp2="49242">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="97" _type="InsertStringCommand" date="Sat Mar 19 15:09:17 EDT 2022" starttimestamp="1647716908162" timestamp="49424" timestamp2="49424">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="99" _type="PauseCommand" date="Sat Mar 19 15:09:19 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="51266">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1842]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="98" _type="ShellCommand" date="Sat Mar 19 15:09:19 EDT 2022" starttimestamp="1647716908162" timestamp="51266" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="101" _type="PauseCommand" date="Sat Mar 19 15:09:20 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="52623">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1357]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="100" _type="ShellCommand" date="Sat Mar 19 15:09:20 EDT 2022" starttimestamp="1647716908162" timestamp="52623" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="103" _type="InsertStringCommand" date="Sat Mar 19 15:09:21 EDT 2022" starttimestamp="1647716908162" timestamp="53058" timestamp2="53058">
    <data><![CDATA[M]]></data>
  </Command>
  <Command __id="105" _type="InsertStringCommand" date="Sat Mar 19 15:09:21 EDT 2022" starttimestamp="1647716908162" timestamp="53204" timestamp2="53204">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="107" _type="InsertStringCommand" date="Sat Mar 19 15:09:21 EDT 2022" starttimestamp="1647716908162" timestamp="53317" timestamp2="53317">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="109" _type="InsertStringCommand" date="Sat Mar 19 15:09:21 EDT 2022" starttimestamp="1647716908162" timestamp="53369" timestamp2="53369">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="111" _type="InsertStringCommand" date="Sat Mar 19 15:09:21 EDT 2022" starttimestamp="1647716908162" timestamp="53508" timestamp2="53508">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="113" _type="InsertStringCommand" date="Sat Mar 19 15:09:21 EDT 2022" starttimestamp="1647716908162" timestamp="53733" timestamp2="53733">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="115" _type="InsertStringCommand" date="Sat Mar 19 15:09:22 EDT 2022" starttimestamp="1647716908162" timestamp="54182" timestamp2="54182">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="117" _type="InsertStringCommand" date="Sat Mar 19 15:09:22 EDT 2022" starttimestamp="1647716908162" timestamp="54418" timestamp2="54418">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="119" _type="InsertStringCommand" date="Sat Mar 19 15:09:22 EDT 2022" starttimestamp="1647716908162" timestamp="54494" timestamp2="54494">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="121" _type="InsertStringCommand" date="Sat Mar 19 15:09:22 EDT 2022" starttimestamp="1647716908162" timestamp="54619" timestamp2="54619">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="123" _type="InsertStringCommand" date="Sat Mar 19 15:09:23 EDT 2022" starttimestamp="1647716908162" timestamp="54862" timestamp2="54862">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="125" _type="InsertStringCommand" date="Sat Mar 19 15:09:23 EDT 2022" starttimestamp="1647716908162" timestamp="54974" timestamp2="54974">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="127" _type="InsertStringCommand" date="Sat Mar 19 15:09:23 EDT 2022" starttimestamp="1647716908162" timestamp="55078" timestamp2="55078">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="129" _type="InsertStringCommand" date="Sat Mar 19 15:09:23 EDT 2022" starttimestamp="1647716908162" timestamp="55254" timestamp2="55254">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="131" _type="InsertStringCommand" date="Sat Mar 19 15:09:23 EDT 2022" starttimestamp="1647716908162" timestamp="55306" timestamp2="55306">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="133" _type="InsertStringCommand" date="Sat Mar 19 15:09:23 EDT 2022" starttimestamp="1647716908162" timestamp="55514" timestamp2="55514">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="135" _type="InsertStringCommand" date="Sat Mar 19 15:09:23 EDT 2022" starttimestamp="1647716908162" timestamp="55825" timestamp2="55825">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="137" _type="InsertStringCommand" date="Sat Mar 19 15:09:24 EDT 2022" starttimestamp="1647716908162" timestamp="56167" timestamp2="56167">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="139" _type="InsertStringCommand" date="Sat Mar 19 15:09:24 EDT 2022" starttimestamp="1647716908162" timestamp="56284" timestamp2="56284">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="141" _type="InsertStringCommand" date="Sat Mar 19 15:09:24 EDT 2022" starttimestamp="1647716908162" timestamp="56364" timestamp2="56364">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="143" _type="InsertStringCommand" date="Sat Mar 19 15:09:24 EDT 2022" starttimestamp="1647716908162" timestamp="56430" timestamp2="56430">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="145" _type="InsertStringCommand" date="Sat Mar 19 15:09:24 EDT 2022" starttimestamp="1647716908162" timestamp="56540" timestamp2="56540">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="146" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sat Mar 19 15:09:25 EDT 2022" starttimestamp="1647716908162" timestamp="56942" />
  <Command __id="148" _type="InsertStringCommand" date="Sat Mar 19 15:09:25 EDT 2022" starttimestamp="1647716908162" timestamp="57149" timestamp2="57149">
    <data><![CDATA[']]></data>
  </Command>
  <Command __id="151" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 15:09:26 EDT 2022" starttimestamp="1647716908162" timestamp="58086" />
  <Command __id="153" _type="InsertStringCommand" date="Sat Mar 19 15:09:26 EDT 2022" starttimestamp="1647716908162" timestamp="58399" timestamp2="58399">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="155" _type="PauseCommand" date="Sat Mar 19 15:09:34 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="66045">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[7646]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="154" _type="ShellCommand" date="Sat Mar 19 15:09:34 EDT 2022" starttimestamp="1647716908162" timestamp="66045" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="157" _type="PauseCommand" date="Sat Mar 19 15:09:37 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="69071">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3026]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="156" _type="ShellCommand" date="Sat Mar 19 15:09:37 EDT 2022" starttimestamp="1647716908162" timestamp="69071" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="159" _type="PauseCommand" date="Sat Mar 19 15:09:40 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="72376">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3305]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="158" _type="ShellCommand" date="Sat Mar 19 15:09:40 EDT 2022" starttimestamp="1647716908162" timestamp="72376" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="161" _type="PauseCommand" date="Sat Mar 19 15:11:17 EDT 2022" range="1m-2m" starttimestamp="1647716908162" timestamp="169616">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[97240]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="160" _type="ShellCommand" date="Sat Mar 19 15:11:17 EDT 2022" starttimestamp="1647716908162" timestamp="169616" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="163" _type="PauseCommand" date="Sat Mar 19 15:11:19 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="171698">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2082]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="162" _type="ShellCommand" date="Sat Mar 19 15:11:19 EDT 2022" starttimestamp="1647716908162" timestamp="171698" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="165" _type="PauseCommand" date="Sat Mar 19 15:17:07 EDT 2022" range="5m-10m" starttimestamp="1647716908162" timestamp="519219">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[347520]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="164" _type="ShellCommand" date="Sat Mar 19 15:17:07 EDT 2022" starttimestamp="1647716908162" timestamp="519218" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="167" _type="PauseCommand" date="Sat Mar 19 15:17:09 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="520943">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1725]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="166" _type="ShellCommand" date="Sat Mar 19 15:17:09 EDT 2022" starttimestamp="1647716908162" timestamp="520943" type="ECLIPSE_MINIMIZED" />
  <Command __id="168" _type="ShellCommand" date="Sat Mar 19 15:17:09 EDT 2022" starttimestamp="1647716908162" timestamp="520954" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="170" _type="PauseCommand" date="Sat Mar 19 15:57:29 EDT 2022" range="30m-1h" starttimestamp="1647716908162" timestamp="2940876">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2419918]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="169" _type="ShellCommand" date="Sat Mar 19 15:57:29 EDT 2022" starttimestamp="1647716908162" timestamp="2940872" type="ECLIPSE_MAXIMIZED" />
  <Command __id="171" _type="ShellCommand" date="Sat Mar 19 15:57:29 EDT 2022" starttimestamp="1647716908162" timestamp="2940977" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="172" _type="ShellCommand" date="Sat Mar 19 15:57:29 EDT 2022" starttimestamp="1647716908162" timestamp="2941807" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="173" _type="ShellCommand" date="Sat Mar 19 15:57:30 EDT 2022" starttimestamp="1647716908162" timestamp="2941872" type="ECLIPSE_MINIMIZED" />
  <Command __id="175" _type="PauseCommand" date="Sat Mar 19 15:58:16 EDT 2022" range="30s-1m" starttimestamp="1647716908162" timestamp="2987998">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[46126]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="174" _type="ShellCommand" date="Sat Mar 19 15:58:16 EDT 2022" starttimestamp="1647716908162" timestamp="2987998" type="ECLIPSE_MAXIMIZED" />
  <Command __id="176" _type="ShellCommand" date="Sat Mar 19 15:58:16 EDT 2022" starttimestamp="1647716908162" timestamp="2988096" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="178" _type="PauseCommand" date="Sat Mar 19 15:58:17 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="2989107">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1011]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="177" _type="ShellCommand" date="Sat Mar 19 15:58:17 EDT 2022" starttimestamp="1647716908162" timestamp="2989107" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="179" _type="ShellCommand" date="Sat Mar 19 15:58:17 EDT 2022" starttimestamp="1647716908162" timestamp="2989207" type="ECLIPSE_MINIMIZED" />
  <Command __id="181" _type="PauseCommand" date="Sat Mar 19 16:04:36 EDT 2022" range="5m-10m" starttimestamp="1647716908162" timestamp="3368596">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[379389]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="180" _type="ShellCommand" date="Sat Mar 19 16:04:36 EDT 2022" starttimestamp="1647716908162" timestamp="3368596" type="ECLIPSE_MAXIMIZED" />
  <Command __id="182" _type="ShellCommand" date="Sat Mar 19 16:04:36 EDT 2022" starttimestamp="1647716908162" timestamp="3368694" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="183" _type="ShellCommand" date="Sat Mar 19 16:04:37 EDT 2022" starttimestamp="1647716908162" timestamp="3368920" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="184" _type="ShellCommand" date="Sat Mar 19 16:04:37 EDT 2022" starttimestamp="1647716908162" timestamp="3369007" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="185" _type="ShellCommand" date="Sat Mar 19 16:04:37 EDT 2022" starttimestamp="1647716908162" timestamp="3369474" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="187" _type="PauseCommand" date="Sat Mar 19 16:08:28 EDT 2022" range="2m-5m" starttimestamp="1647716908162" timestamp="3600134">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[230660]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="186" _type="BalloonCommand" date="Sat Mar 19 16:08:28 EDT 2022" message="*******************************************
Worked 0 minutes(fixed)/9 minutes(context based) from
Sat Mar 19 15:08:28 EDT 2022 to Sat Mar 19 16:04:37 EDT 2022
Edited 1 Projects: 
	ProducersConsumer
Edited 1 Files: 
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java
Number of insert: 180
Number of delete: 124
" starttimestamp="1647716908162" timestamp="3600134">
    <fineGrainedWorkTime><![CDATA[9]]></fineGrainedWorkTime>
    <insert><![CDATA[180]]></insert>
    <startTime><![CDATA[1647716908306]]></startTime>
    <endTime><![CDATA[1647720277636]]></endTime>
    <workTime><![CDATA[0]]></workTime>
    <delete><![CDATA[124]]></delete>
  </Command>
  <Command __id="189" _type="PauseCommand" date="Sat Mar 19 16:17:21 EDT 2022" range="5m-10m" starttimestamp="1647716908162" timestamp="4132995">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[532861]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="188" _type="ShellCommand" date="Sat Mar 19 16:17:21 EDT 2022" starttimestamp="1647716908162" timestamp="4132995" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="191" _type="PauseCommand" date="Sat Mar 19 16:17:22 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="4134365">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1370]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="190" _type="ShellCommand" date="Sat Mar 19 16:17:22 EDT 2022" starttimestamp="1647716908162" timestamp="4134365" type="ECLIPSE_MINIMIZED" />
  <Command __id="192" _type="ShellCommand" date="Sat Mar 19 16:17:22 EDT 2022" starttimestamp="1647716908162" timestamp="4134382" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="194" _type="PauseCommand" date="Sat Mar 19 18:47:38 EDT 2022" range=">1h" starttimestamp="1647716908162" timestamp="13150787">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9016404]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="193" _type="ShellCommand" date="Sat Mar 19 18:47:38 EDT 2022" starttimestamp="1647716908162" timestamp="13150786" type="ECLIPSE_MAXIMIZED" />
  <Command __id="195" _type="ShellCommand" date="Sat Mar 19 18:47:39 EDT 2022" starttimestamp="1647716908162" timestamp="13150936" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="197" _type="PauseCommand" date="Sat Mar 19 18:47:44 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="13156152">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5216]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="196" _type="ShellCommand" date="Sat Mar 19 18:47:44 EDT 2022" starttimestamp="1647716908162" timestamp="13156152" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="199" _type="PauseCommand" date="Sat Mar 19 18:48:06 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="13178383">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[22231]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="201" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:48:08 EDT 2022" starttimestamp="1647716908162" timestamp="13179878" />
  <Command __id="203" _type="EclipseCommand" commandID="org.eclipse.ui.project.properties" date="Sat Mar 19 18:48:08 EDT 2022" starttimestamp="1647716908162" timestamp="13179941" />
  <Command __id="204" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:48:08 EDT 2022" starttimestamp="1647716908162" timestamp="13180020" />
  <Command __id="205" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:48:08 EDT 2022" starttimestamp="1647716908162" timestamp="13180354" />
  <Command __id="207" _type="PauseCommand" date="Sat Mar 19 18:48:16 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="13188422">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8068]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="206" _type="MoveCaretCommand" caretOffset="785" date="Sat Mar 19 18:48:16 EDT 2022" docOffset="1661" starttimestamp="1647716908162" timestamp="13188422" />
  <Command __id="209" _type="PauseCommand" date="Sat Mar 19 18:48:23 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="13195615">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7193]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="208" _type="MoveCaretCommand" caretOffset="1005" date="Sat Mar 19 18:48:23 EDT 2022" docOffset="1881" starttimestamp="1647716908162" timestamp="13195615" />
  <Command __id="211" _type="PauseCommand" date="Sat Mar 19 18:48:24 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13196731">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1116]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="210" _type="MoveCaretCommand" caretOffset="1032" date="Sat Mar 19 18:48:24 EDT 2022" docOffset="1908" starttimestamp="1647716908162" timestamp="13196731" />
  <Command __id="213" _type="PauseCommand" date="Sat Mar 19 18:48:26 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13198413">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1682]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="212" _type="ShellCommand" date="Sat Mar 19 18:48:26 EDT 2022" starttimestamp="1647716908162" timestamp="13198413" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="215" _type="PauseCommand" date="Sat Mar 19 18:48:30 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13202271">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3858]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="214" _type="ShellCommand" date="Sat Mar 19 18:48:30 EDT 2022" starttimestamp="1647716908162" timestamp="13202271" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="216" _type="ShellCommand" date="Sat Mar 19 18:48:31 EDT 2022" starttimestamp="1647716908162" timestamp="13203220" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="218" _type="PauseCommand" date="Sat Mar 19 18:48:54 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="13225977">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[22757]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="219" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:49:00 EDT 2022" starttimestamp="1647716908162" timestamp="13232352" />
  <Command __id="221" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:49:00 EDT 2022" starttimestamp="1647716908162" timestamp="13232415" />
  <Command __id="222" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 18:49:00 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13232555" type="Run" />
  <Command __id="223" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 18:49:00 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13232555" type="Run" />
  <Command __id="225" _type="PauseCommand" date="Sat Mar 19 18:49:01 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13233650">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1094]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="224" _type="ShellCommand" date="Sat Mar 19 18:49:01 EDT 2022" starttimestamp="1647716908162" timestamp="13233649" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="226" _type="ConsoleOutput" date="Sat Mar 19 18:49:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13233837" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="227" _type="ConsoleOutput" date="Sat Mar 19 18:49:02 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13233979" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AButtonArrayScene@3e08ff24
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AButtonArrayScene@3e08ff24"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="228" _type="ConsoleOutput" date="Sat Mar 19 18:49:02 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13234077" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Buffer not in range.
W*** Value: null of Root.Chef List not in range.
W*** Value: null of Root.Patron List not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.AButtonArrayScene@3e08ff24"), Diff(INSERT,"Value: null of Root.Buffer not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Patron List not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="230" _type="PauseCommand" date="Sat Mar 19 18:49:08 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="13240728">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6651]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="229" _type="ExceptionCommand" date="Sat Mar 19 18:49:08 EDT 2022" starttimestamp="1647716908162" timestamp="13240728" type="Exception">
    <exceptionString><![CDATA[class java.lang.Error
java.lang.Error: Unresolved compilation problems: 
	The import tags301 cannot be resolved
	Comp301Tags cannot be resolved to a variable

	at graphics.ALocatable.<init>(ALocatable.java:8)
	at graphics.ABoundedShape.<init>(ABoundedShape.java:30)
	at graphics.ACircle.<init>(ACircle.java:22)
	at graphics.ABoundedBufferView.<init>(ABoundedBufferView.java:29)
	at graphics.AnArrayBasedScene.initScene(AnArrayBasedScene.java:81)
	at graphics.AButtonArrayScene.initScene(AButtonArrayScene.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.models.AnInteractiveMethodInvoker.invokeDynamicCommand(AnInteractiveMethodInvoker.java:247)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:233)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="231" _type="ConsoleOutput" date="Sat Mar 19 18:49:08 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13240788" type="ConsoleOutput">
    <outputString><![CDATA[class java.lang.Error
java.lang.Error: Unresolved compilation problems: 
	The import tags301 cannot be resolved
	Comp301Tags cannot be resolved to a variable

	at graphics.ALocatable.<init>(ALocatable.java:8)
	at graphics.ABoundedShape.<init>(ABoundedShape.java:30)
	at graphics.ACircle.<init>(ACircle.java:22)
	at graphics.ABoundedBufferView.<init>(ABoundedBufferView.java:29)
	at graphics.AnArrayBasedScene.initScene(AnArrayBasedScene.java:81)
	at graphics.AButtonArrayScene.initScene(AButtonArrayScene.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.models.AnInteractiveMethodInvoker.invokeDynamicCommand(AnInteractiveMethodInvoker.java:247)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:233)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Buffer not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Patron List not in range."), Diff(INSERT,"class java.lang.Error¶java.lang.Error: Unresolved compilation problems: ¶	The import tags301 cannot be resolved¶	Comp301Tags cannot be resolved to a variable¶¶	at graphics.ALocatable.<init>(ALocatable.java:8)¶	at graphics.ABoundedShape.<init>(ABoundedShape.java:30)¶	at graphics.ACircle.<init>(ACircle.java:22)¶	at graphics.ABoundedBufferView.<init>(ABoundedBufferView.java:29)¶	at graphics.AnArrayBasedScene.initScene(AnArrayBasedScene.java:81)¶	at graphics.AButtonArrayScene.initScene(AButtonArrayScene.java:21)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:564)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)¶	at bus.uigen.controller.models.AnInteractiveMethodInvoker.invokeDynamicCommand(AnInteractiveMethodInvoker.java:247)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:564)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:233)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)¶	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)¶	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)¶	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)¶	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)¶	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)¶	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)¶	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)¶	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)¶	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)¶	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="233" _type="PauseCommand" date="Sat Mar 19 18:49:16 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="13248612">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7824]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="232" _type="ExceptionCommand" date="Sat Mar 19 18:49:16 EDT 2022" starttimestamp="1647716908162" timestamp="13248612" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.models.AnInteractiveMethodInvoker.invokeDynamicCommand(AnInteractiveMethodInvoker.java:247)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:233)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6401)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5012)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4844)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4919)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4548)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="235" _type="PauseCommand" date="Sat Mar 19 18:49:22 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="13254166">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[5554]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="234" _type="ShellCommand" date="Sat Mar 19 18:49:22 EDT 2022" starttimestamp="1647716908162" timestamp="13254166" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="237" _type="MoveCaretCommand" caretOffset="507" date="Sat Mar 19 18:49:22 EDT 2022" docOffset="840" starttimestamp="1647716908162" timestamp="13254416" />
  <Command __id="239" _type="PauseCommand" date="Sat Mar 19 18:49:29 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="13261533">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7117]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="238" _type="ShellCommand" date="Sat Mar 19 18:49:29 EDT 2022" starttimestamp="1647716908162" timestamp="13261533" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="241" _type="PauseCommand" date="Sat Mar 19 18:49:36 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="13267905">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6372]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="240" _type="ShellCommand" date="Sat Mar 19 18:49:36 EDT 2022" starttimestamp="1647716908162" timestamp="13267905" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="242" _type="EclipseCommand" commandID="org.eclipse.ui.project.properties" date="Sat Mar 19 18:49:36 EDT 2022" starttimestamp="1647716908162" timestamp="13267950" />
  <Command __id="244" _type="PauseCommand" date="Sat Mar 19 18:49:37 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13269359">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1409]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="243" _type="MoveCaretCommand" caretOffset="81" date="Sat Mar 19 18:49:37 EDT 2022" docOffset="414" starttimestamp="1647716908162" timestamp="13269359" />
  <Command __id="245" _type="SelectTextCommand" caretOffset="81" date="Sat Mar 19 18:49:37 EDT 2022" end="81" start="70" starttimestamp="1647716908162" timestamp="13269508" />
  <Command __id="246" _type="SelectTextCommand" caretOffset="91" date="Sat Mar 19 18:49:37 EDT 2022" end="91" start="64" starttimestamp="1647716908162" timestamp="13269669" />
  <Command __id="248" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 18:49:38 EDT 2022" starttimestamp="1647716908162" timestamp="13270385" />
  <Command __id="250" _type="PauseCommand" date="Sat Mar 19 18:49:40 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13272408">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2023]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="249" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 18:49:40 EDT 2022" starttimestamp="1647716908162" timestamp="13272408" />
  <Command __id="251" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:49:40 EDT 2022" starttimestamp="1647716908162" timestamp="13272500" />
  <Command __id="252" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:49:40 EDT 2022" starttimestamp="1647716908162" timestamp="13272546" />
  <DocumentChange __id="36" _type="Insert" date="Sat Mar 19 15:09:06 EDT 2022" docASTNodeCount="357" docActiveCodeLength="2141" docExpressionCount="251" docLength="2748" length="13" offset="1609" repeat="13" starttimestamp="1647716908162" timestamp="38625" timestamp2="40297">
    <text><![CDATA[ObjectEditor.]]></text>
  </DocumentChange>
  <DocumentChange __id="68" _type="Insert" date="Sat Mar 19 15:09:14 EDT 2022" docASTNodeCount="360" docActiveCodeLength="2156" docExpressionCount="253" docLength="2763" length="15" offset="1622" repeat="15" starttimestamp="1647716908162" timestamp="46829" timestamp2="49393">
    <text><![CDATA[confirmSelected]]></text>
  </DocumentChange>
  <DocumentChange __id="102" _type="Insert" date="Sat Mar 19 15:09:21 EDT 2022" docASTNodeCount="342" docActiveCodeLength="2181" docExpressionCount="240" docLength="2788" length="25" offset="1637" repeat="23" starttimestamp="1647716908162" timestamp="53026" timestamp2="57132">
    <text><![CDATA[MethodParameters(false)'']]></text>
  </DocumentChange>
  <DocumentChange __id="149" _type="Delete" date="Sat Mar 19 15:09:26 EDT 2022" docASTNodeCount="360" docActiveCodeLength="2179" docExpressionCount="253" docLength="2786" endLine="61" length="2" offset="1660" repeat="2" startLine="61" starttimestamp="1647716908162" timestamp="58052" timestamp2="58075">
    <text><![CDATA['']]></text>
  </DocumentChange>
  <DocumentChange __id="152" _type="Insert" date="Sat Mar 19 15:09:26 EDT 2022" docASTNodeCount="360" docActiveCodeLength="2180" docExpressionCount="253" docLength="2787" length="1" offset="1660" starttimestamp="1647716908162" timestamp="58358">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="236" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 18:49:22 EDT 2022" docASTNodeCount="860" docActiveCodeLength="4670" docExpressionCount="586" docLength="4670" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13254290">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AnAvatar.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶import java.beans.PropertyChangeListener;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import tags301.Comp301Tags;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶@Tags(Comp301Tags.AVATAR)¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"Arms",¶	"Legs",¶	"Neck",¶	"Torso",¶	"head",¶	"text",¶	"plate"¶})¶@EditablePropertyNames({¶	"Arms",¶	"Legs",¶	"Neck",¶	"Torso",¶	"head",¶	"text"¶})¶public class AnAvatar implements Avatar {¶	Angle Legs;¶	Angle Arms;¶	Line Torso;¶	Line Neck;¶	StringShape text;¶	Head head;¶	String headImage = "";¶	String plateImage = "";¶	Plate plate;¶	¶	int INIT_X = 50;¶	int INIT_Y = 50;¶	int INIT_Radius = 20;¶	int INIT_Neck = 10;¶	int INIT_Head = 99;¶¶	¶	public AnAvatar() {¶		Legs = new AnAngle();¶		Legs.moveX(INIT_X);¶		Legs.moveY(INIT_Y+40);¶		Arms = new AnAngle();¶		Arms.moveX(INIT_X);¶		Arms.moveY(INIT_Y);¶		Torso = new ALine();¶		Torso.setX(INIT_X);¶		Torso.setY(INIT_X);¶		Neck = new ALine();¶		Neck.setHeight(10);¶		Neck.setWidth(0);¶		Neck.setRadius(INIT_Radius);¶		Neck.setX(INIT_X);¶		Neck.setY(INIT_Y-INIT_Neck);¶		head = new AHead();¶		text = new AStringShape();¶		text.setText("");¶		head.setImageFileName(headImage);¶		head.setX(13);¶		head.setY(INIT_Y-INIT_Head);¶		head.setHeight(90);¶		head.setWidth(80);¶		plate = new APlate();¶		plate.setImageFileName(plateImage);¶		plate.setHeight(0);¶		plate.setWidth(0);¶		plate.setX(INIT_X-20);¶		plate.setY(INIT_Y+30);¶		plate.setZIndex(60000);¶	}¶	¶	@Override¶	public Plate getPlate() {¶		return plate;¶	}¶¶	@Override¶	public void setPlate(Plate newPlate) {¶		plate = newPlate;¶	}¶¶	@Override¶	public Angle getArms() {¶		return Arms;¶	}¶	¶	@Override¶	public void setArms(Angle NewArms) {¶		Arms = NewArms;¶	}¶¶¶	@Override¶	public Angle getLegs() {¶		return Legs;¶	}¶	¶	@Override¶	public void setLegs(Angle NewLegs) {¶		Legs = NewLegs;¶	}¶¶¶	@Override¶	public Line getTorso() {¶		return Torso;¶	}¶	¶	@Override¶	public void setTorso(Line NewTorso) {¶		Torso = NewTorso;¶	}¶¶¶	@Override¶	public Line getNeck() {¶		return Neck;¶	}¶	¶	@Override¶	public void setNeck(Line newNeck) {¶		Neck = newNeck;¶	}¶	¶	@Override¶	public StringShape getText() {¶		return text;¶	}¶	¶	@Override¶	public void setText(StringShape NewText) {¶		text = NewText;¶	}¶	¶¶	@Override¶	public Head getHead() {¶		return head;¶	}¶¶	@Override¶	public void setHead(Head NewHead) {¶		head = NewHead;¶	}¶	¶	@Override¶	public void dropPlate(String imageName) {¶		plate.setImageFileName(imageName);¶		plate.setHeight(40);¶		plate.setWidth(40);¶	}¶	¶	@Override¶	public void goBack(int X, int Y) {¶		Legs.move(X, Y);¶		Arms.move(X, Y);¶		Torso.move(X, Y);¶		Neck.move(X, Y);¶		head.move(X, Y);¶	}¶	¶	@Override¶	public void move(int X, int Y) {¶		Legs.move(X, Y);¶		Arms.move(X, Y);¶		Torso.move(X, Y);¶		Neck.move(X, Y);¶		head.move(X, Y);¶		plate.move(X, Y);¶	}¶	¶	@Override¶	public void moveTo(int newX, int newY) {¶		Legs.moveTo(newX, newY);¶		Arms.moveTo(newX, newY);¶		Torso.moveTo(newX, newY);¶		Neck.moveTo(newX, newY);¶		head.moveTo(newX, newY);	¶		plate.moveTo(newX, newY);¶	}¶	¶	@Override¶	public void scale(double ratio) {¶		Legs.getRightLine().setRadius(Legs.getRightLine().getRadius()*ratio);¶		Legs.getLeftLine().setRadius(Legs.getLeftLine().getRadius()*ratio);¶		Arms.getRightLine().setRadius(Arms.getRightLine().getRadius()*ratio);¶		Arms.getLeftLine().setRadius(Arms.getLeftLine().getRadius()*ratio);¶		Neck.setRadius(Neck.getRadius()*ratio);¶		Torso.setRadius(Torso.getRadius()*ratio);¶	}¶	¶	¶	@Override¶	public void addPropertyChangeListener(Avatar avatarParameter, PropertyChangeListener aListener) {¶		avatarParameter.getArms().addPropertyChangeListener(getArms(), aListener);¶		avatarParameter.getLegs().addPropertyChangeListener(getLegs(), aListener);¶		avatarParameter.getHead().addPropertyChangeListener(aListener);¶		avatarParameter.getNeck().addPropertyChangeListener(aListener);¶		avatarParameter.getTorso().addPropertyChangeListener(aListener);¶		avatarParameter.getText().addPropertyChangeListener(aListener);¶	}¶	¶	public static void main(String[] args) {¶		Avatar scene = new AnAvatar();¶		scene.getHead().setImageFileName("images/0.png");¶		OEFrame editor = ObjectEditor.edit(scene);¶		editor.showDrawPanel();¶	}¶¶¶¶¶	¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="247" _type="Delete" date="Sat Mar 19 18:49:38 EDT 2022" docASTNodeCount="855" docActiveCodeLength="4643" docExpressionCount="581" docLength="4643" endLine="14" length="27" offset="397" startLine="13" starttimestamp="1647716908162" timestamp="13270354">
    <text><![CDATA[@Tags(Comp301Tags.AVATAR)
]]></text>
  </DocumentChange>
  <Command __id="254" _type="PauseCommand" date="Sat Mar 19 18:49:44 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13276480">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3934]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="255" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 18:49:44 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="13276709" />
  <Command __id="257" _type="PauseCommand" date="Sat Mar 19 18:49:46 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13278184">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1475]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="256" _type="MoveCaretCommand" caretOffset="86" date="Sat Mar 19 18:49:46 EDT 2022" docOffset="471" starttimestamp="1647716908162" timestamp="13278184" />
  <Command __id="258" _type="SelectTextCommand" caretOffset="94" date="Sat Mar 19 18:49:46 EDT 2022" end="94" start="81" starttimestamp="1647716908162" timestamp="13278334" />
  <Command __id="259" _type="SelectTextCommand" caretOffset="97" date="Sat Mar 19 18:49:46 EDT 2022" end="97" start="63" starttimestamp="1647716908162" timestamp="13278486" />
  <Command __id="261" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 18:49:47 EDT 2022" starttimestamp="1647716908162" timestamp="13279062" />
  <Command __id="263" _type="PauseCommand" date="Sat Mar 19 18:49:48 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13280432">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1369]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="262" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 18:49:48 EDT 2022" starttimestamp="1647716908162" timestamp="13280431" />
  <Command __id="264" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:49:48 EDT 2022" starttimestamp="1647716908162" timestamp="13280524" />
  <Command __id="265" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:49:48 EDT 2022" starttimestamp="1647716908162" timestamp="13280561" />
  <Command __id="253" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 18:49:44 EDT 2022" docASTNodeCount="411" docActiveCodeLength="2527" docExpressionCount="260" docLength="2796" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13276480">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ALine.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import tags301.Comp301Tags;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.models.PropertyListenerRegisterer;

@Tags(Comp301Tags.ROTATING_LINE)
@StructurePattern(StructurePatternNames.LINE_PATTERN)
@PropertyNames({
	"x",
	"y",
	"width",
	"height",
	"radius",
	"angle"
	})
@EditablePropertyNames({
	"radius",
	"angle",
	"x",
	"y",
	"height",
	"width"
})

public class ALine extends ABoundedShape implements Line, PropertyListenerRegisterer, BoundedShape {
	int x, y, width, height;
	double radius, angle;
	
	int INIT_Angle = 45;
	int INIT_Radius = 40;
	int INIT_Rotate = 6;
	int INIT_XY = 50;

	public ALine() {
		setRadius(INIT_Radius);
		setAngle(INIT_Angle);
		rotate(INIT_Rotate);
		setX(INIT_XY);
		setY(INIT_XY);
	}
	
	public ALine(int INIT_X, int INIT_Y, double INIT_Radius, int INIT_Rotate) {
		setX(INIT_X);
		setY(INIT_Y);
		setRadius(INIT_Radius);
		setAngle(INIT_Angle);
		rotate(INIT_Rotate);
	}

	public ALine(double newRadius, double newAngle) {
		setRadius(newRadius);
		setAngle(newAngle);
	}
//	
//	@Override
//	public void setX(int newX) {
//		int oldX = x;
//		x = newX;
//		
//	}
//
//	@Override
//	public void setY(int newY) {
//		int oldY = y;
//		y = newY;
//	}
//
//	@Override
//	public int getX() {
//		return x;
//	}
//
//	@Override
//	public int getY() {
//		return y;
//	}

	public double getRadius() {
		return radius;
	}

	public void setRadius(double newRadius) {
		double oldRadius = radius;
		radius = newRadius;
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "radius", oldRadius, radius));
		
	}

	public double getAngle() {
		return angle;	
	}

	public void setAngle(double newAngle) {
		double oldAngle = angle;
		angle = newAngle;
		height = (int) (getRadius()*Math.sin(angle));
		width = (int) (getRadius()*Math.cos(angle));
		
		setHeight(height);
		setWidth(width);

		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "angle", oldAngle, angle));
	}

	public void rotate(int units) {
		double rotate = units * Math.PI/32;
		setAngle(rotate + angle);
	}

	@Override
	public void move(int newX, int newY) {
		setX(getX()+newX);
		setY(getY()+newY);
	}
	
	@Override
	public void moveTo(int newX, int newY) {
		setX(newX);
		setY(newY);
	}
	
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		propertySupport.addPropertyChangeListener(arg0);
	}

}]]></snapshot>
  </Command>
  <DocumentChange __id="260" _type="Delete" date="Sat Mar 19 18:49:47 EDT 2022" docASTNodeCount="406" docActiveCodeLength="2493" docExpressionCount="255" docLength="2762" endLine="16" length="34" offset="448" startLine="15" starttimestamp="1647716908162" timestamp="13279042">
    <text><![CDATA[@Tags(Comp301Tags.ROTATING_LINE)
]]></text>
  </DocumentChange>
  <Command __id="267" _type="PauseCommand" date="Sat Mar 19 18:49:50 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13282457">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1895]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="266" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 18:49:50 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1596" docExpressionCount="147" docLength="1693" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13282456">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ALocatable.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import tags301.Comp301Tags;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.Tags;
import util.models.PropertyListenerRegisterer;


@Tags(Comp301Tags.LOCATABLE)
@PropertyNames({
	"x",
	"y",
	"ZIndex"
	})
@EditablePropertyNames({
	"x",
	"y",
	"ZIndex"
})
public class ALocatable implements Locatable, PropertyListenerRegisterer {
	int x, y;
	int ZIndex;
	
	PropertyListenerSupport propertySupport = new APropertyListenerSupport();
	
	//List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public ALocatable() {
	}
	
	@Override
	public void setX(int newX) {
		int oldX = x;
		x = newX;
		
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "x", oldX, newX));
		
	}

	@Override
	public void setY(int newY) {
		int oldY = y;
		y = newY;
		
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "x", oldY, newY));
	}

	@Override
	public int getX() {
		return x;
	}

	@Override
	public int getY() {
		return y;
	}
	
	@Override
	public int getZIndex() {
		return ZIndex;
		
	}
	
	@Override
	public void setZIndex(int newValue) {
		int oldZIndex = ZIndex;
		ZIndex = newValue;
		
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "ZIndex", oldZIndex, ZIndex));
		
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		propertySupport.addPropertyChangeListener(arg0);
	}
	
	

}
]]></snapshot>
  </Command>
  <Command __id="268" _type="MoveCaretCommand" caretOffset="1138" date="Sat Mar 19 18:49:50 EDT 2022" docOffset="1432" starttimestamp="1647716908162" timestamp="13282620" />
  <Command __id="269" _type="MoveCaretCommand" caretOffset="84" date="Sat Mar 19 18:49:51 EDT 2022" docOffset="378" starttimestamp="1647716908162" timestamp="13283611" />
  <Command __id="270" _type="SelectTextCommand" caretOffset="92" date="Sat Mar 19 18:49:52 EDT 2022" end="92" start="83" starttimestamp="1647716908162" timestamp="13283910" />
  <Command __id="271" _type="SelectTextCommand" caretOffset="95" date="Sat Mar 19 18:49:52 EDT 2022" end="95" start="65" starttimestamp="1647716908162" timestamp="13284099" />
  <Command __id="273" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 18:49:52 EDT 2022" starttimestamp="1647716908162" timestamp="13284702" />
  <Command __id="274" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 18:49:53 EDT 2022" starttimestamp="1647716908162" timestamp="13285376" />
  <Command __id="275" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:49:53 EDT 2022" starttimestamp="1647716908162" timestamp="13285759" />
  <Command __id="276" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:49:53 EDT 2022" starttimestamp="1647716908162" timestamp="13285792" />
  <DocumentChange __id="272" _type="Delete" date="Sat Mar 19 18:49:52 EDT 2022" docASTNodeCount="229" docActiveCodeLength="1566" docExpressionCount="142" docLength="1663" endLine="15" length="30" offset="359" startLine="14" starttimestamp="1647716908162" timestamp="13284663">
    <text><![CDATA[@Tags(Comp301Tags.LOCATABLE)
]]></text>
  </DocumentChange>
  <Command __id="278" _type="PauseCommand" date="Sat Mar 19 18:49:55 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13286865">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1073]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="279" _type="MoveCaretCommand" caretOffset="63" date="Sat Mar 19 18:49:55 EDT 2022" docOffset="448" starttimestamp="1647716908162" timestamp="13287024" />
  <Command __id="280" _type="MoveCaretCommand" caretOffset="141" date="Sat Mar 19 18:49:55 EDT 2022" docOffset="526" starttimestamp="1647716908162" timestamp="13287626" />
  <Command __id="282" _type="PauseCommand" date="Sat Mar 19 18:49:59 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13290876">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3250]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="277" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 18:49:55 EDT 2022" docASTNodeCount="406" docActiveCodeLength="2493" docExpressionCount="255" docLength="2762" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13286865">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ALine.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import tags301.Comp301Tags;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.models.PropertyListenerRegisterer;¶¶"), Diff(DELETE,"@Tags(Comp301Tags.ROTATING_LINE)¶"), Diff(EQUAL,"@StructurePattern(StructurePatternNames.LINE_PATTERN)¶@PropertyNames({¶	"x",¶	"y",¶	"width",¶	"height",¶	"radius",¶	"angle"¶	})¶@EditablePropertyNames({¶	"radius",¶	"angle",¶	"x",¶	"y",¶	"height",¶	"width"¶})¶¶public class ALine extends ABoundedShape implements Line, PropertyListenerRegisterer, BoundedShape {¶	int x, y, width, height;¶	double radius, angle;¶	¶	int INIT_Angle = 45;¶	int INIT_Radius = 40;¶	int INIT_Rotate = 6;¶	int INIT_XY = 50;¶¶	public ALine() {¶		setRadius(INIT_Radius);¶		setAngle(INIT_Angle);¶		rotate(INIT_Rotate);¶		setX(INIT_XY);¶		setY(INIT_XY);¶	}¶	¶	public ALine(int INIT_X, int INIT_Y, double INIT_Radius, int INIT_Rotate) {¶		setX(INIT_X);¶		setY(INIT_Y);¶		setRadius(INIT_Radius);¶		setAngle(INIT_Angle);¶		rotate(INIT_Rotate);¶	}¶¶	public ALine(double newRadius, double newAngle) {¶		setRadius(newRadius);¶		setAngle(newAngle);¶	}¶//	¶//	@Override¶//	public void setX(int newX) {¶//		int oldX = x;¶//		x = newX;¶//		¶//	}¶//¶//	@Override¶//	public void setY(int newY) {¶//		int oldY = y;¶//		y = newY;¶//	}¶//¶//	@Override¶//	public int getX() {¶//		return x;¶//	}¶//¶//	@Override¶//	public int getY() {¶//		return y;¶//	}¶¶	public double getRadius() {¶		return radius;¶	}¶¶	public void setRadius(double newRadius) {¶		double oldRadius = radius;¶		radius = newRadius;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "radius", oldRadius, radius));¶		¶	}¶¶	public double getAngle() {¶		return angle;	¶	}¶¶	public void setAngle(double newAngle) {¶		double oldAngle = angle;¶		angle = newAngle;¶		height = (int) (getRadius()*Math.sin(angle));¶		width = (int) (getRadius()*Math.cos(angle));¶		¶		setHeight(height);¶		setWidth(width);¶¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "angle", oldAngle, angle));¶	}¶¶	public void rotate(int units) {¶		double rotate = units * Math.PI/32;¶		setAngle(rotate + angle);¶	}¶¶	@Override¶	public void move(int newX, int newY) {¶		setX(getX()+newX);¶		setY(getY()+newY);¶	}¶	¶	@Override¶	public void moveTo(int newX, int newY) {¶		setX(newX);¶		setY(newY);¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		propertySupport.addPropertyChangeListener(arg0);¶	}¶¶}")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import tags301.Comp301Tags;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.models.PropertyListenerRegisterer;

@StructurePattern(StructurePatternNames.LINE_PATTERN)
@PropertyNames({
	"x",
	"y",
	"width",
	"height",
	"radius",
	"angle"
	})
@EditablePropertyNames({
	"radius",
	"angle",
	"x",
	"y",
	"height",
	"width"
})

public class ALine extends ABoundedShape implements Line, PropertyListenerRegisterer, BoundedShape {
	int x, y, width, height;
	double radius, angle;
	
	int INIT_Angle = 45;
	int INIT_Radius = 40;
	int INIT_Rotate = 6;
	int INIT_XY = 50;

	public ALine() {
		setRadius(INIT_Radius);
		setAngle(INIT_Angle);
		rotate(INIT_Rotate);
		setX(INIT_XY);
		setY(INIT_XY);
	}
	
	public ALine(int INIT_X, int INIT_Y, double INIT_Radius, int INIT_Rotate) {
		setX(INIT_X);
		setY(INIT_Y);
		setRadius(INIT_Radius);
		setAngle(INIT_Angle);
		rotate(INIT_Rotate);
	}

	public ALine(double newRadius, double newAngle) {
		setRadius(newRadius);
		setAngle(newAngle);
	}
//	
//	@Override
//	public void setX(int newX) {
//		int oldX = x;
//		x = newX;
//		
//	}
//
//	@Override
//	public void setY(int newY) {
//		int oldY = y;
//		y = newY;
//	}
//
//	@Override
//	public int getX() {
//		return x;
//	}
//
//	@Override
//	public int getY() {
//		return y;
//	}

	public double getRadius() {
		return radius;
	}

	public void setRadius(double newRadius) {
		double oldRadius = radius;
		radius = newRadius;
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "radius", oldRadius, radius));
		
	}

	public double getAngle() {
		return angle;	
	}

	public void setAngle(double newAngle) {
		double oldAngle = angle;
		angle = newAngle;
		height = (int) (getRadius()*Math.sin(angle));
		width = (int) (getRadius()*Math.cos(angle));
		
		setHeight(height);
		setWidth(width);

		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "angle", oldAngle, angle));
	}

	public void rotate(int units) {
		double rotate = units * Math.PI/32;
		setAngle(rotate + angle);
	}

	@Override
	public void move(int newX, int newY) {
		setX(getX()+newX);
		setY(getY()+newY);
	}
	
	@Override
	public void moveTo(int newX, int newY) {
		setX(newX);
		setY(newY);
	}
	
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		propertySupport.addPropertyChangeListener(arg0);
	}

}]]></snapshot>
  </Command>
  <Command __id="281" _type="MoveCaretCommand" caretOffset="174" date="Sat Mar 19 18:49:59 EDT 2022" docOffset="174" starttimestamp="1647716908162" timestamp="13290876" />
  <Command __id="283" _type="SelectTextCommand" caretOffset="185" date="Sat Mar 19 18:49:59 EDT 2022" end="185" start="174" starttimestamp="1647716908162" timestamp="13291029" />
  <Command __id="284" _type="SelectTextCommand" caretOffset="188" date="Sat Mar 19 18:49:59 EDT 2022" end="188" start="159" starttimestamp="1647716908162" timestamp="13291190" />
  <Command __id="286" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 18:49:59 EDT 2022" starttimestamp="1647716908162" timestamp="13291594" />
  <Command __id="289" _type="PauseCommand" date="Sat Mar 19 18:50:00 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13292698">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1104]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="288" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 18:50:00 EDT 2022" starttimestamp="1647716908162" timestamp="13292698" />
  <Command __id="291" _type="PauseCommand" date="Sat Mar 19 18:50:02 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13293942">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1244]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="290" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 18:50:02 EDT 2022" starttimestamp="1647716908162" timestamp="13293942" />
  <Command __id="292" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:50:02 EDT 2022" starttimestamp="1647716908162" timestamp="13294032" />
  <Command __id="293" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:50:02 EDT 2022" starttimestamp="1647716908162" timestamp="13294059" />
  <DocumentChange __id="285" _type="Delete" date="Sat Mar 19 18:49:59 EDT 2022" docASTNodeCount="402" docActiveCodeLength="2462" docExpressionCount="252" docLength="2731" endLine="8" length="31" offset="157" repeat="2" startLine="6" starttimestamp="1647716908162" timestamp="13291545" timestamp2="13292639">
    <text><![CDATA[
import tags301.Comp301Tags;
]]></text>
  </DocumentChange>
  <Command __id="295" _type="PauseCommand" date="Sat Mar 19 18:50:05 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13297684">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3625]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="296" _type="MoveCaretCommand" caretOffset="65" date="Sat Mar 19 18:50:06 EDT 2022" docOffset="359" starttimestamp="1647716908162" timestamp="13297839" />
  <Command __id="298" _type="PauseCommand" date="Sat Mar 19 18:50:09 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13301423">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3584]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="297" _type="MoveCaretCommand" caretOffset="176" date="Sat Mar 19 18:50:09 EDT 2022" docOffset="176" starttimestamp="1647716908162" timestamp="13301423" />
  <Command __id="299" _type="SelectTextCommand" caretOffset="185" date="Sat Mar 19 18:50:09 EDT 2022" end="185" start="174" starttimestamp="1647716908162" timestamp="13301565" />
  <Command __id="300" _type="SelectTextCommand" caretOffset="188" date="Sat Mar 19 18:50:09 EDT 2022" end="188" start="159" starttimestamp="1647716908162" timestamp="13301723" />
  <Command __id="302" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 18:50:10 EDT 2022" starttimestamp="1647716908162" timestamp="13302061" />
  <Command __id="304" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 18:50:10 EDT 2022" starttimestamp="1647716908162" timestamp="13302370" />
  <Command __id="305" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 18:50:11 EDT 2022" starttimestamp="1647716908162" timestamp="13302972" />
  <Command __id="306" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:50:11 EDT 2022" starttimestamp="1647716908162" timestamp="13303063" />
  <Command __id="307" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:50:11 EDT 2022" starttimestamp="1647716908162" timestamp="13303080" />
  <Command __id="294" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 18:50:05 EDT 2022" docASTNodeCount="229" docActiveCodeLength="1566" docExpressionCount="142" docLength="1663" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13297684">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ALocatable.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import tags301.Comp301Tags;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.Tags;¶import util.models.PropertyListenerRegisterer;¶¶¶"), Diff(DELETE,"@Tags(Comp301Tags.LOCATABLE)¶"), Diff(EQUAL,"@PropertyNames({¶	"x",¶	"y",¶	"ZIndex"¶	})¶@EditablePropertyNames({¶	"x",¶	"y",¶	"ZIndex"¶})¶public class ALocatable implements Locatable, PropertyListenerRegisterer {¶	int x, y;¶	int ZIndex;¶	¶	PropertyListenerSupport propertySupport = new APropertyListenerSupport();¶	¶	//List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public ALocatable() {¶	}¶	¶	@Override¶	public void setX(int newX) {¶		int oldX = x;¶		x = newX;¶		¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "x", oldX, newX));¶		¶	}¶¶	@Override¶	public void setY(int newY) {¶		int oldY = y;¶		y = newY;¶		¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "x", oldY, newY));¶	}¶¶	@Override¶	public int getX() {¶		return x;¶	}¶¶	@Override¶	public int getY() {¶		return y;¶	}¶	¶	@Override¶	public int getZIndex() {¶		return ZIndex;¶		¶	}¶	¶	@Override¶	public void setZIndex(int newValue) {¶		int oldZIndex = ZIndex;¶		ZIndex = newValue;¶		¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "ZIndex", oldZIndex, ZIndex));¶		¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		propertySupport.addPropertyChangeListener(arg0);¶	}¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import tags301.Comp301Tags;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.Tags;
import util.models.PropertyListenerRegisterer;


@PropertyNames({
	"x",
	"y",
	"ZIndex"
	})
@EditablePropertyNames({
	"x",
	"y",
	"ZIndex"
})
public class ALocatable implements Locatable, PropertyListenerRegisterer {
	int x, y;
	int ZIndex;
	
	PropertyListenerSupport propertySupport = new APropertyListenerSupport();
	
	//List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public ALocatable() {
	}
	
	@Override
	public void setX(int newX) {
		int oldX = x;
		x = newX;
		
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "x", oldX, newX));
		
	}

	@Override
	public void setY(int newY) {
		int oldY = y;
		y = newY;
		
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "x", oldY, newY));
	}

	@Override
	public int getX() {
		return x;
	}

	@Override
	public int getY() {
		return y;
	}
	
	@Override
	public int getZIndex() {
		return ZIndex;
		
	}
	
	@Override
	public void setZIndex(int newValue) {
		int oldZIndex = ZIndex;
		ZIndex = newValue;
		
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "ZIndex", oldZIndex, ZIndex));
		
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		propertySupport.addPropertyChangeListener(arg0);
	}
	
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="301" _type="Delete" date="Sat Mar 19 18:50:10 EDT 2022" docASTNodeCount="225" docActiveCodeLength="1535" docExpressionCount="139" docLength="1632" endLine="8" length="31" offset="157" repeat="2" startLine="6" starttimestamp="1647716908162" timestamp="13302044" timestamp2="13302348">
    <text><![CDATA[
import tags301.Comp301Tags;
]]></text>
  </DocumentChange>
  <Command __id="309" _type="PauseCommand" date="Sat Mar 19 18:50:12 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13304760">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1680]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="310" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 18:50:13 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="13304906" />
  <Command __id="312" _type="PauseCommand" date="Sat Mar 19 18:50:14 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13305997">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1091]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="311" _type="MoveCaretCommand" caretOffset="79" date="Sat Mar 19 18:50:14 EDT 2022" docOffset="141" starttimestamp="1647716908162" timestamp="13305997" />
  <Command __id="313" _type="SelectTextCommand" caretOffset="83" date="Sat Mar 19 18:50:14 EDT 2022" end="83" start="72" starttimestamp="1647716908162" timestamp="13306291" />
  <Command __id="314" _type="SelectTextCommand" caretOffset="92" date="Sat Mar 19 18:50:14 EDT 2022" end="92" start="66" starttimestamp="1647716908162" timestamp="13306459" />
  <Command __id="316" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 18:50:14 EDT 2022" starttimestamp="1647716908162" timestamp="13306810" />
  <Command __id="317" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 18:50:15 EDT 2022" starttimestamp="1647716908162" timestamp="13307747" />
  <Command __id="318" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:50:16 EDT 2022" starttimestamp="1647716908162" timestamp="13307885" />
  <Command __id="319" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:50:16 EDT 2022" starttimestamp="1647716908162" timestamp="13307897" />
  <Command __id="321" _type="PauseCommand" date="Sat Mar 19 18:50:17 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13309153">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1256]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="320" _type="MoveCaretCommand" caretOffset="83" date="Sat Mar 19 18:50:17 EDT 2022" docOffset="83" starttimestamp="1647716908162" timestamp="13309153" />
  <Command __id="322" _type="SelectTextCommand" caretOffset="92" date="Sat Mar 19 18:50:17 EDT 2022" end="92" start="81" starttimestamp="1647716908162" timestamp="13309281" />
  <Command __id="323" _type="SelectTextCommand" caretOffset="95" date="Sat Mar 19 18:50:17 EDT 2022" end="95" start="66" starttimestamp="1647716908162" timestamp="13309431" />
  <Command __id="325" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 18:50:18 EDT 2022" starttimestamp="1647716908162" timestamp="13310385" />
  <Command __id="327" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 18:50:18 EDT 2022" starttimestamp="1647716908162" timestamp="13310760" />
  <Command __id="328" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 18:50:19 EDT 2022" starttimestamp="1647716908162" timestamp="13311246" />
  <Command __id="329" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:50:19 EDT 2022" starttimestamp="1647716908162" timestamp="13311335" />
  <Command __id="330" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:50:19 EDT 2022" starttimestamp="1647716908162" timestamp="13311347" />
  <Command __id="308" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 18:50:12 EDT 2022" docASTNodeCount="82" docActiveCodeLength="489" docExpressionCount="40" docLength="535" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13304760">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\Angle.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeListener;

import tags301.Comp301Tags;
import util.annotations.Tags;

@Tags(Comp301Tags.ANGLE)
public interface Angle {

	public Line getLeftLine();
	public Line getRightLine();
	public void move(int MoveX, int MoveY);
//	void setX(int NewX);
//	void setY(int NewY);
	void moveX(int NewX);
	void moveY(int NewY);
	void moveTo(int newX, int newY);
	void removeArms();
	void addPropertyChangeListener(Angle angleParameter, PropertyChangeListener aListener);

	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="315" _type="Delete" date="Sat Mar 19 18:50:14 EDT 2022" docASTNodeCount="77" docActiveCodeLength="463" docExpressionCount="35" docLength="509" endLine="8" length="26" offset="128" startLine="7" starttimestamp="1647716908162" timestamp="13306782">
    <text><![CDATA[@Tags(Comp301Tags.ANGLE)
]]></text>
  </DocumentChange>
  <DocumentChange __id="324" _type="Delete" date="Sat Mar 19 18:50:18 EDT 2022" docASTNodeCount="73" docActiveCodeLength="432" docExpressionCount="32" docLength="478" endLine="5" length="31" offset="64" repeat="2" startLine="3" starttimestamp="1647716908162" timestamp="13310357" timestamp2="13310744">
    <text><![CDATA[
import tags301.Comp301Tags;
]]></text>
  </DocumentChange>
  <Command __id="332" _type="PauseCommand" date="Sat Mar 19 18:50:21 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13312928">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1581]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="340" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 18:50:24 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="13316000" />
  <Command __id="339" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 18:50:23 EDT 2022" projectName="null" starttimestamp="1647716908162" timestamp="13315819">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="342" _type="PauseCommand" date="Sat Mar 19 18:50:26 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13318034">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2034]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="343" _type="SelectTextCommand" caretOffset="119" date="Sat Mar 19 18:50:26 EDT 2022" end="119" start="64" starttimestamp="1647716908162" timestamp="13318204" />
  <Command __id="345" _type="PauseCommand" date="Sat Mar 19 18:50:29 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13321433">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3229]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="344" _type="MoveCaretCommand" caretOffset="135" date="Sat Mar 19 18:50:29 EDT 2022" docOffset="135" starttimestamp="1647716908162" timestamp="13321433" />
  <Command __id="346" _type="SelectTextCommand" caretOffset="137" date="Sat Mar 19 18:50:29 EDT 2022" end="137" start="130" starttimestamp="1647716908162" timestamp="13321594" />
  <Command __id="347" _type="SelectTextCommand" caretOffset="152" date="Sat Mar 19 18:50:29 EDT 2022" end="152" start="123" starttimestamp="1647716908162" timestamp="13321753" />
  <Command __id="348" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 18:50:30 EDT 2022" starttimestamp="1647716908162" timestamp="13322056" />
  <Command __id="349" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:50:30 EDT 2022" starttimestamp="1647716908162" timestamp="13322609" />
  <Command __id="350" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:50:30 EDT 2022" starttimestamp="1647716908162" timestamp="13322663" />
  <Command __id="341" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 18:50:26 EDT 2022" docASTNodeCount="855" docActiveCodeLength="4643" docExpressionCount="581" docLength="4643" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13318034">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AnAvatar.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶import java.beans.PropertyChangeListener;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import tags301.Comp301Tags;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"Arms",¶	"Legs",¶	"Neck",¶	"Torso",¶	"head",¶	"text",¶	"plate"¶})¶@EditablePropertyNames({¶	"Arms",¶	"Legs",¶	"Neck",¶	"Torso",¶	"head",¶	"text"¶})¶public class AnAvatar implements Avatar {¶	Angle Legs;¶	Angle Arms;¶	Line Torso;¶	Line Neck;¶	StringShape text;¶	Head head;¶	String headImage = "";¶	String plateImage = "";¶	Plate plate;¶	¶	int INIT_X = 50;¶	int INIT_Y = 50;¶	int INIT_Radius = 20;¶	int INIT_Neck = 10;¶	int INIT_Head = 99;¶¶	¶	public AnAvatar() {¶		Legs = new AnAngle();¶		Legs.moveX(INIT_X);¶		Legs.moveY(INIT_Y+40);¶		Arms = new AnAngle();¶		Arms.moveX(INIT_X);¶		Arms.moveY(INIT_Y);¶		Torso = new ALine();¶		Torso.setX(INIT_X);¶		Torso.setY(INIT_X);¶		Neck = new ALine();¶		Neck.setHeight(10);¶		Neck.setWidth(0);¶		Neck.setRadius(INIT_Radius);¶		Neck.setX(INIT_X);¶		Neck.setY(INIT_Y-INIT_Neck);¶		head = new AHead();¶		text = new AStringShape();¶		text.setText("");¶		head.setImageFileName(headImage);¶		head.setX(13);¶		head.setY(INIT_Y-INIT_Head);¶		head.setHeight(90);¶		head.setWidth(80);¶		plate = new APlate();¶		plate.setImageFileName(plateImage);¶		plate.setHeight(0);¶		plate.setWidth(0);¶		plate.setX(INIT_X-20);¶		plate.setY(INIT_Y+30);¶		plate.setZIndex(60000);¶	}¶	¶	@Override¶	public Plate getPlate() {¶		return plate;¶	}¶¶	@Override¶	public void setPlate(Plate newPlate) {¶		plate = newPlate;¶	}¶¶	@Override¶	public Angle getArms() {¶		return Arms;¶	}¶	¶	@Override¶	public void setArms(Angle NewArms) {¶		Arms = NewArms;¶	}¶¶¶	@Override¶	public Angle getLegs() {¶		return Legs;¶	}¶	¶	@Override¶	public void setLegs(Angle NewLegs) {¶		Legs = NewLegs;¶	}¶¶¶	@Override¶	public Line getTorso() {¶		return Torso;¶	}¶	¶	@Override¶	public void setTorso(Line NewTorso) {¶		Torso = NewTorso;¶	}¶¶¶	@Override¶	public Line getNeck() {¶		return Neck;¶	}¶	¶	@Override¶	public void setNeck(Line newNeck) {¶		Neck = newNeck;¶	}¶	¶	@Override¶	public StringShape getText() {¶		return text;¶	}¶	¶	@Override¶	public void setText(StringShape NewText) {¶		text = NewText;¶	}¶	¶¶	@Override¶	public Head getHead() {¶		return head;¶	}¶¶	@Override¶	public void setHead(Head NewHead) {¶		head = NewHead;¶	}¶	¶	@Override¶	public void dropPlate(String imageName) {¶		plate.setImageFileName(imageName);¶		plate.setHeight(40);¶		plate.setWidth(40);¶	}¶	¶	@Override¶	public void goBack(int X, int Y) {¶		Legs.move(X, Y);¶		Arms.move(X, Y);¶		Torso.move(X, Y);¶		Neck.move(X, Y);¶		head.move(X, Y);¶	}¶	¶	@Override¶	public void move(int X, int Y) {¶		Legs.move(X, Y);¶		Arms.move(X, Y);¶		Torso.move(X, Y);¶		Neck.move(X, Y);¶		head.move(X, Y);¶		plate.move(X, Y);¶	}¶	¶	@Override¶	public void moveTo(int newX, int newY) {¶		Legs.moveTo(newX, newY);¶		Arms.moveTo(newX, newY);¶		Torso.moveTo(newX, newY);¶		Neck.moveTo(newX, newY);¶		head.moveTo(newX, newY);	¶		plate.moveTo(newX, newY);¶	}¶	¶	@Override¶	public void scale(double ratio) {¶		Legs.getRightLine().setRadius(Legs.getRightLine().getRadius()*ratio);¶		Legs.getLeftLine().setRadius(Legs.getLeftLine().getRadius()*ratio);¶		Arms.getRightLine().setRadius(Arms.getRightLine().getRadius()*ratio);¶		Arms.getLeftLine().setRadius(Arms.getLeftLine().getRadius()*ratio);¶		Neck.setRadius(Neck.getRadius()*ratio);¶		Torso.setRadius(Torso.getRadius()*ratio);¶	}¶	¶	¶	@Override¶	public void addPropertyChangeListener(Avatar avatarParameter, PropertyChangeListener aListener) {¶		avatarParameter.getArms().addPropertyChangeListener(getArms(), aListener);¶		avatarParameter.getLegs().addPropertyChangeListener(getLegs(), aListener);¶		avatarParameter.getHead().addPropertyChangeListener(aListener);¶		avatarParameter.getNeck().addPropertyChangeListener(aListener);¶		avatarParameter.getTorso().addPropertyChangeListener(aListener);¶		avatarParameter.getText().addPropertyChangeListener(aListener);¶	}¶	¶	public static void main(String[] args) {¶		Avatar scene = new AnAvatar();¶		scene.getHead().setImageFileName("images/0.png");¶		OEFrame editor = ObjectEditor.edit(scene);¶		editor.showDrawPanel();¶	}¶¶¶¶¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="352" _type="PauseCommand" date="Sat Mar 19 18:50:33 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13325256">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2593]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="351" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 18:50:33 EDT 2022" docASTNodeCount="60" docActiveCodeLength="384" docExpressionCount="30" docLength="384" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13325256">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\Locatable.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import tags301.Comp301Tags;
import util.annotations.Tags;
import util.models.PropertyListenerRegisterer;

@Tags(Comp301Tags.LOCATABLE)
public interface Locatable extends PropertyListenerRegisterer {

	public void setX(int NewX);
	public void setY(int NewY);
	public int getX();
	public int getY();
	int getZIndex();
	void setZIndex(int newValue);
}
]]></snapshot>
  </Command>
  <Command __id="353" _type="MoveCaretCommand" caretOffset="305" date="Sat Mar 19 18:50:33 EDT 2022" docOffset="384" starttimestamp="1647716908162" timestamp="13325444" />
  <Command __id="354" _type="MoveCaretCommand" caretOffset="67" date="Sat Mar 19 18:50:34 EDT 2022" docOffset="146" starttimestamp="1647716908162" timestamp="13326355" />
  <Command __id="355" _type="SelectTextCommand" caretOffset="69" date="Sat Mar 19 18:50:34 EDT 2022" end="69" start="58" starttimestamp="1647716908162" timestamp="13326497" />
  <Command __id="356" _type="SelectTextCommand" caretOffset="82" date="Sat Mar 19 18:50:34 EDT 2022" end="82" start="52" starttimestamp="1647716908162" timestamp="13326644" />
  <DocumentChange __id="357" _type="Delete" date="Sat Mar 19 18:50:35 EDT 2022" docASTNodeCount="55" docActiveCodeLength="354" docExpressionCount="25" docLength="354" endLine="7" length="30" offset="131" startLine="6" starttimestamp="1647716908162" timestamp="13327077">
    <text><![CDATA[@Tags(Comp301Tags.LOCATABLE)
]]></text>
  </DocumentChange>
  <Command __id="358" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 18:50:35 EDT 2022" starttimestamp="1647716908162" timestamp="13327104" />
  <Command __id="359" _type="MoveCaretCommand" caretOffset="32" date="Sat Mar 19 18:50:36 EDT 2022" docOffset="32" starttimestamp="1647716908162" timestamp="13327984" />
  <Command __id="360" _type="SelectTextCommand" caretOffset="35" date="Sat Mar 19 18:50:36 EDT 2022" end="35" start="28" starttimestamp="1647716908162" timestamp="13328126" />
  <Command __id="361" _type="SelectTextCommand" caretOffset="50" date="Sat Mar 19 18:50:36 EDT 2022" end="50" start="21" starttimestamp="1647716908162" timestamp="13328272" />
  <Command __id="363" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 18:50:36 EDT 2022" starttimestamp="1647716908162" timestamp="13328524" />
  <Command __id="365" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 18:50:36 EDT 2022" starttimestamp="1647716908162" timestamp="13328789" />
  <Command __id="366" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 18:50:37 EDT 2022" starttimestamp="1647716908162" timestamp="13329412" />
  <Command __id="367" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:50:37 EDT 2022" starttimestamp="1647716908162" timestamp="13329488" />
  <Command __id="368" _type="EclipseCommand" commandID="" date="Sat Mar 19 18:50:37 EDT 2022" starttimestamp="1647716908162" timestamp="13329720" />
  <DocumentChange __id="362" _type="Delete" date="Sat Mar 19 18:50:36 EDT 2022" docASTNodeCount="39" docActiveCodeLength="244" docExpressionCount="12" docLength="244" endLine="5" length="110" offset="19" repeat="2" startLine="1" starttimestamp="1647716908162" timestamp="13328513" timestamp2="13328786">
    <text><![CDATA[
import tags301.Comp301Tags;
import util.annotations.Tags;
import util.models.PropertyListenerRegisterer;
]]></text>
  </DocumentChange>
  <Command __id="370" _type="PauseCommand" date="Sat Mar 19 18:50:40 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13332595">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2875]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="371" _type="UndoCommand" date="Sat Mar 19 18:50:40 EDT 2022" starttimestamp="1647716908162" timestamp="13332601" />
  <Command __id="373" _type="UndoCommand" date="Sat Mar 19 18:50:41 EDT 2022" starttimestamp="1647716908162" timestamp="13333492" />
  <Command __id="375" _type="PauseCommand" date="Sat Mar 19 18:50:42 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13334721">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1229]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="374" _type="MoveCaretCommand" caretOffset="79" date="Sat Mar 19 18:50:42 EDT 2022" docOffset="79" starttimestamp="1647716908162" timestamp="13334721" />
  <Command __id="376" _type="MoveCaretCommand" caretOffset="38" date="Sat Mar 19 18:50:43 EDT 2022" docOffset="38" starttimestamp="1647716908162" timestamp="13335719" />
  <Command __id="377" _type="SelectTextCommand" caretOffset="47" date="Sat Mar 19 18:50:44 EDT 2022" end="47" start="36" starttimestamp="1647716908162" timestamp="13335881" />
  <Command __id="378" _type="SelectTextCommand" caretOffset="50" date="Sat Mar 19 18:50:44 EDT 2022" end="50" start="21" starttimestamp="1647716908162" timestamp="13336036" />
  <Command __id="380" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 18:50:45 EDT 2022" starttimestamp="1647716908162" timestamp="13336951" />
  <Command __id="382" _type="PauseCommand" date="Sat Mar 19 18:50:46 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13338047">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1096]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="388" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 18:50:55 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13347137" type="Run" />
  <Command __id="390" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 18:50:55 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13347138" type="Run" />
  <Command __id="391" _type="ShellCommand" date="Sat Mar 19 18:50:56 EDT 2022" starttimestamp="1647716908162" timestamp="13347858" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="392" _type="ConsoleOutput" date="Sat Mar 19 18:50:56 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13348115" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
E** Could not invoke addPropertyChangeListener ongraphics.AButtonArrayScene@2b40ff9c
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"class java.lang.Error¶java.lang.Error: Unresolved compilation problems: ¶	The import tags301 cannot be resolved¶	Comp301Tags cannot be resolved to a variable¶¶	at graphics.ALocatable.<init>(ALocatable.java:8)¶	at graphics.ABoundedShape.<init>(ABoundedShape.java:30)¶	at graphics.ACircle.<init>(ACircle.java:22)¶	at graphics.ABoundedBufferView.<init>(ABoundedBufferView.java:29)¶	at graphics.AnArrayBasedScene.initScene(AnArrayBasedScene.java:81)¶	at graphics.AButtonArrayScene.initScene(AButtonArrayScene.java:21)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:564)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationM"), Diff(INSERT,"W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyCh"), Diff(EQUAL,"an"), Diff(DELETE,"a"), Diff(EQUAL,"ge"), Diff(DELETE,"r.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)¶	at bus.uigen.controller.models.AnInteractiveMethodInvoker.invokeDynamicCommand(AnInteractiveMethodInvoker.java:247)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:564)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:233)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)¶	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)¶	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)¶	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)¶	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)¶	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)¶	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)¶	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)¶	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)¶	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)¶	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)"), Diff(INSERT,"Listener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶E** Could not invoke addPropertyChangeListener ongraphics.AButtonArrayScene@2b40ff9c"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="393" _type="ConsoleOutput" date="Sat Mar 19 18:50:56 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13348192" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Buffer not in range.
W*** Value: null of Root.Chef List not in range.
W*** Value: null of Root.Patron List not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶E** Could not invoke addPropertyChangeListener ongraphics.AButtonArrayScene@2b40ff9c"), Diff(INSERT,"Value: null of Root.Buffer not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Patron List not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="395" _type="PauseCommand" date="Sat Mar 19 18:51:01 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="13353224">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5032]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="394" _type="ShellCommand" date="Sat Mar 19 18:51:01 EDT 2022" starttimestamp="1647716908162" timestamp="13353224" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="396" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 18:51:01 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13353407" type="Run" />
  <Command __id="397" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 18:51:01 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13353407" type="Run" />
  <DocumentChange __id="369" _type="Insert" date="Sat Mar 19 18:50:40 EDT 2022" docASTNodeCount="55" docActiveCodeLength="354" docExpressionCount="25" docLength="354" length="110" offset="19" repeat="2" starttimestamp="1647716908162" timestamp="13332595" timestamp2="13333488">
    <text><![CDATA[
import tags301.Comp301Tags;
import util.annotations.Tags;
import util.models.PropertyListenerRegisterer;
]]></text>
  </DocumentChange>
  <DocumentChange __id="379" _type="Delete" date="Sat Mar 19 18:50:45 EDT 2022" docASTNodeCount="51" docActiveCodeLength="325" docExpressionCount="22" docLength="325" endLine="3" length="29" offset="21" startLine="2" starttimestamp="1647716908162" timestamp="13336934">
    <text><![CDATA[import tags301.Comp301Tags;
]]></text>
  </DocumentChange>
  <Command __id="399" _type="PauseCommand" date="Sat Mar 19 18:51:02 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13354768">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1361]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="400" _type="MoveCaretCommand" caretOffset="1032" date="Sat Mar 19 18:51:03 EDT 2022" docOffset="1908" starttimestamp="1647716908162" timestamp="13354916" />
  <Command __id="402" _type="PauseCommand" date="Sat Mar 19 18:51:08 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="13360438">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5522]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="401" _type="SelectTextCommand" caretOffset="180" date="Sat Mar 19 18:51:08 EDT 2022" end="180" start="174" starttimestamp="1647716908162" timestamp="13360438" />
  <Command __id="404" _type="PauseCommand" date="Sat Mar 19 18:51:10 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13361884">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1446]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="405" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 18:51:23 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13375103" type="Run" />
  <Command __id="407" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 18:51:23 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13375104" type="Run" />
  <Command __id="408" _type="ShellCommand" date="Sat Mar 19 18:51:24 EDT 2022" starttimestamp="1647716908162" timestamp="13375876" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="409" _type="ConsoleOutput" date="Sat Mar 19 18:51:24 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13376006" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Buffer not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.P"), Diff(INSERT,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annot"), Diff(EQUAL,"at"), Diff(DELETE,"r"), Diff(INSERT,"i"), Diff(EQUAL,"on"), Diff(DELETE," List not in range."), Diff(INSERT,": @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="410" _type="ConsoleOutput" date="Sat Mar 19 18:51:24 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13376082" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AButtonArrayScene@2b40ff9c
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AButtonArrayScene@2b40ff9c"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="411" _type="ConsoleOutput" date="Sat Mar 19 18:51:24 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13376207" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Buffer not in range.
W*** Value: null of Root.Chef List not in range.
W*** Value: null of Root.Patron List not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.AButtonArrayScene@2b40ff9c"), Diff(INSERT,"Value: null of Root.Buffer not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Patron List not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="413" _type="PauseCommand" date="Sat Mar 19 18:51:34 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="13386431">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10224]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="412" _type="ExceptionCommand" date="Sat Mar 19 18:51:34 EDT 2022" starttimestamp="1647716908162" timestamp="13386431" type="Exception">
    <exceptionString><![CDATA[class java.lang.NullPointerException
java.lang.NullPointerException: Cannot invoke "java.util.List.get(int)" because the return value of "graphics.ArrayBasedScene.getChefList()" is null
	at controls.AConsoleSceneView.<init>(AConsoleSceneView.java:14)
	at factories.AFactory.ConsoleSceneViewFactoryMethod(AFactory.java:24)
	at graphics.AnArrayBasedScene.initScene(AnArrayBasedScene.java:99)
	at graphics.AButtonArrayScene.initScene(AButtonArrayScene.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.models.AnInteractiveMethodInvoker.invokeDynamicCommand(AnInteractiveMethodInvoker.java:247)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:233)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6401)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="415" _type="PauseCommand" date="Sat Mar 19 18:51:37 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13389579">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[3148]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="414" _type="ExceptionCommand" date="Sat Mar 19 18:51:37 EDT 2022" starttimestamp="1647716908162" timestamp="13389579" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.models.AnInteractiveMethodInvoker.invokeDynamicCommand(AnInteractiveMethodInvoker.java:247)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:233)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6401)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5012)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4844)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4919)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4548)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="416" _type="ConsoleOutput" date="Sat Mar 19 18:51:37 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13389759" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Buffer not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Patron List not in range."), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="417" _type="ConsoleOutput" date="Sat Mar 19 18:51:38 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13390017" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 

W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"ZIndex"), Diff(INSERT,"plate"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"nAvatar"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶")]]]></diff>
  </Command>
  <Command __id="418" _type="ConsoleOutput" date="Sat Mar 19 18:51:38 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13390089" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Head"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(DELETE,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶")]]]></diff>
  </Command>
  <Command __id="419" _type="ConsoleOutput" date="Sat Mar 19 18:51:38 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13390241" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W"), Diff(INSERT,"E"), Diff(EQUAL,"***"), Diff(DELETE," Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(INSERT,"Could not find image file:"), Diff(EQUAL,"¶"), Diff(DELETE,"W"), Diff(INSERT,"E"), Diff(EQUAL,"***"), Diff(DELETE," Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Could not find image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="420" _type="ConsoleOutput" date="Sat Mar 19 18:51:38 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13390342" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"E***Could not find image file:¶E***Could not find image file:¶")]]]></diff>
  </Command>
  <Command __id="421" _type="ConsoleOutput" date="Sat Mar 19 18:51:38 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13390513" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.1:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W"), Diff(EQUAL,"***"), Diff(DELETE,"Could not find image file:¶E***Could"), Diff(INSERT," Value: null of Root.Chef List.1:.Chef.Plate"), Diff(EQUAL," not "), Diff(DELETE,"f"), Diff(EQUAL,"in"), Diff(DELETE,"d image file:"), Diff(INSERT," range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="422" _type="ConsoleOutput" date="Sat Mar 19 18:51:38 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13390671" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.2:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Chef List."), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,":.Chef.Plate not in range.¶")]]]></diff>
  </Command>
  <Command __id="423" _type="ConsoleOutput" date="Sat Mar 19 18:51:39 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13390910" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.3:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Chef List."), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,":.Chef.Plate not in range.¶")]]]></diff>
  </Command>
  <Command __id="424" _type="ConsoleOutput" date="Sat Mar 19 18:51:39 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13391105" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.4:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Chef List."), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,":.Chef.Plate not in range.¶")]]]></diff>
  </Command>
  <Command __id="425" _type="ConsoleOutput" date="Sat Mar 19 18:51:39 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13391205" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Chef List.4:.Chef"), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics"), Diff(EQUAL,".P"), Diff(DELETE,"l"), Diff(EQUAL,"at"), Diff(DELETE,"e"), Diff(INSERT,"ron,java.beans.PropertyChangeListener)¶E***Could"), Diff(EQUAL," not "), Diff(INSERT,"f"), Diff(EQUAL,"in"), Diff(DELETE," range."), Diff(INSERT,"d image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="426" _type="ConsoleOutput" date="Sat Mar 19 18:51:39 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13391360" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Patron List.1:.Patron.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶E***Could"), Diff(INSERT,"Value: null of Root.Patron List.1:.Patron.Plate"), Diff(EQUAL," not "), Diff(DELETE,"f"), Diff(EQUAL,"in"), Diff(DELETE,"d image file:"), Diff(INSERT," range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="427" _type="ConsoleOutput" date="Sat Mar 19 18:51:39 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13391429" type="ConsoleOutput">
    <outputString><![CDATA[W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Value: null of Root.Patron List.1:.Patron.Plate not in range"), Diff(INSERT,"Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties"), Diff(EQUAL,".¶")]]]></diff>
  </Command>
  <Command __id="429" _type="PauseCommand" date="Sat Mar 19 18:51:43 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13395569">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4140]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="428" _type="ExceptionCommand" date="Sat Mar 19 18:51:43 EDT 2022" starttimestamp="1647716908162" timestamp="13395569" type="Exception">
    <exceptionString><![CDATA[class java.lang.NullPointerException
java.lang.NullPointerException: Cannot invoke "Object.toString()" because "this.parameterValue" is null
	at bus.uigen.controller.models.AnInteractiveActualParameter.getValue(AnInteractiveActualParameter.java:235)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1415)
	at bus.uigen.sadapters.BeanToRecord.get(BeanToRecord.java:204)
	at bus.uigen.sadapters.BeanToRecord.get(BeanToRecord.java:189)
	at bus.uigen.oadapters.ClassAdapter.addClassComponents(ClassAdapter.java:1611)
	at bus.uigen.oadapters.ClassAdapter.createChildrenBasic(ClassAdapter.java:1345)
	at bus.uigen.oadapters.CompositeAdapter.createChildren(CompositeAdapter.java:718)
	at bus.uigen.visitors.CreateChildrenAdapterVisitor.visit(CreateChildrenAdapterVisitor.java:28)
	at bus.uigen.visitors.CreateChildrenAdapterVisitor.visit(CreateChildrenAdapterVisitor.java:45)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:361)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:372)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:372)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:372)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:70)
	at bus.uigen.uiGenerator.deepCreateChildren(uiGenerator.java:4442)
	at bus.uigen.oadapters.RootAdapter.topAddChildComponents(RootAdapter.java:184)
	at bus.uigen.uiGenerator.topAddChildComponents(uiGenerator.java:862)
	at bus.uigen.uiGenerator.generateInUIPanel(uiGenerator.java:1507)
	at bus.uigen.uiGenerator.generateInBrowsableRootPanel(uiGenerator.java:1473)
	at bus.uigen.uiGenerator.generateInNewBrowsableContainer(uiGenerator.java:1432)
	at bus.uigen.uiGenerator.generateUIFrame(uiGenerator.java:351)
	at bus.uigen.uiGenerator.generateUIFrame(uiGenerator.java:172)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2839)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2806)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2297)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2276)
	at bus.uigen.controller.MethodInvocationManager.autoEdit(MethodInvocationManager.java:123)
	at bus.uigen.controller.MethodInvocationManager.edit(MethodInvocationManager.java:145)
	at bus.uigen.controller.MethodInvocationManager.initInvokerAndEditor(MethodInvocationManager.java:197)
	at bus.uigen.controller.MethodInvocationManager.initUI(MethodInvocationManager.java:966)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:305)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="431" _type="PauseCommand" date="Sat Mar 19 18:51:45 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13397153">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1584]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="430" _type="ExceptionCommand" date="Sat Mar 19 18:51:45 EDT 2022" starttimestamp="1647716908162" timestamp="13397153" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1415)
	at bus.uigen.sadapters.BeanToRecord.get(BeanToRecord.java:204)
	at bus.uigen.sadapters.BeanToRecord.get(BeanToRecord.java:189)
	at bus.uigen.oadapters.ClassAdapter.addClassComponents(ClassAdapter.java:1611)
	at bus.uigen.oadapters.ClassAdapter.createChildrenBasic(ClassAdapter.java:1345)
	at bus.uigen.oadapters.CompositeAdapter.createChildren(CompositeAdapter.java:718)
	at bus.uigen.visitors.CreateChildrenAdapterVisitor.visit(CreateChildrenAdapterVisitor.java:28)
	at bus.uigen.visitors.CreateChildrenAdapterVisitor.visit(CreateChildrenAdapterVisitor.java:45)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:361)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:372)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:372)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:372)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:70)
	at bus.uigen.uiGenerator.deepCreateChildren(uiGenerator.java:4442)
	at bus.uigen.oadapters.RootAdapter.topAddChildComponents(RootAdapter.java:184)
	at bus.uigen.uiGenerator.topAddChildComponents(uiGenerator.java:862)
	at bus.uigen.uiGenerator.generateInUIPanel(uiGenerator.java:1507)
	at bus.uigen.uiGenerator.generateInBrowsableRootPanel(uiGenerator.java:1473)
	at bus.uigen.uiGenerator.generateInNewBrowsableContainer(uiGenerator.java:1432)
	at bus.uigen.uiGenerator.generateUIFrame(uiGenerator.java:351)
	at bus.uigen.uiGenerator.generateUIFrame(uiGenerator.java:172)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2839)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2806)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2297)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2276)
	at bus.uigen.controller.MethodInvocationManager.autoEdit(MethodInvocationManager.java:123)
	at bus.uigen.controller.MethodInvocationManager.edit(MethodInvocationManager.java:145)
	at bus.uigen.controller.MethodInvocationManager.initInvokerAndEditor(MethodInvocationManager.java:197)
	at bus.uigen.controller.MethodInvocationManager.initUI(MethodInvocationManager.java:966)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:305)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="432" _type="ConsoleOutput" date="Sat Mar 19 18:51:45 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13397271" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Parameters:.Parameter 1:.Value: not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE,"Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties"), Diff(INSERT," Value: null of Root.Parameters:.Parameter 1:.Value: not in range"), Diff(EQUAL,".¶")]]]></diff>
  </Command>
  <Command __id="434" _type="PauseCommand" date="Sat Mar 19 18:51:48 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13400095">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2824]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="433" _type="ExceptionCommand" date="Sat Mar 19 18:51:48 EDT 2022" starttimestamp="1647716908162" timestamp="13400095" type="Exception">
    <exceptionString><![CDATA[W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextOut of object: graphics.ABoundedBuffer@2519e82b. Ignoring notification.
0
java.lang.NullPointerException: Cannot invoke "shapes.RemoteImage.setImageFileName(String)" because "shape" is null
	at bus.uigen.oadapters.ImageShapeAdapter.setImageFileName(ImageShapeAdapter.java:51)
	at bus.uigen.oadapters.ImageShapeAdapter.respondToPropertyChange(ImageShapeAdapter.java:71)
	at bus.uigen.oadapters.ShapeObjectAdapter.subPropertyChange(ShapeObjectAdapter.java:1151)
	at bus.uigen.oadapters.ObjectAdapter.propertyChange(ObjectAdapter.java:4330)
	at graphics.APropertyListenerSupport.notifyAllListeners(APropertyListenerSupport.java:21)
	at graphics.APlate.setImageFileName(APlate.java:53)
	at graphics.AnAvatar.dropPlate(AnAvatar.java:158)
	at graphics.AnArrayBasedScene.chefToTable(AnArrayBasedScene.java:187)
	at graphics.AButtonArrayScene.chefToTable(AButtonArrayScene.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:685)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6401)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5012)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4844)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4919)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4548)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4489)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2764)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4844)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="436" _type="PauseCommand" date="Sat Mar 19 18:51:52 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13404124">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[4029]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="435" _type="ExceptionCommand" date="Sat Mar 19 18:51:52 EDT 2022" starttimestamp="1647716908162" timestamp="13404124" type="Exception">
    <exceptionString><![CDATA[1
E**: exception invoking location methods
E**: exception invoking imageFileName methods
java.lang.NullPointerException: Cannot invoke "shapes.ImageModel.getImageFileName()" because "imageShape" is null
	at bus.uigen.oadapters.ImageShapeAdapter.recalculateViewObject(ImageShapeAdapter.java:116)
	at bus.uigen.oadapters.ShapeObjectAdapter.recalculateViewObject(ShapeObjectAdapter.java:553)
	at bus.uigen.oadapters.ShapeObjectAdapter.refreshValueButNotAtomic(ShapeObjectAdapter.java:608)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.CompositeAdapter.refreshValue(CompositeAdapter.java:212)
	at bus.uigen.oadapters.VectorAdapter.refreshValue(VectorAdapter.java:2055)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ObjectAdapter.implicitRefresh(ObjectAdapter.java:5406)
	at bus.uigen.uiFrame.doMyImplicitRefresh(uiFrame.java:4601)
	at bus.uigen.uiFrame.subDoImplicitRefresh(uiFrame.java:4702)
	at bus.uigen.uiFrame.doImplicitRefresh(uiFrame.java:4682)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1920)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:685)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6401)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5012)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="438" _type="PauseCommand" date="Sat Mar 19 18:51:54 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13406099">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1975]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="437" _type="ExceptionCommand" date="Sat Mar 19 18:51:54 EDT 2022" starttimestamp="1647716908162" timestamp="13406099" type="Exception">
    <exceptionString><![CDATA[2
E**: exception invoking location methods
E**: exception invoking imageFileName methods
java.lang.NullPointerException: Cannot invoke "shapes.ImageModel.getImageFileName()" because "imageShape" is null
	at bus.uigen.oadapters.ImageShapeAdapter.recalculateViewObject(ImageShapeAdapter.java:116)
	at bus.uigen.oadapters.ShapeObjectAdapter.recalculateViewObject(ShapeObjectAdapter.java:553)
	at bus.uigen.oadapters.ShapeObjectAdapter.refreshValueButNotAtomic(ShapeObjectAdapter.java:608)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.CompositeAdapter.refreshValue(CompositeAdapter.java:212)
	at bus.uigen.oadapters.VectorAdapter.refreshValue(VectorAdapter.java:2055)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ObjectAdapter.implicitRefresh(ObjectAdapter.java:5406)
	at bus.uigen.uiFrame.doMyImplicitRefresh(uiFrame.java:4601)
	at bus.uigen.uiFrame.subDoImplicitRefresh(uiFrame.java:4702)
	at bus.uigen.uiFrame.doImplicitRefresh(uiFrame.java:4682)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1920)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:685)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6401)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5012)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="440" _type="PauseCommand" date="Sat Mar 19 18:51:55 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13407663">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1564]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="444" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 18:52:00 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13412173" type="Run" />
  <Command __id="446" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 18:52:00 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13412174" type="Run" />
  <Command __id="447" _type="ShellCommand" date="Sat Mar 19 18:52:01 EDT 2022" starttimestamp="1647716908162" timestamp="13412981" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="448" _type="ConsoleOutput" date="Sat Mar 19 18:52:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13413107" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Parameters:.Parameter 1:.Value: not in range."), Diff(INSERT,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="449" _type="ConsoleOutput" date="Sat Mar 19 18:52:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13413192" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AButtonArrayScene@2b40ff9c
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AButtonArrayScene@2b40ff9c"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="450" _type="ConsoleOutput" date="Sat Mar 19 18:52:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13413288" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Buffer not in range.
W*** Value: null of Root.Chef List not in range.
W*** Value: null of Root.Patron List not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.AButtonArrayScene@2b40ff9c"), Diff(INSERT,"Value: null of Root.Buffer not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Patron List not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="452" _type="PauseCommand" date="Sat Mar 19 18:52:13 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="13425313">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[12025]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="451" _type="ExceptionCommand" date="Sat Mar 19 18:52:13 EDT 2022" starttimestamp="1647716908162" timestamp="13425313" type="Exception">
    <exceptionString><![CDATA[class java.lang.NullPointerException
java.lang.NullPointerException: Cannot invoke "java.util.List.get(int)" because the return value of "graphics.ArrayBasedScene.getChefList()" is null
	at controls.AConsoleSceneView.<init>(AConsoleSceneView.java:14)
	at factories.AFactory.ConsoleSceneViewFactoryMethod(AFactory.java:24)
	at graphics.AnArrayBasedScene.initScene(AnArrayBasedScene.java:99)
	at graphics.AButtonArrayScene.initScene(AButtonArrayScene.java:21)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.models.AnInteractiveMethodInvoker.invokeDynamicCommand(AnInteractiveMethodInvoker.java:247)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:233)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6401)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="454" _type="PauseCommand" date="Sat Mar 19 18:52:27 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="13439428">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[14115]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="453" _type="ExceptionCommand" date="Sat Mar 19 18:52:27 EDT 2022" starttimestamp="1647716908162" timestamp="13439428" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.models.AnInteractiveMethodInvoker.invokeDynamicCommand(AnInteractiveMethodInvoker.java:247)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:233)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6401)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5012)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4844)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4919)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4548)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="455" _type="ConsoleOutput" date="Sat Mar 19 18:52:27 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13439559" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Buffer not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Patron List not in range."), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="456" _type="ConsoleOutput" date="Sat Mar 19 18:52:27 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13439763" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 

W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine"), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. ¶¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Implicit property ZIndex of  AHead"), Diff(EQUAL," ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"Head"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="457" _type="ConsoleOutput" date="Sat Mar 19 18:52:28 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13439947" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W"), Diff(INSERT,"E"), Diff(EQUAL,"***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"Could not find image file:"), Diff(EQUAL,"¶"), Diff(DELETE,"W"), Diff(INSERT,"E"), Diff(EQUAL,"***"), Diff(DELETE," public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Could not find image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="458" _type="ConsoleOutput" date="Sat Mar 19 18:52:28 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13440045" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"E***Could not find image file:¶E***Could not find image file:¶")]]]></diff>
  </Command>
  <Command __id="459" _type="ConsoleOutput" date="Sat Mar 19 18:52:28 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13440220" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.1:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W"), Diff(EQUAL,"***"), Diff(DELETE,"Could not find image file:¶E***Could"), Diff(INSERT," Value: null of Root.Chef List.1:.Chef.Plate"), Diff(EQUAL," not "), Diff(DELETE,"f"), Diff(EQUAL,"in"), Diff(DELETE,"d image file:"), Diff(INSERT," range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="460" _type="ConsoleOutput" date="Sat Mar 19 18:52:28 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13440365" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.2:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Chef List."), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,":.Chef.Plate not in range.¶")]]]></diff>
  </Command>
  <Command __id="461" _type="ConsoleOutput" date="Sat Mar 19 18:52:28 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13440640" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.3:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Chef List."), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,":.Chef.Plate not in range.¶")]]]></diff>
  </Command>
  <Command __id="462" _type="ConsoleOutput" date="Sat Mar 19 18:52:29 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13440973" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.4:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Chef List."), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,":.Chef.Plate not in range.¶")]]]></diff>
  </Command>
  <Command __id="463" _type="ConsoleOutput" date="Sat Mar 19 18:52:29 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13441184" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Chef List.4:.Chef"), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics"), Diff(EQUAL,".P"), Diff(DELETE,"l"), Diff(EQUAL,"at"), Diff(DELETE,"e"), Diff(INSERT,"ron,java.beans.PropertyChangeListener)¶E***Could"), Diff(EQUAL," not "), Diff(INSERT,"f"), Diff(EQUAL,"in"), Diff(DELETE," range."), Diff(INSERT,"d image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="464" _type="ConsoleOutput" date="Sat Mar 19 18:52:29 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="13441382" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Patron List.1:.Patron.Plate not in range.
W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶E***Could not find image file:"), Diff(INSERT,"Value: null of Root.Patron List.1:.Patron.Plate not in range.¶W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="466" _type="PauseCommand" date="Sat Mar 19 18:52:33 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13445027">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3645]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="465" _type="ExceptionCommand" date="Sat Mar 19 18:52:33 EDT 2022" starttimestamp="1647716908162" timestamp="13445027" type="Exception">
    <exceptionString><![CDATA[W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextOut of object: graphics.ABoundedBuffer@71129eb8. Ignoring notification.
0
java.lang.NullPointerException: Cannot invoke "shapes.RemoteImage.setImageFileName(String)" because "shape" is null
	at bus.uigen.oadapters.ImageShapeAdapter.setImageFileName(ImageShapeAdapter.java:51)
	at bus.uigen.oadapters.ImageShapeAdapter.respondToPropertyChange(ImageShapeAdapter.java:71)
	at bus.uigen.oadapters.ShapeObjectAdapter.subPropertyChange(ShapeObjectAdapter.java:1151)
	at bus.uigen.oadapters.ObjectAdapter.propertyChange(ObjectAdapter.java:4330)
	at graphics.APropertyListenerSupport.notifyAllListeners(APropertyListenerSupport.java:21)
	at graphics.APlate.setImageFileName(APlate.java:53)
	at graphics.AnAvatar.dropPlate(AnAvatar.java:158)
	at graphics.AnArrayBasedScene.chefToTable(AnArrayBasedScene.java:187)
	at graphics.AButtonArrayScene.chefToTable(AButtonArrayScene.java:14)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:685)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6401)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5012)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4844)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4919)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4548)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4489)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2764)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4844)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="468" _type="PauseCommand" date="Sat Mar 19 18:52:35 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13446907">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1880]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="467" _type="ExceptionCommand" date="Sat Mar 19 18:52:35 EDT 2022" starttimestamp="1647716908162" timestamp="13446907" type="Exception">
    <exceptionString><![CDATA[1
E**: exception invoking location methods
E**: exception invoking imageFileName methods
java.lang.NullPointerException: Cannot invoke "shapes.ImageModel.getImageFileName()" because "imageShape" is null
	at bus.uigen.oadapters.ImageShapeAdapter.recalculateViewObject(ImageShapeAdapter.java:116)
	at bus.uigen.oadapters.ShapeObjectAdapter.recalculateViewObject(ShapeObjectAdapter.java:553)
	at bus.uigen.oadapters.ShapeObjectAdapter.refreshValueButNotAtomic(ShapeObjectAdapter.java:608)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.CompositeAdapter.refreshValue(CompositeAdapter.java:212)
	at bus.uigen.oadapters.VectorAdapter.refreshValue(VectorAdapter.java:2055)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ObjectAdapter.implicitRefresh(ObjectAdapter.java:5406)
	at bus.uigen.uiFrame.doMyImplicitRefresh(uiFrame.java:4601)
	at bus.uigen.uiFrame.subDoImplicitRefresh(uiFrame.java:4702)
	at bus.uigen.uiFrame.doImplicitRefresh(uiFrame.java:4682)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1920)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:685)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6401)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5012)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="470" _type="PauseCommand" date="Sat Mar 19 18:52:37 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13448843">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1936]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="471" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 18:52:38 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13450237" type="Run" />
  <Command __id="473" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 18:52:38 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13450237" type="Run" />
  <Command __id="475" _type="PauseCommand" date="Sat Mar 19 18:53:05 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="13477182">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[26945]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="474" _type="ShellCommand" date="Sat Mar 19 18:53:05 EDT 2022" starttimestamp="1647716908162" timestamp="13477182" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="477" _type="PauseCommand" date="Sat Mar 19 18:59:39 EDT 2022" range="5m-10m" starttimestamp="1647716908162" timestamp="13871645">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[394463]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="476" _type="ShellCommand" date="Sat Mar 19 18:59:39 EDT 2022" starttimestamp="1647716908162" timestamp="13871645" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="479" _type="PauseCommand" date="Sat Mar 19 18:59:52 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="13884549">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[12904]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="478" _type="MoveCaretCommand" caretOffset="1036" date="Sat Mar 19 18:59:52 EDT 2022" docOffset="1912" starttimestamp="1647716908162" timestamp="13884549" />
  <Command __id="481" _type="PauseCommand" date="Sat Mar 19 18:59:54 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13886426">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1877]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="480" _type="MoveCaretCommand" caretOffset="1198" date="Sat Mar 19 18:59:54 EDT 2022" docOffset="2074" starttimestamp="1647716908162" timestamp="13886426" />
  <Command __id="482" _type="MoveCaretCommand" caretOffset="1195" date="Sat Mar 19 18:59:55 EDT 2022" docOffset="2071" starttimestamp="1647716908162" timestamp="13887405" />
  <Command __id="484" _type="PauseCommand" date="Sat Mar 19 19:00:00 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13892092">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4687]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="483" _type="MoveCaretCommand" caretOffset="978" date="Sat Mar 19 19:00:00 EDT 2022" docOffset="1854" starttimestamp="1647716908162" timestamp="13892092" />
  <Command __id="486" _type="PauseCommand" date="Sat Mar 19 19:00:03 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13895819">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3727]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="485" _type="ShellCommand" date="Sat Mar 19 19:00:03 EDT 2022" starttimestamp="1647716908162" timestamp="13895819" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="488" _type="PauseCommand" date="Sat Mar 19 19:00:10 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="13902102">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6283]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="487" _type="ShellCommand" date="Sat Mar 19 19:00:10 EDT 2022" starttimestamp="1647716908162" timestamp="13902102" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="490" _type="PauseCommand" date="Sat Mar 19 19:00:14 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13906289">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4187]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="489" _type="ShellCommand" date="Sat Mar 19 19:00:14 EDT 2022" starttimestamp="1647716908162" timestamp="13906289" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="491" _type="ShellCommand" date="Sat Mar 19 19:00:14 EDT 2022" starttimestamp="1647716908162" timestamp="13906428" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="492" _type="ShellCommand" date="Sat Mar 19 19:00:14 EDT 2022" starttimestamp="1647716908162" timestamp="13906532" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="494" _type="PauseCommand" date="Sat Mar 19 19:00:26 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="13918285">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11753]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="493" _type="ShellCommand" date="Sat Mar 19 19:00:26 EDT 2022" starttimestamp="1647716908162" timestamp="13918285" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="495" _type="ShellCommand" date="Sat Mar 19 19:00:26 EDT 2022" starttimestamp="1647716908162" timestamp="13918321" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="497" _type="PauseCommand" date="Sat Mar 19 19:00:28 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13919851">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1530]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="496" _type="ShellCommand" date="Sat Mar 19 19:00:28 EDT 2022" starttimestamp="1647716908162" timestamp="13919851" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="498" _type="ShellCommand" date="Sat Mar 19 19:00:28 EDT 2022" starttimestamp="1647716908162" timestamp="13919895" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="500" _type="PauseCommand" date="Sat Mar 19 19:00:43 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="13935787">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[15892]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="499" _type="ShellCommand" date="Sat Mar 19 19:00:43 EDT 2022" starttimestamp="1647716908162" timestamp="13935787" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="502" _type="MoveCaretCommand" caretOffset="123" date="Sat Mar 19 19:00:44 EDT 2022" docOffset="123" starttimestamp="1647716908162" timestamp="13936230" />
  <Command __id="398" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 18:51:02 EDT 2022" docASTNodeCount="360" docActiveCodeLength="2180" docExpressionCount="253" docLength="2787" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13354768">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AnArrayBasedScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ArrayBasedScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ArrayBasedScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ArrayBasedScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶"), Diff(INSERT,"		ObjectEditor.confirmSelectedMethodParameters(false);¶"), Diff(EQUAL,"		//ObjectEditor.setMethodAttribute(AnArrayBasedScene.class, "Chef to Table", AttributeNames.TOOLBAR_METHOD, true);¶		OEFrame editor = ObjectEditor.edit(scene1);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		//editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package main;

import java.awt.BorderLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import bus.uigen.attributes.AttributeNames;
import bus.uigen.widgets.VirtualComponent;
import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import controls.Painter;
import factories.AFactory;
import graphics.ACircle;
import graphics.AButtonArrayScene;
import graphics.AChef;
import graphics.ALine;
import graphics.APatron;
import graphics.AScene;
import graphics.AnAngle;
import graphics.AnArrayBasedScene;
import graphics.AnAvatar;
import graphics.Angle;
import graphics.ArrayBasedScene;
import graphics.Avatar;
import graphics.Line;
import graphics.Scene;
import util.misc.Console;

public class MainClass {
	static ArrayBasedScene scene = AFactory.arrayBasedSceneFactoryMethod();
	static ArrayBasedScene scene1 = new AButtonArrayScene();

	public static void main(String[] args) {
		
//		animateGraphics();
//		animateArrayUse();
		animateArrayUseInteractive();
	}
	
	public static void animateGraphics() {
		Scene Restaurant = new AScene();
		OEFrame editor = ObjectEditor.edit(Restaurant);
		editor.showDrawPanel();
		editor.showTreePanel();
//		Component c = editor.getDrawComponent();
//		VirtualComponent v = editor.getDrawVirtualComponent();
//		c.addMouseListener(null);

		
	}

	public static void animateArrayUseInteractive() {

		ObjectEditor.confirmSelectedMethodParameters(false);
		//ObjectEditor.setMethodAttribute(AnArrayBasedScene.class, "Chef to Table", AttributeNames.TOOLBAR_METHOD, true);
		OEFrame editor = ObjectEditor.edit(scene1);
		//editor.hideMainPanel();
		editor.showDrawPanel();
		//editor.showToolBar();
		
//		JFrame frame = new JFrame();
//		//frame.add((Component) console, BorderLayout.CENTER);
//		frame.setSize(1000, 1000);
//		frame.setVisible(true);
		
	
		
//		JPanel panel = new JPanel();
//		JButton button1 = control.getChefToBuffer();
//		panel.add(button1);
//		frame.add(panel);
	}
	
	public static void animatePainterTwo(Painter view) {
		JFrame aFrame = new JFrame();
		aFrame.add((Component) view, BorderLayout.CENTER);
		aFrame.setSize(1000, 1000);
		aFrame.setVisible(true);
		JPanel panel = new JPanel();
		aFrame.add(panel, BorderLayout.NORTH);
	}
	
	public static void moveAvatar() {
		System.out.println("test1");
		scene.getChefList().get(2).getChef().move(30, 0);
		scene.getChefList().get(2).getStove().move(10, 0);
		System.out.println("Moving the stove: \n");
		scene.getChefList().get(3).getStove().move(30, 30);
	}

}
]]></snapshot>
  </Command>
  <Command __id="501" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:00:44 EDT 2022" docASTNodeCount="851" docActiveCodeLength="4614" docExpressionCount="578" docLength="4614" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13935983">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AnAvatar.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶import java.beans.PropertyChangeListener;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶"), Diff(DELETE,"import tags301.Comp301Tags;¶"), Diff(EQUAL,"import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"Arms",¶	"Legs",¶	"Neck",¶	"Torso",¶	"head",¶	"text",¶	"plate"¶})¶@EditablePropertyNames({¶	"Arms",¶	"Legs",¶	"Neck",¶	"Torso",¶	"head",¶	"text"¶})¶public class AnAvatar implements Avatar {¶	Angle Legs;¶	Angle Arms;¶	Line Torso;¶	Line Neck;¶	StringShape text;¶	Head head;¶	String headImage = "";¶	String plateImage = "";¶	Plate plate;¶	¶	int INIT_X = 50;¶	int INIT_Y = 50;¶	int INIT_Radius = 20;¶	int INIT_Neck = 10;¶	int INIT_Head = 99;¶¶	¶	public AnAvatar() {¶		Legs = new AnAngle();¶		Legs.moveX(INIT_X);¶		Legs.moveY(INIT_Y+40);¶		Arms = new AnAngle();¶		Arms.moveX(INIT_X);¶		Arms.moveY(INIT_Y);¶		Torso = new ALine();¶		Torso.setX(INIT_X);¶		Torso.setY(INIT_X);¶		Neck = new ALine();¶		Neck.setHeight(10);¶		Neck.setWidth(0);¶		Neck.setRadius(INIT_Radius);¶		Neck.setX(INIT_X);¶		Neck.setY(INIT_Y-INIT_Neck);¶		head = new AHead();¶		text = new AStringShape();¶		text.setText("");¶		head.setImageFileName(headImage);¶		head.setX(13);¶		head.setY(INIT_Y-INIT_Head);¶		head.setHeight(90);¶		head.setWidth(80);¶		plate = new APlate();¶		plate.setImageFileName(plateImage);¶		plate.setHeight(0);¶		plate.setWidth(0);¶		plate.setX(INIT_X-20);¶		plate.setY(INIT_Y+30);¶		plate.setZIndex(60000);¶	}¶	¶	@Override¶	public Plate getPlate() {¶		return plate;¶	}¶¶	@Override¶	public void setPlate(Plate newPlate) {¶		plate = newPlate;¶	}¶¶	@Override¶	public Angle getArms() {¶		return Arms;¶	}¶	¶	@Override¶	public void setArms(Angle NewArms) {¶		Arms = NewArms;¶	}¶¶¶	@Override¶	public Angle getLegs() {¶		return Legs;¶	}¶	¶	@Override¶	public void setLegs(Angle NewLegs) {¶		Legs = NewLegs;¶	}¶¶¶	@Override¶	public Line getTorso() {¶		return Torso;¶	}¶	¶	@Override¶	public void setTorso(Line NewTorso) {¶		Torso = NewTorso;¶	}¶¶¶	@Override¶	public Line getNeck() {¶		return Neck;¶	}¶	¶	@Override¶	public void setNeck(Line newNeck) {¶		Neck = newNeck;¶	}¶	¶	@Override¶	public StringShape getText() {¶		return text;¶	}¶	¶	@Override¶	public void setText(StringShape NewText) {¶		text = NewText;¶	}¶	¶¶	@Override¶	public Head getHead() {¶		return head;¶	}¶¶	@Override¶	public void setHead(Head NewHead) {¶		head = NewHead;¶	}¶	¶	@Override¶	public void dropPlate(String imageName) {¶		plate.setImageFileName(imageName);¶		plate.setHeight(40);¶		plate.setWidth(40);¶	}¶	¶	@Override¶	public void goBack(int X, int Y) {¶		Legs.move(X, Y);¶		Arms.move(X, Y);¶		Torso.move(X, Y);¶		Neck.move(X, Y);¶		head.move(X, Y);¶	}¶	¶	@Override¶	public void move(int X, int Y) {¶		Legs.move(X, Y);¶		Arms.move(X, Y);¶		Torso.move(X, Y);¶		Neck.move(X, Y);¶		head.move(X, Y);¶		plate.move(X, Y);¶	}¶	¶	@Override¶	public void moveTo(int newX, int newY) {¶		Legs.moveTo(newX, newY);¶		Arms.moveTo(newX, newY);¶		Torso.moveTo(newX, newY);¶		Neck.moveTo(newX, newY);¶		head.moveTo(newX, newY);	¶		plate.moveTo(newX, newY);¶	}¶	¶	@Override¶	public void scale(double ratio) {¶		Legs.getRightLine().setRadius(Legs.getRightLine().getRadius()*ratio);¶		Legs.getLeftLine().setRadius(Legs.getLeftLine().getRadius()*ratio);¶		Arms.getRightLine().setRadius(Arms.getRightLine().getRadius()*ratio);¶		Arms.getLeftLine().setRadius(Arms.getLeftLine().getRadius()*ratio);¶		Neck.setRadius(Neck.getRadius()*ratio);¶		Torso.setRadius(Torso.getRadius()*ratio);¶	}¶	¶	¶	@Override¶	public void addPropertyChangeListener(Avatar avatarParameter, PropertyChangeListener aListener) {¶		avatarParameter.getArms().addPropertyChangeListener(getArms(), aListener);¶		avatarParameter.getLegs().addPropertyChangeListener(getLegs(), aListener);¶		avatarParameter.getHead().addPropertyChangeListener(aListener);¶		avatarParameter.getNeck().addPropertyChangeListener(aListener);¶		avatarParameter.getTorso().addPropertyChangeListener(aListener);¶		avatarParameter.getText().addPropertyChangeListener(aListener);¶	}¶	¶	public static void main(String[] args) {¶		Avatar scene = new AnAvatar();¶		scene.getHead().setImageFileName("images/0.png");¶		OEFrame editor = ObjectEditor.edit(scene);¶		editor.showDrawPanel();¶	}¶¶¶¶¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;
import java.beans.PropertyChangeListener;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.misc.ThreadSupport;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"Arms",
	"Legs",
	"Neck",
	"Torso",
	"head",
	"text",
	"plate"
})
@EditablePropertyNames({
	"Arms",
	"Legs",
	"Neck",
	"Torso",
	"head",
	"text"
})
public class AnAvatar implements Avatar {
	Angle Legs;
	Angle Arms;
	Line Torso;
	Line Neck;
	StringShape text;
	Head head;
	String headImage = "";
	String plateImage = "";
	Plate plate;
	
	int INIT_X = 50;
	int INIT_Y = 50;
	int INIT_Radius = 20;
	int INIT_Neck = 10;
	int INIT_Head = 99;

	
	public AnAvatar() {
		Legs = new AnAngle();
		Legs.moveX(INIT_X);
		Legs.moveY(INIT_Y+40);
		Arms = new AnAngle();
		Arms.moveX(INIT_X);
		Arms.moveY(INIT_Y);
		Torso = new ALine();
		Torso.setX(INIT_X);
		Torso.setY(INIT_X);
		Neck = new ALine();
		Neck.setHeight(10);
		Neck.setWidth(0);
		Neck.setRadius(INIT_Radius);
		Neck.setX(INIT_X);
		Neck.setY(INIT_Y-INIT_Neck);
		head = new AHead();
		text = new AStringShape();
		text.setText("");
		head.setImageFileName(headImage);
		head.setX(13);
		head.setY(INIT_Y-INIT_Head);
		head.setHeight(90);
		head.setWidth(80);
		plate = new APlate();
		plate.setImageFileName(plateImage);
		plate.setHeight(0);
		plate.setWidth(0);
		plate.setX(INIT_X-20);
		plate.setY(INIT_Y+30);
		plate.setZIndex(60000);
	}
	
	@Override
	public Plate getPlate() {
		return plate;
	}

	@Override
	public void setPlate(Plate newPlate) {
		plate = newPlate;
	}

	@Override
	public Angle getArms() {
		return Arms;
	}
	
	@Override
	public void setArms(Angle NewArms) {
		Arms = NewArms;
	}


	@Override
	public Angle getLegs() {
		return Legs;
	}
	
	@Override
	public void setLegs(Angle NewLegs) {
		Legs = NewLegs;
	}


	@Override
	public Line getTorso() {
		return Torso;
	}
	
	@Override
	public void setTorso(Line NewTorso) {
		Torso = NewTorso;
	}


	@Override
	public Line getNeck() {
		return Neck;
	}
	
	@Override
	public void setNeck(Line newNeck) {
		Neck = newNeck;
	}
	
	@Override
	public StringShape getText() {
		return text;
	}
	
	@Override
	public void setText(StringShape NewText) {
		text = NewText;
	}
	

	@Override
	public Head getHead() {
		return head;
	}

	@Override
	public void setHead(Head NewHead) {
		head = NewHead;
	}
	
	@Override
	public void dropPlate(String imageName) {
		plate.setImageFileName(imageName);
		plate.setHeight(40);
		plate.setWidth(40);
	}
	
	@Override
	public void goBack(int X, int Y) {
		Legs.move(X, Y);
		Arms.move(X, Y);
		Torso.move(X, Y);
		Neck.move(X, Y);
		head.move(X, Y);
	}
	
	@Override
	public void move(int X, int Y) {
		Legs.move(X, Y);
		Arms.move(X, Y);
		Torso.move(X, Y);
		Neck.move(X, Y);
		head.move(X, Y);
		plate.move(X, Y);
	}
	
	@Override
	public void moveTo(int newX, int newY) {
		Legs.moveTo(newX, newY);
		Arms.moveTo(newX, newY);
		Torso.moveTo(newX, newY);
		Neck.moveTo(newX, newY);
		head.moveTo(newX, newY);	
		plate.moveTo(newX, newY);
	}
	
	@Override
	public void scale(double ratio) {
		Legs.getRightLine().setRadius(Legs.getRightLine().getRadius()*ratio);
		Legs.getLeftLine().setRadius(Legs.getLeftLine().getRadius()*ratio);
		Arms.getRightLine().setRadius(Arms.getRightLine().getRadius()*ratio);
		Arms.getLeftLine().setRadius(Arms.getLeftLine().getRadius()*ratio);
		Neck.setRadius(Neck.getRadius()*ratio);
		Torso.setRadius(Torso.getRadius()*ratio);
	}
	
	
	@Override
	public void addPropertyChangeListener(Avatar avatarParameter, PropertyChangeListener aListener) {
		avatarParameter.getArms().addPropertyChangeListener(getArms(), aListener);
		avatarParameter.getLegs().addPropertyChangeListener(getLegs(), aListener);
		avatarParameter.getHead().addPropertyChangeListener(aListener);
		avatarParameter.getNeck().addPropertyChangeListener(aListener);
		avatarParameter.getTorso().addPropertyChangeListener(aListener);
		avatarParameter.getText().addPropertyChangeListener(aListener);
	}
	
	public static void main(String[] args) {
		Avatar scene = new AnAvatar();
		scene.getHead().setImageFileName("images/0.png");
		OEFrame editor = ObjectEditor.edit(scene);
		editor.showDrawPanel();
	}




	
}
]]></snapshot>
  </Command>
  <Command __id="504" _type="PauseCommand" date="Sat Mar 19 19:00:47 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13939500">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3270]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="505" _type="MoveCaretCommand" caretOffset="978" date="Sat Mar 19 19:00:47 EDT 2022" docOffset="1854" starttimestamp="1647716908162" timestamp="13939722" />
  <Command __id="507" _type="PauseCommand" date="Sat Mar 19 19:00:51 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13943567">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3845]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="506" _type="MoveCaretCommand" caretOffset="1032" date="Sat Mar 19 19:00:51 EDT 2022" docOffset="1908" starttimestamp="1647716908162" timestamp="13943567" />
  <Command __id="509" _type="PauseCommand" date="Sat Mar 19 19:01:00 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="13952301">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8734]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="508" _type="ShellCommand" date="Sat Mar 19 19:01:00 EDT 2022" starttimestamp="1647716908162" timestamp="13952301" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="511" _type="PauseCommand" date="Sat Mar 19 19:01:02 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13953895">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1594]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="510" _type="ShellCommand" date="Sat Mar 19 19:01:02 EDT 2022" starttimestamp="1647716908162" timestamp="13953895" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="512" _type="ShellCommand" date="Sat Mar 19 19:01:02 EDT 2022" starttimestamp="1647716908162" timestamp="13954002" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="514" _type="PauseCommand" date="Sat Mar 19 19:01:08 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="13960495">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6493]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="513" _type="ShellCommand" date="Sat Mar 19 19:01:08 EDT 2022" starttimestamp="1647716908162" timestamp="13960495" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="515" _type="MoveCaretCommand" caretOffset="947" date="Sat Mar 19 19:01:08 EDT 2022" docOffset="1823" starttimestamp="1647716908162" timestamp="13960552" />
  <Command __id="503" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:00:47 EDT 2022" docASTNodeCount="360" docActiveCodeLength="2180" docExpressionCount="253" docLength="2787" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="13939500">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AnArrayBasedScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ArrayBasedScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ArrayBasedScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ArrayBasedScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		//ObjectEditor.setMethodAttribute(AnArrayBasedScene.class, "Chef to Table", AttributeNames.TOOLBAR_METHOD, true);¶		OEFrame editor = ObjectEditor.edit(scene1);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		//editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="517" _type="PauseCommand" date="Sat Mar 19 19:01:10 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13962314">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1762]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="518" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:01:10 EDT 2022" starttimestamp="1647716908162" timestamp="13962335" />
  <Command __id="520" _type="PauseCommand" date="Sat Mar 19 19:01:12 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13963864">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1529]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="519" _type="MoveCaretCommand" caretOffset="790" date="Sat Mar 19 19:01:12 EDT 2022" docOffset="1666" starttimestamp="1647716908162" timestamp="13963864" />
  <Command __id="522" _type="PauseCommand" date="Sat Mar 19 19:01:13 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13965519">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1655]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="521" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sat Mar 19 19:01:13 EDT 2022" starttimestamp="1647716908162" timestamp="13965519" />
  <Command __id="524" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:01:14 EDT 2022" starttimestamp="1647716908162" timestamp="13965974" />
  <Command __id="526" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:01:14 EDT 2022" starttimestamp="1647716908162" timestamp="13966532" />
  <Command __id="528" _type="PauseCommand" date="Sat Mar 19 19:01:16 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13968200">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1667]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="527" _type="MoveCaretCommand" caretOffset="1008" date="Sat Mar 19 19:01:16 EDT 2022" docOffset="1884" starttimestamp="1647716908162" timestamp="13968199" />
  <DocumentChange __id="516" _type="Delete" date="Sat Mar 19 19:01:10 EDT 2022" docASTNodeCount="360" docActiveCodeLength="2179" docExpressionCount="253" docLength="2786" endLine="63" length="1" offset="1822" startLine="63" starttimestamp="1647716908162" timestamp="13962314">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="523" _type="Delete" date="Sat Mar 19 19:01:14 EDT 2022" docASTNodeCount="372" docActiveCodeLength="2290" docExpressionCount="263" docLength="2784" endLine="62" length="2" offset="1665" repeat="2" startLine="62" starttimestamp="1647716908162" timestamp="13965955" timestamp2="13966502">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="530" _type="PauseCommand" date="Sat Mar 19 19:01:17 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13969482">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1283]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="531" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:01:17 EDT 2022" starttimestamp="1647716908162" timestamp="13969502" />
  <DocumentChange __id="529" _type="Delete" date="Sat Mar 19 19:01:17 EDT 2022" docASTNodeCount="376" docActiveCodeLength="2312" docExpressionCount="266" docLength="2783" endLine="66" length="1" offset="1883" startLine="66" starttimestamp="1647716908162" timestamp="13969482">
    <text><![CDATA[/]]></text>
  </DocumentChange>
  <Command __id="533" _type="PauseCommand" date="Sat Mar 19 19:01:19 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13971491">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1989]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="534" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:01:19 EDT 2022" starttimestamp="1647716908162" timestamp="13971505" />
  <Command __id="535" _type="MoveCaretCommand" caretOffset="1027" date="Sat Mar 19 19:01:20 EDT 2022" docOffset="1903" starttimestamp="1647716908162" timestamp="13972046" />
  <Command __id="537" _type="PauseCommand" date="Sat Mar 19 19:01:21 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13973638">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1592]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="536" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 19:01:21 EDT 2022" starttimestamp="1647716908162" timestamp="13973638" />
  <Command __id="538" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:01:21 EDT 2022" starttimestamp="1647716908162" timestamp="13973722" />
  <Command __id="539" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:01:21 EDT 2022" starttimestamp="1647716908162" timestamp="13973835" />
  <Command __id="541" _type="PauseCommand" date="Sat Mar 19 19:01:32 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="13983846">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10011]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="540" _type="MoveCaretCommand" caretOffset="1006" date="Sat Mar 19 19:01:32 EDT 2022" docOffset="1882" starttimestamp="1647716908162" timestamp="13983846" />
  <Command __id="543" _type="PauseCommand" date="Sat Mar 19 19:01:36 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13988110">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4264]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="542" _type="MoveCaretCommand" caretOffset="852" date="Sat Mar 19 19:01:36 EDT 2022" docOffset="1728" starttimestamp="1647716908162" timestamp="13988110" />
  <DocumentChange __id="532" _type="Delete" date="Sat Mar 19 19:01:19 EDT 2022" docASTNodeCount="376" docActiveCodeLength="2311" docExpressionCount="266" docLength="2782" endLine="66" length="1" offset="1882" startLine="66" starttimestamp="1647716908162" timestamp="13971491">
    <text><![CDATA[/]]></text>
  </DocumentChange>
  <Command __id="545" _type="PauseCommand" date="Sat Mar 19 19:01:37 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13989409">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1299]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="544" _type="Delete" date="Sat Mar 19 19:01:37 EDT 2022" docASTNodeCount="376" docActiveCodeLength="2310" docExpressionCount="266" docLength="2781" endLine="62" length="1" offset="1727" startLine="62" starttimestamp="1647716908162" timestamp="13989409">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="546" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:01:37 EDT 2022" starttimestamp="1647716908162" timestamp="13989449" />
  <Command __id="547" _type="MoveCaretCommand" caretOffset="854" date="Sat Mar 19 19:01:38 EDT 2022" docOffset="1730" starttimestamp="1647716908162" timestamp="13990246" />
  <Command __id="549" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:01:38 EDT 2022" starttimestamp="1647716908162" timestamp="13990535" />
  <Command __id="551" _type="PauseCommand" date="Sat Mar 19 19:01:39 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13991723">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1188]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="550" _type="MoveCaretCommand" caretOffset="852" date="Sat Mar 19 19:01:39 EDT 2022" docOffset="1728" starttimestamp="1647716908162" timestamp="13991723" />
  <DocumentChange __id="548" _type="Delete" date="Sat Mar 19 19:01:38 EDT 2022" docASTNodeCount="376" docActiveCodeLength="2309" docExpressionCount="266" docLength="2780" endLine="62" length="1" offset="1729" startLine="62" starttimestamp="1647716908162" timestamp="13990517">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="553" _type="PauseCommand" date="Sat Mar 19 19:01:41 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13993218">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1495]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="554" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:01:41 EDT 2022" starttimestamp="1647716908162" timestamp="13993251" />
  <DocumentChange __id="552" _type="Delete" date="Sat Mar 19 19:01:41 EDT 2022" docASTNodeCount="376" docActiveCodeLength="2308" docExpressionCount="266" docLength="2779" endLine="62" length="1" offset="1727" startLine="62" starttimestamp="1647716908162" timestamp="13993218">
    <text><![CDATA[t]]></text>
  </DocumentChange>
  <Command __id="556" _type="PauseCommand" date="Sat Mar 19 19:01:44 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="13996234">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2983]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="557" _type="InsertStringCommand" date="Sat Mar 19 19:01:44 EDT 2022" starttimestamp="1647716908162" timestamp="13996262" timestamp2="13996262">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="559" _type="PauseCommand" date="Sat Mar 19 19:01:45 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="13997679">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1417]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="568" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:01:56 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14008419" type="Run" />
  <Command __id="570" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:01:56 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14008420" type="Run" />
  <Command __id="572" _type="PauseCommand" date="Sat Mar 19 19:01:58 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14010299">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1879]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="571" _type="ConsoleOutput" date="Sat Mar 19 19:01:58 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14010299" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Patron List.1:.Patron.Plate not in range.¶W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(INSERT,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="573" _type="ShellCommand" date="Sat Mar 19 19:01:58 EDT 2022" starttimestamp="1647716908162" timestamp="14010719" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="574" _type="ConsoleOutput" date="Sat Mar 19 19:01:59 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14011117" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@66982506
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@66982506"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="575" _type="ConsoleOutput" date="Sat Mar 19 19:01:59 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14011403" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Patron List not in range.
W*** Value: null of Root.Chef List not in range.
W*** Value: null of Root.Buffer not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@66982506"), Diff(INSERT,"Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="577" _type="PauseCommand" date="Sat Mar 19 19:02:14 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="14026102">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14699]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="576" _type="ShellCommand" date="Sat Mar 19 19:02:14 EDT 2022" starttimestamp="1647716908162" timestamp="14026102" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="579" _type="PauseCommand" date="Sat Mar 19 19:02:17 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14029735">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3633]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="587" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:02:21 EDT 2022" starttimestamp="1647716908162" timestamp="14033740" />
  <Command __id="589" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:02:21 EDT 2022" starttimestamp="1647716908162" timestamp="14033821" />
  <Command __id="590" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:02:22 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14034344" type="Run" />
  <Command __id="591" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:02:22 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14034344" type="Run" />
  <Command __id="593" _type="PauseCommand" date="Sat Mar 19 19:02:24 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14035862">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1518]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="592" _type="ConsoleOutput" date="Sat Mar 19 19:02:24 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14035862" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(INSERT,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="594" _type="ShellCommand" date="Sat Mar 19 19:02:24 EDT 2022" starttimestamp="1647716908162" timestamp="14036220" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="595" _type="ConsoleOutput" date="Sat Mar 19 19:02:24 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14036548" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@66982506
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@66982506"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="596" _type="ConsoleOutput" date="Sat Mar 19 19:02:25 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14036869" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Patron List not in range.
W*** Value: null of Root.Chef List not in range.
W*** Value: null of Root.Buffer not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@66982506"), Diff(INSERT,"Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="598" _type="PauseCommand" date="Sat Mar 19 19:02:41 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="14053652">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[16783]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="597" _type="ShellCommand" date="Sat Mar 19 19:02:41 EDT 2022" starttimestamp="1647716908162" timestamp="14053652" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="600" _type="PauseCommand" date="Sat Mar 19 19:02:43 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14054973">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1321]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="599" _type="MoveCaretCommand" caretOffset="1023" date="Sat Mar 19 19:02:43 EDT 2022" docOffset="1899" starttimestamp="1647716908162" timestamp="14054973" />
  <Command __id="602" _type="PauseCommand" date="Sat Mar 19 19:02:44 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14056303">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1330]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="601" _type="MoveCaretCommand" caretOffset="998" date="Sat Mar 19 19:02:44 EDT 2022" docOffset="1874" starttimestamp="1647716908162" timestamp="14056303" />
  <Command __id="604" _type="PauseCommand" date="Sat Mar 19 19:02:47 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14058864">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2561]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="603" _type="MoveCaretCommand" caretOffset="1023" date="Sat Mar 19 19:02:47 EDT 2022" docOffset="1899" starttimestamp="1647716908162" timestamp="14058864" />
  <Command __id="606" _type="PauseCommand" date="Sat Mar 19 19:02:54 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="14066309">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7445]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="605" _type="ShellCommand" date="Sat Mar 19 19:02:54 EDT 2022" starttimestamp="1647716908162" timestamp="14066309" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="608" _type="PauseCommand" date="Sat Mar 19 19:02:56 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14068153">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1844]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="607" _type="ExceptionCommand" date="Sat Mar 19 19:02:56 EDT 2022" starttimestamp="1647716908162" timestamp="14068153" type="Exception">
    <exceptionString><![CDATA[class java.lang.NullPointerException
java.lang.NullPointerException: Cannot invoke "Object.toString()" because "this.parameterValue" is null
	at bus.uigen.controller.models.AnInteractiveActualParameter.getValue(AnInteractiveActualParameter.java:235)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1415)
	at bus.uigen.sadapters.BeanToRecord.get(BeanToRecord.java:204)
	at bus.uigen.sadapters.BeanToRecord.get(BeanToRecord.java:189)
	at bus.uigen.oadapters.ClassAdapter.addClassComponents(ClassAdapter.java:1611)
	at bus.uigen.oadapters.ClassAdapter.createChildrenBasic(ClassAdapter.java:1345)
	at bus.uigen.oadapters.CompositeAdapter.createChildren(CompositeAdapter.java:718)
	at bus.uigen.visitors.CreateChildrenAdapterVisitor.visit(CreateChildrenAdapterVisitor.java:28)
	at bus.uigen.visitors.CreateChildrenAdapterVisitor.visit(CreateChildrenAdapterVisitor.java:45)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:361)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:372)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:372)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:372)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:70)
	at bus.uigen.uiGenerator.deepCreateChildren(uiGenerator.java:4442)
	at bus.uigen.oadapters.RootAdapter.topAddChildComponents(RootAdapter.java:184)
	at bus.uigen.uiGenerator.topAddChildComponents(uiGenerator.java:862)
	at bus.uigen.uiGenerator.generateInUIPanel(uiGenerator.java:1507)
	at bus.uigen.uiGenerator.generateInBrowsableRootPanel(uiGenerator.java:1473)
	at bus.uigen.uiGenerator.generateInNewBrowsableContainer(uiGenerator.java:1432)
	at bus.uigen.uiGenerator.generateUIFrame(uiGenerator.java:351)
	at bus.uigen.uiGenerator.generateUIFrame(uiGenerator.java:172)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2839)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2806)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2297)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2276)
	at bus.uigen.controller.MethodInvocationManager.autoEdit(MethodInvocationManager.java:123)
	at bus.uigen.controller.MethodInvocationManager.edit(MethodInvocationManager.java:145)
	at bus.uigen.controller.MethodInvocationManager.initInvokerAndEditor(MethodInvocationManager.java:197)
	at bus.uigen.controller.MethodInvocationManager.initUI(MethodInvocationManager.java:966)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:454)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:406)
	at bus.uigen.uiFrame.processMethod(uiFrame.java:3986)
	at bus.uigen.controller.menus.VirtualMethodAction.actionPerformed(VirtualMethodAction.java:61)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="610" _type="PauseCommand" date="Sat Mar 19 19:02:58 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14069871">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1718]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="609" _type="ExceptionCommand" date="Sat Mar 19 19:02:58 EDT 2022" starttimestamp="1647716908162" timestamp="14069871" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1415)
	at bus.uigen.sadapters.BeanToRecord.get(BeanToRecord.java:204)
	at bus.uigen.sadapters.BeanToRecord.get(BeanToRecord.java:189)
	at bus.uigen.oadapters.ClassAdapter.addClassComponents(ClassAdapter.java:1611)
	at bus.uigen.oadapters.ClassAdapter.createChildrenBasic(ClassAdapter.java:1345)
	at bus.uigen.oadapters.CompositeAdapter.createChildren(CompositeAdapter.java:718)
	at bus.uigen.visitors.CreateChildrenAdapterVisitor.visit(CreateChildrenAdapterVisitor.java:28)
	at bus.uigen.visitors.CreateChildrenAdapterVisitor.visit(CreateChildrenAdapterVisitor.java:45)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:361)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:372)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:372)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:372)
	at bus.uigen.visitors.AdapterVisitor.traverseVisibleAndInvisible(AdapterVisitor.java:70)
	at bus.uigen.uiGenerator.deepCreateChildren(uiGenerator.java:4442)
	at bus.uigen.oadapters.RootAdapter.topAddChildComponents(RootAdapter.java:184)
	at bus.uigen.uiGenerator.topAddChildComponents(uiGenerator.java:862)
	at bus.uigen.uiGenerator.generateInUIPanel(uiGenerator.java:1507)
	at bus.uigen.uiGenerator.generateInBrowsableRootPanel(uiGenerator.java:1473)
	at bus.uigen.uiGenerator.generateInNewBrowsableContainer(uiGenerator.java:1432)
	at bus.uigen.uiGenerator.generateUIFrame(uiGenerator.java:351)
	at bus.uigen.uiGenerator.generateUIFrame(uiGenerator.java:172)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2839)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2806)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2297)
	at bus.uigen.ObjectEditor.edit(ObjectEditor.java:2276)
	at bus.uigen.controller.MethodInvocationManager.autoEdit(MethodInvocationManager.java:123)
	at bus.uigen.controller.MethodInvocationManager.edit(MethodInvocationManager.java:145)
	at bus.uigen.controller.MethodInvocationManager.initInvokerAndEditor(MethodInvocationManager.java:197)
	at bus.uigen.controller.MethodInvocationManager.initUI(MethodInvocationManager.java:966)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:454)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:406)
	at bus.uigen.uiFrame.processMethod(uiFrame.java:3986)
	at bus.uigen.controller.menus.VirtualMethodAction.actionPerformed(VirtualMethodAction.java:61)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6401)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="611" _type="ConsoleOutput" date="Sat Mar 19 19:02:58 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14070135" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Parameters:.Parameter 1:.Value: not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Pa"), Diff(DELETE,"tron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer"), Diff(INSERT,"rameters:.Parameter 1:.Value:"), Diff(EQUAL," not in range.¶")]]]></diff>
  </Command>
  <Command __id="613" _type="PauseCommand" date="Sat Mar 19 19:03:52 EDT 2022" range="30s-1m" starttimestamp="1647716908162" timestamp="14123954">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[53819]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="614" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:03:53 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14125808" type="Run" />
  <Command __id="616" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:03:53 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14125808" type="Run" />
  <Command __id="618" _type="PauseCommand" date="Sat Mar 19 19:04:01 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="14133370">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[7562]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="617" _type="MoveCaretCommand" caretOffset="956" date="Sat Mar 19 19:04:01 EDT 2022" docOffset="1832" starttimestamp="1647716908162" timestamp="14133370" />
  <Command __id="619" _type="SelectTextCommand" caretOffset="968" date="Sat Mar 19 19:04:01 EDT 2022" end="968" start="955" starttimestamp="1647716908162" timestamp="14133604" />
  <Command __id="620" _type="SelectTextCommand" caretOffset="973" date="Sat Mar 19 19:04:01 EDT 2022" end="973" start="946" starttimestamp="1647716908162" timestamp="14133791" />
  <Command __id="622" _type="PauseCommand" date="Sat Mar 19 19:04:03 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14135264">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1473]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="621" _type="CopyCommand" date="Sat Mar 19 19:04:03 EDT 2022" starttimestamp="1647716908162" timestamp="14135264" />
  <Command __id="624" _type="PauseCommand" date="Sat Mar 19 19:04:05 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14137511">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2247]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="623" _type="MoveCaretCommand" caretOffset="1101" date="Sat Mar 19 19:04:05 EDT 2022" docOffset="1977" starttimestamp="1647716908162" timestamp="14137511" />
  <Command __id="625" _type="ShellCommand" date="Sat Mar 19 19:04:06 EDT 2022" starttimestamp="1647716908162" timestamp="14138254" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="627" _type="PauseCommand" date="Sat Mar 19 19:04:56 EDT 2022" range="30s-1m" starttimestamp="1647716908162" timestamp="14188457">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[50203]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="626" _type="ShellCommand" date="Sat Mar 19 19:04:56 EDT 2022" starttimestamp="1647716908162" timestamp="14188457" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="629" _type="PauseCommand" date="Sat Mar 19 19:05:02 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="14194205">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5748]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="628" _type="MoveCaretCommand" caretOffset="971" date="Sat Mar 19 19:05:02 EDT 2022" docOffset="1847" starttimestamp="1647716908162" timestamp="14194205" />
  <Command __id="631" _type="PauseCommand" date="Sat Mar 19 19:05:17 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="14208884">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[14679]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="630" _type="MoveCaretCommand" caretOffset="821" date="Sat Mar 19 19:05:17 EDT 2022" docOffset="1697" starttimestamp="1647716908162" timestamp="14208884" />
  <Command __id="632" _type="SelectTextCommand" caretOffset="896" date="Sat Mar 19 19:05:17 EDT 2022" end="896" start="821" starttimestamp="1647716908162" timestamp="14209048" />
  <Command __id="633" _type="SelectTextCommand" caretOffset="900" date="Sat Mar 19 19:05:17 EDT 2022" end="900" start="787" starttimestamp="1647716908162" timestamp="14209547" />
  <Command __id="635" _type="PauseCommand" date="Sat Mar 19 19:05:21 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14213432">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3885]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="634" _type="MoveCaretCommand" caretOffset="785" date="Sat Mar 19 19:05:21 EDT 2022" docOffset="1661" starttimestamp="1647716908162" timestamp="14213432" />
  <DocumentChange __id="555" _type="Insert" date="Sat Mar 19 19:01:44 EDT 2022" docASTNodeCount="376" docActiveCodeLength="2309" docExpressionCount="266" docLength="2780" length="1" offset="1727" starttimestamp="1647716908162" timestamp="13996234">
    <text><![CDATA[T]]></text>
  </DocumentChange>
  <DocumentChange __id="560" _type="Delete" date="Sat Mar 19 19:01:46 EDT 2022" docASTNodeCount="376" docActiveCodeLength="2308" docExpressionCount="266" docLength="2779" endLine="62" length="1" offset="1723" startLine="62" starttimestamp="1647716908162" timestamp="13997905">
    <text><![CDATA[C]]></text>
  </DocumentChange>
  <DocumentChange __id="562" _type="Insert" date="Sat Mar 19 19:01:46 EDT 2022" docASTNodeCount="376" docActiveCodeLength="2309" docExpressionCount="266" docLength="2780" length="1" offset="1723" starttimestamp="1647716908162" timestamp="13998081">
    <text><![CDATA[c]]></text>
  </DocumentChange>
  <DocumentChange __id="580" _type="Delete" date="Sat Mar 19 19:02:18 EDT 2022" docASTNodeCount="380" docActiveCodeLength="2332" docExpressionCount="269" docLength="2778" endLine="64" length="2" offset="1824" repeat="2" startLine="64" starttimestamp="1647716908162" timestamp="14029986" timestamp2="14030120">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="637" _type="PauseCommand" date="Sat Mar 19 19:05:22 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14214485">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1053]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="636" _type="Insert" date="Sat Mar 19 19:05:22 EDT 2022" docASTNodeCount="380" docActiveCodeLength="2336" docExpressionCount="269" docLength="2782" length="4" offset="1661" starttimestamp="1647716908162" timestamp="14214485">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="638" _type="InsertStringCommand" date="Sat Mar 19 19:05:22 EDT 2022" starttimestamp="1647716908162" timestamp="14214555" timestamp2="14214555">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="640" _type="PasteCommand" date="Sat Mar 19 19:05:23 EDT 2022" starttimestamp="1647716908162" timestamp="14215321" />
  <DocumentChange __id="639" _type="Replace" date="Sat Mar 19 19:05:23 EDT 2022" docASTNodeCount="384" docActiveCodeLength="2361" docExpressionCount="272" docLength="2807" endLine="62" insertionLength="27" int_docASTNodeCount="380" int_docActiveCodeLength="2334" int_docExpressionCount="269" int_docLength="2780" length="2" offset="1663" startLine="62" starttimestamp="1647716908162" timestamp="14215293">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		editor.hideMainPanel();
]]></insertedText>
  </DocumentChange>
  <Command __id="642" _type="PauseCommand" date="Sat Mar 19 19:05:26 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14218084">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2763]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="646" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:05:28 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="14220231" />
  <Command __id="644" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:05:28 EDT 2022" projectName="null" starttimestamp="1647716908162" timestamp="14219891">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="648" _type="PauseCommand" date="Sat Mar 19 19:05:29 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14221819">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1588]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="649" _type="MoveCaretCommand" caretOffset="815" date="Sat Mar 19 19:05:30 EDT 2022" docOffset="1691" starttimestamp="1647716908162" timestamp="14222145" />
  <Command __id="651" _type="PauseCommand" date="Sat Mar 19 19:05:31 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14223252">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1107]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="650" _type="MoveCaretCommand" caretOffset="800" date="Sat Mar 19 19:05:31 EDT 2022" docOffset="1676" starttimestamp="1647716908162" timestamp="14223252" />
  <Command __id="652" _type="SelectTextCommand" caretOffset="805" date="Sat Mar 19 19:05:31 EDT 2022" end="805" start="793" starttimestamp="1647716908162" timestamp="14223385" />
  <Command __id="653" _type="SelectTextCommand" caretOffset="904" date="Sat Mar 19 19:05:31 EDT 2022" end="904" start="791" starttimestamp="1647716908162" timestamp="14223532" />
  <Command __id="655" _type="PauseCommand" date="Sat Mar 19 19:05:33 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14225251">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1719]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="654" _type="MoveCaretCommand" caretOffset="789" date="Sat Mar 19 19:05:33 EDT 2022" docOffset="1665" starttimestamp="1647716908162" timestamp="14225251" />
  <Command __id="657" _type="PauseCommand" date="Sat Mar 19 19:05:38 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="14230826">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5575]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="656" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:05:38 EDT 2022" starttimestamp="1647716908162" timestamp="14230826" />
  <Command __id="659" _type="PauseCommand" date="Sat Mar 19 19:05:41 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14233494">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2668]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="658" _type="MoveCaretCommand" caretOffset="853" date="Sat Mar 19 19:05:41 EDT 2022" docOffset="1729" starttimestamp="1647716908162" timestamp="14233494" />
  <Command __id="660" _type="SelectTextCommand" caretOffset="858" date="Sat Mar 19 19:05:41 EDT 2022" end="858" start="847" starttimestamp="1647716908162" timestamp="14233706" />
  <Command __id="662" _type="PauseCommand" date="Sat Mar 19 19:05:44 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14235917">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2211]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="661" _type="InsertStringCommand" date="Sat Mar 19 19:05:44 EDT 2022" starttimestamp="1647716908162" timestamp="14235917" timestamp2="14235917">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="664" _type="PauseCommand" date="Sat Mar 19 19:05:46 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14237929">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2012]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="663" _type="InsertStringCommand" date="Sat Mar 19 19:05:46 EDT 2022" starttimestamp="1647716908162" timestamp="14237929" timestamp2="14237929">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="666" _type="PauseCommand" date="Sat Mar 19 19:05:47 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14238955">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1026]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="665" _type="InsertStringCommand" date="Sat Mar 19 19:05:47 EDT 2022" starttimestamp="1647716908162" timestamp="14238955" timestamp2="14238955">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="667" _type="InsertStringCommand" date="Sat Mar 19 19:05:47 EDT 2022" starttimestamp="1647716908162" timestamp="14238990" timestamp2="14238990">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="668" _type="InsertStringCommand" date="Sat Mar 19 19:05:47 EDT 2022" starttimestamp="1647716908162" timestamp="14239022" timestamp2="14239022">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="669" _type="InsertStringCommand" date="Sat Mar 19 19:05:47 EDT 2022" starttimestamp="1647716908162" timestamp="14239047" timestamp2="14239047">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="670" _type="InsertStringCommand" date="Sat Mar 19 19:05:47 EDT 2022" starttimestamp="1647716908162" timestamp="14239082" timestamp2="14239082">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="671" _type="InsertStringCommand" date="Sat Mar 19 19:05:47 EDT 2022" starttimestamp="1647716908162" timestamp="14239108" timestamp2="14239108">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="672" _type="InsertStringCommand" date="Sat Mar 19 19:05:47 EDT 2022" starttimestamp="1647716908162" timestamp="14239142" timestamp2="14239142">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="674" _type="PauseCommand" date="Sat Mar 19 19:05:48 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14240228">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1086]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="678" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:05:58 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14250073" type="Run" />
  <Command __id="680" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:05:58 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14250073" type="Run" />
  <Command __id="682" _type="PauseCommand" date="Sat Mar 19 19:05:59 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14251650">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1576]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="681" _type="ConsoleOutput" date="Sat Mar 19 19:05:59 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14251649" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Parameters:.Parameter 1:.Value: not in range."), Diff(INSERT,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="683" _type="ShellCommand" date="Sat Mar 19 19:06:00 EDT 2022" starttimestamp="1647716908162" timestamp="14251998" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="684" _type="ConsoleOutput" date="Sat Mar 19 19:06:00 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14252368" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@66982506
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@66982506"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="685" _type="ConsoleOutput" date="Sat Mar 19 19:06:00 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14252568" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Patron List not in range.
W*** Value: null of Root.Chef List not in range.
W*** Value: null of Root.Buffer not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@66982506"), Diff(INSERT,"Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="687" _type="PauseCommand" date="Sat Mar 19 19:06:25 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="14277087">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[24519]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="686" _type="ShellCommand" date="Sat Mar 19 19:06:25 EDT 2022" starttimestamp="1647716908162" timestamp="14277087" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="688" _type="MoveCaretCommand" caretOffset="1059" date="Sat Mar 19 19:06:25 EDT 2022" docOffset="1935" starttimestamp="1647716908162" timestamp="14277169" />
  <Command __id="690" _type="PauseCommand" date="Sat Mar 19 19:06:26 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14278173">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1004]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="698" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:06:32 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14284023" type="Run" />
  <Command __id="700" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:06:32 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14284023" type="Run" />
  <Command __id="702" _type="PauseCommand" date="Sat Mar 19 19:06:33 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14285293">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1270]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="701" _type="ConsoleOutput" date="Sat Mar 19 19:06:33 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14285293" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(INSERT,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="703" _type="ShellCommand" date="Sat Mar 19 19:06:33 EDT 2022" starttimestamp="1647716908162" timestamp="14285663" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="704" _type="ConsoleOutput" date="Sat Mar 19 19:06:34 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14286019" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@66982506
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@66982506"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="705" _type="ConsoleOutput" date="Sat Mar 19 19:06:34 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14286242" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Patron List not in range.
W*** Value: null of Root.Chef List not in range.
W*** Value: null of Root.Buffer not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@66982506"), Diff(INSERT,"Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="707" _type="PauseCommand" date="Sat Mar 19 19:06:53 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="14304993">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[18751]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="706" _type="ConsoleOutput" date="Sat Mar 19 19:06:53 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14304993" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@41ca2f77]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@41ca2f77]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@41ca2f77]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@41ca2f77]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@bb3463]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@bb3463]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@bb3463]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@bb3463]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@28495934]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@28495934]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@28495934]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@28495934]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4e953f28]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4e953f28]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4e953f28]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4e953f28]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5e34101a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5e34101a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5e34101a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5e34101a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7752f93]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7752f93]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@7752f93]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@7752f93]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@659756b0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@659756b0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@659756b0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@659756b0]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@41ca2f77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@41ca2f77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@41ca2f77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@41ca2f77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@bb3463]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@bb3463]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@bb3463]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@bb3463]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@28495934]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@28495934]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@28495934]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@28495934]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4e953f28]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4e953f28]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4e953f28]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4e953f28]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5e34101a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5e34101a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5e34101a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5e34101a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7752f93]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7752f93]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@7752f93]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@7752f93]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@659756b0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@659756b0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@659756b0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@659756b0]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="708" _type="ConsoleOutput" date="Sat Mar 19 19:06:53 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14305236" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@41ca2f77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@41ca2f77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@41ca2f77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@41ca2f77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@bb3463]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@bb3463]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@bb3463]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@bb3463]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@28495934]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@28495934]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@28495934]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@28495934]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4e953f28]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4e953f28]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4e953f28]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4e953f28]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5e34101a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5e34101a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5e34101a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5e34101a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7752f93]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7752f93]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@7752f93]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@7752f93]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@659756b0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@659756b0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@659756b0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@659756b0]¶Moving the stove:"), Diff(INSERT,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list."), Diff(EQUAL," ¶")]]]></diff>
  </Command>
  <Command __id="709" _type="ConsoleOutput" date="Sat Mar 19 19:06:53 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14305298" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"Table"), Diff(EQUAL,".addPropertyChangeListener("), Diff(DELETE,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use"), Diff(INSERT," should be associated with"), Diff(EQUAL," annotation"), Diff(INSERT,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"interface java.beans."), Diff(EQUAL,"Property"), Diff(DELETE,"Change"), Diff(INSERT," "), Diff(EQUAL,"Listener)"), Diff(DELETE," for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Line"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="710" _type="ConsoleOutput" date="Sat Mar 19 19:06:54 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14305866" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(INSERT," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Tab"), Diff(INSERT,"nAng"), Diff(EQUAL,"le.addPropertyChangeListener("), Diff(INSERT,"graphics.Angle,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with"), Diff(INSERT,"¶W*** Use"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"Property Listener)¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(INSERT,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="711" _type="ConsoleOutput" date="Sat Mar 19 19:06:54 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14305957" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="712" _type="ConsoleOutput" date="Sat Mar 19 19:06:54 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14306445" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W"), Diff(INSERT,"E"), Diff(EQUAL,"***"), Diff(DELETE," Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Could not find image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="713" _type="ConsoleOutput" date="Sat Mar 19 19:06:55 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14307055" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Patron List.1:.Patron.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W"), Diff(EQUAL,"***"), Diff(DELETE,"Could not find image file:"), Diff(INSERT," Value: null of Root.Patron List.1:.Patron.Plate not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="714" _type="ConsoleOutput" date="Sat Mar 19 19:06:55 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14307276" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Patron List.1:.Patron.Plate"), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶E***Could"), Diff(EQUAL," not "), Diff(INSERT,"f"), Diff(EQUAL,"in"), Diff(DELETE," range."), Diff(INSERT,"d image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="715" _type="ConsoleOutput" date="Sat Mar 19 19:06:55 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14307419" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶"), Diff(EQUAL,"E***Could not find image file:¶")]]]></diff>
  </Command>
  <Command __id="716" _type="ConsoleOutput" date="Sat Mar 19 19:06:55 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14307522" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"E***Could not find image file:¶")]]]></diff>
  </Command>
  <Command __id="717" _type="ConsoleOutput" date="Sat Mar 19 19:06:55 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14307624" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"E***Could not find image file:¶")]]]></diff>
  </Command>
  <Command __id="718" _type="ConsoleOutput" date="Sat Mar 19 19:06:56 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14307904" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.1:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W"), Diff(EQUAL,"***"), Diff(DELETE,"Could not find image file:"), Diff(INSERT," Value: null of Root.Chef List.1:.Chef.Plate not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="719" _type="ConsoleOutput" date="Sat Mar 19 19:06:56 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14308449" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.2:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Chef List."), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,":.Chef.Plate not in range.¶")]]]></diff>
  </Command>
  <Command __id="720" _type="ConsoleOutput" date="Sat Mar 19 19:06:57 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14309104" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.3:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Chef List."), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,":.Chef.Plate not in range.¶")]]]></diff>
  </Command>
  <Command __id="721" _type="ConsoleOutput" date="Sat Mar 19 19:06:57 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14309582" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.4:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Chef List."), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,":.Chef.Plate not in range.¶")]]]></diff>
  </Command>
  <Command __id="722" _type="ConsoleOutput" date="Sat Mar 19 19:06:58 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14310045" type="ConsoleOutput">
    <outputString><![CDATA[W*** Assuming implicit pattern: No Pattern
  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer
E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@4a44bd21
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Chef List.4:.Chef.Plate not in range."), Diff(INSERT,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@4a44bd21"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="723" _type="ConsoleOutput" date="Sat Mar 19 19:06:58 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14310444" type="ConsoleOutput">
    <outputString><![CDATA[W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@4a44bd21"), Diff(INSERT,"Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="725" _type="PauseCommand" date="Sat Mar 19 19:08:03 EDT 2022" range="1m-2m" starttimestamp="1647716908162" timestamp="14375150">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[64706]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="724" _type="ExceptionCommand" date="Sat Mar 19 19:08:03 EDT 2022" starttimestamp="1647716908162" timestamp="14375150" type="Exception">
    <exceptionString><![CDATA[W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextOut of object: graphics.ABoundedBuffer@4a44bd21. Ignoring notification.
0
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6dc5b2b0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6dc5b2b0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6dc5b2b0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6dc5b2b0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@45ac8112]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@45ac8112]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@45ac8112]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@45ac8112]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@c7cb434]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@c7cb434]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@c7cb434]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@c7cb434]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4f3ee313]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4f3ee313]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4f3ee313]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4f3ee313]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@7d9570e3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@7d9570e3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@7d9570e3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@7d9570e3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@441a1c5a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@441a1c5a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@441a1c5a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@441a1c5a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@50e6fd23]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@50e6fd23]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@50e6fd23]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@50e6fd23]
java.lang.NullPointerException: Cannot invoke "shapes.RemoteImage.setImageFileName(String)" because "shape" is null
	at bus.uigen.oadapters.ImageShapeAdapter.setImageFileName(ImageShapeAdapter.java:51)
	at bus.uigen.oadapters.ImageShapeAdapter.respondToPropertyChange(ImageShapeAdapter.java:71)
	at bus.uigen.oadapters.ShapeObjectAdapter.subPropertyChange(ShapeObjectAdapter.java:1151)
	at bus.uigen.oadapters.ObjectAdapter.propertyChange(ObjectAdapter.java:4330)
	at graphics.APropertyListenerSupport.notifyAllListeners(APropertyListenerSupport.java:21)
	at graphics.APlate.setImageFileName(APlate.java:53)
	at graphics.AnAvatar.dropPlate(AnAvatar.java:158)
	at graphics.AnArrayBasedScene.chefToTable(AnArrayBasedScene.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="726" _type="ExceptionCommand" date="Sat Mar 19 19:08:03 EDT 2022" starttimestamp="1647716908162" timestamp="14375163" type="Exception">
    <exceptionString><![CDATA[E**: exception invoking location methods
E**: exception invoking imageFileName methods
java.lang.NullPointerException: Cannot invoke "shapes.ImageModel.getImageFileName()" because "imageShape" is null
	at bus.uigen.oadapters.ImageShapeAdapter.recalculateViewObject(ImageShapeAdapter.java:116)
	at bus.uigen.oadapters.ShapeObjectAdapter.recalculateViewObject(ShapeObjectAdapter.java:553)
	at bus.uigen.oadapters.ShapeObjectAdapter.refreshValueButNotAtomic(ShapeObjectAdapter.java:608)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.CompositeAdapter.refreshValue(CompositeAdapter.java:212)
	at bus.uigen.oadapters.VectorAdapter.refreshValue(VectorAdapter.java:2055)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ObjectAdapter.implicitRefresh(ObjectAdapter.java:5406)
	at bus.uigen.uiFrame.doMyImplicitRefresh(uiFrame.java:4601)
	at bus.uigen.uiFrame.subDoImplicitRefresh(uiFrame.java:4702)
	at bus.uigen.uiFrame.doImplicitRefresh(uiFrame.java:4682)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1920)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2002)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:685)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:453)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:406)
	at bus.uigen.uiFrame.processMethod(uiFrame.java:3986)
	at bus.uigen.controller.menus.VirtualMethodAction.actionPerformed(VirtualMethodAction.java:61)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6401)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5012)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4844)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4919)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="728" _type="PauseCommand" date="Sat Mar 19 19:08:05 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14377682">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[2518]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="727" _type="ExceptionCommand" date="Sat Mar 19 19:08:05 EDT 2022" starttimestamp="1647716908162" timestamp="14377681" type="Exception">
    <exceptionString><![CDATA[1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@7ba33163]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@7ba33163]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=240; newValue=225; propagationId=null; source=graphics.ALine@7ba33163]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=240; newValue=225; propagationId=null; source=graphics.ALine@7ba33163]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@52be523c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@52be523c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=240; newValue=225; propagationId=null; source=graphics.ALine@52be523c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=240; newValue=225; propagationId=null; source=graphics.ALine@52be523c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@34156cde]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@34156cde]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@34156cde]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@34156cde]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@1f3f01e5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@1f3f01e5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@1f3f01e5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@1f3f01e5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@7c6ebfe6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@7c6ebfe6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@7c6ebfe6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@7c6ebfe6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@68ebfe05]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@68ebfe05]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=190; newValue=175; propagationId=null; source=graphics.ALine@68ebfe05]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=190; newValue=175; propagationId=null; source=graphics.ALine@68ebfe05]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=593; propagationId=null; source=graphics.AHead@3f428fdf]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=593; propagationId=null; source=graphics.AHead@3f428fdf]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=101; newValue=86; propagationId=null; source=graphics.AHead@3f428fdf]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=101; newValue=86; propagationId=null; source=graphics.AHead@3f428fdf]
E**: exception invoking location methods
E**: exception invoking imageFileName methods
java.lang.NullPointerException: Cannot invoke "shapes.ImageModel.getImageFileName()" because "imageShape" is null
	at bus.uigen.oadapters.ImageShapeAdapter.recalculateViewObject(ImageShapeAdapter.java:116)
	at bus.uigen.oadapters.ShapeObjectAdapter.recalculateViewObject(ShapeObjectAdapter.java:553)
	at bus.uigen.oadapters.ShapeObjectAdapter.refreshValueButNotAtomic(ShapeObjectAdapter.java:608)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.CompositeAdapter.refreshValue(CompositeAdapter.java:212)
	at bus.uigen.oadapters.VectorAdapter.refreshValue(VectorAdapter.java:2055)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="730" _type="PauseCommand" date="Sat Mar 19 19:08:11 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="14383563">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[5882]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="729" _type="ExceptionCommand" date="Sat Mar 19 19:08:11 EDT 2022" starttimestamp="1647716908162" timestamp="14383563" type="Exception">
    <exceptionString><![CDATA[2
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@41ca2f77]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@41ca2f77]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@41ca2f77]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@41ca2f77]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@bb3463]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@bb3463]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@bb3463]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@bb3463]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@28495934]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@28495934]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@28495934]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@28495934]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@4e953f28]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@4e953f28]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@4e953f28]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@4e953f28]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@5e34101a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@5e34101a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@5e34101a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@5e34101a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@7752f93]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@7752f93]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=190; propagationId=null; source=graphics.ALine@7752f93]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=190; propagationId=null; source=graphics.ALine@7752f93]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=93; newValue=673; propagationId=null; source=graphics.AHead@659756b0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=93; newValue=673; propagationId=null; source=graphics.AHead@659756b0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=101; propagationId=null; source=graphics.AHead@659756b0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=101; propagationId=null; source=graphics.AHead@659756b0]
E**: exception invoking location methods
E**: exception invoking imageFileName methods
java.lang.NullPointerException: Cannot invoke "shapes.ImageModel.getImageFileName()" because "imageShape" is null
	at bus.uigen.oadapters.ImageShapeAdapter.recalculateViewObject(ImageShapeAdapter.java:116)
	at bus.uigen.oadapters.ShapeObjectAdapter.recalculateViewObject(ShapeObjectAdapter.java:553)
	at bus.uigen.oadapters.ShapeObjectAdapter.refreshValueButNotAtomic(ShapeObjectAdapter.java:608)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.CompositeAdapter.refreshValue(CompositeAdapter.java:212)
	at bus.uigen.oadapters.VectorAdapter.refreshValue(VectorAdapter.java:2055)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="732" _type="PauseCommand" date="Sat Mar 19 19:09:10 EDT 2022" range="30s-1m" starttimestamp="1647716908162" timestamp="14442762">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[59199]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="733" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:09:12 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14444368" type="Run" />
  <Command __id="735" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:09:12 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14444368" type="Run" />
  <Command __id="647" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:05:29 EDT 2022" docASTNodeCount="380" docActiveCodeLength="2336" docExpressionCount="269" docLength="2782" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14221819">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AnArrayBasedScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ArrayBasedScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ArrayBasedScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ArrayBasedScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		"), Diff(DELETE,"//"), Diff(INSERT,"¶		"), Diff(EQUAL,"ObjectEditor.setMethodAttribute(AnArrayBasedScene.class, ""), Diff(DELETE,"C"), Diff(INSERT,"c"), Diff(EQUAL,"hef"), Diff(DELETE," to "), Diff(INSERT,"To"), Diff(EQUAL,"Table", AttributeNames.TOOLBAR_METHOD, true);¶		OEFrame editor = ObjectEditor.edit(scene"), Diff(DELETE,"1"), Diff(EQUAL,");¶		"), Diff(DELETE,"//"), Diff(EQUAL,"editor.hideMainPanel();¶		editor.showDrawPanel();¶"), Diff(INSERT,""), Diff(EQUAL,"		"), Diff(DELETE,"//"), Diff(EQUAL,"editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package main;

import java.awt.BorderLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import bus.uigen.attributes.AttributeNames;
import bus.uigen.widgets.VirtualComponent;
import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import controls.Painter;
import factories.AFactory;
import graphics.ACircle;
import graphics.AButtonArrayScene;
import graphics.AChef;
import graphics.ALine;
import graphics.APatron;
import graphics.AScene;
import graphics.AnAngle;
import graphics.AnArrayBasedScene;
import graphics.AnAvatar;
import graphics.Angle;
import graphics.ArrayBasedScene;
import graphics.Avatar;
import graphics.Line;
import graphics.Scene;
import util.misc.Console;

public class MainClass {
	static ArrayBasedScene scene = AFactory.arrayBasedSceneFactoryMethod();
	static ArrayBasedScene scene1 = new AButtonArrayScene();

	public static void main(String[] args) {
		
//		animateGraphics();
//		animateArrayUse();
		animateArrayUseInteractive();
	}
	
	public static void animateGraphics() {
		Scene Restaurant = new AScene();
		OEFrame editor = ObjectEditor.edit(Restaurant);
		editor.showDrawPanel();
		editor.showTreePanel();
//		Component c = editor.getDrawComponent();
//		VirtualComponent v = editor.getDrawVirtualComponent();
//		c.addMouseListener(null);

		
	}

	public static void animateArrayUseInteractive() {

		ObjectEditor.confirmSelectedMethodParameters(false);
		
		ObjectEditor.setMethodAttribute(AnArrayBasedScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);
		OEFrame editor = ObjectEditor.edit(scene);
		editor.hideMainPanel();
		editor.showDrawPanel();
		editor.showToolBar();
		
//		JFrame frame = new JFrame();
//		//frame.add((Component) console, BorderLayout.CENTER);
//		frame.setSize(1000, 1000);
//		frame.setVisible(true);
		
	
		
//		JPanel panel = new JPanel();
//		JButton button1 = control.getChefToBuffer();
//		panel.add(button1);
//		frame.add(panel);
	}
	
	public static void animatePainterTwo(Painter view) {
		JFrame aFrame = new JFrame();
		aFrame.add((Component) view, BorderLayout.CENTER);
		aFrame.setSize(1000, 1000);
		aFrame.setVisible(true);
		JPanel panel = new JPanel();
		aFrame.add(panel, BorderLayout.NORTH);
	}
	
	public static void moveAvatar() {
		System.out.println("test1");
		scene.getChefList().get(2).getChef().move(30, 0);
		scene.getChefList().get(2).getStove().move(10, 0);
		System.out.println("Moving the stove: \n");
		scene.getChefList().get(3).getStove().move(30, 30);
	}

}
]]></snapshot>
  </Command>
  <Command __id="737" _type="PauseCommand" date="Sat Mar 19 19:09:16 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14448170">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3802]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="736" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:09:16 EDT 2022" docASTNodeCount="388" docActiveCodeLength="2420" docExpressionCount="276" docLength="2891" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14448170">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AnArrayBasedScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ArrayBasedScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ArrayBasedScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ArrayBasedScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		"), Diff(INSERT,"ObjectEditor.setMethodAttribute(AnArrayBasedScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);"), Diff(EQUAL,"¶		ObjectEditor.setMethodAttribute(AnArrayBasedScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		OEFrame editor = ObjectEditor.edit(scene);¶		"), Diff(INSERT,"//"), Diff(EQUAL,"editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package main;

import java.awt.BorderLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import bus.uigen.attributes.AttributeNames;
import bus.uigen.widgets.VirtualComponent;
import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import controls.Painter;
import factories.AFactory;
import graphics.ACircle;
import graphics.AButtonArrayScene;
import graphics.AChef;
import graphics.ALine;
import graphics.APatron;
import graphics.AScene;
import graphics.AnAngle;
import graphics.AnArrayBasedScene;
import graphics.AnAvatar;
import graphics.Angle;
import graphics.ArrayBasedScene;
import graphics.Avatar;
import graphics.Line;
import graphics.Scene;
import util.misc.Console;

public class MainClass {
	static ArrayBasedScene scene = AFactory.arrayBasedSceneFactoryMethod();
	static ArrayBasedScene scene1 = new AButtonArrayScene();

	public static void main(String[] args) {
		
//		animateGraphics();
//		animateArrayUse();
		animateArrayUseInteractive();
	}
	
	public static void animateGraphics() {
		Scene Restaurant = new AScene();
		OEFrame editor = ObjectEditor.edit(Restaurant);
		editor.showDrawPanel();
		editor.showTreePanel();
//		Component c = editor.getDrawComponent();
//		VirtualComponent v = editor.getDrawVirtualComponent();
//		c.addMouseListener(null);

		
	}

	public static void animateArrayUseInteractive() {

		ObjectEditor.confirmSelectedMethodParameters(false);
		ObjectEditor.setMethodAttribute(AnArrayBasedScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);
		ObjectEditor.setMethodAttribute(AnArrayBasedScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);
		OEFrame editor = ObjectEditor.edit(scene);
		//editor.hideMainPanel();
		editor.showDrawPanel();
		editor.showToolBar();
		
//		JFrame frame = new JFrame();
//		//frame.add((Component) console, BorderLayout.CENTER);
//		frame.setSize(1000, 1000);
//		frame.setVisible(true);
		
	
		
//		JPanel panel = new JPanel();
//		JButton button1 = control.getChefToBuffer();
//		panel.add(button1);
//		frame.add(panel);
	}
	
	public static void animatePainterTwo(Painter view) {
		JFrame aFrame = new JFrame();
		aFrame.add((Component) view, BorderLayout.CENTER);
		aFrame.setSize(1000, 1000);
		aFrame.setVisible(true);
		JPanel panel = new JPanel();
		aFrame.add(panel, BorderLayout.NORTH);
	}
	
	public static void moveAvatar() {
		System.out.println("test1");
		scene.getChefList().get(2).getChef().move(30, 0);
		scene.getChefList().get(2).getStove().move(10, 0);
		System.out.println("Moving the stove: \n");
		scene.getChefList().get(3).getStove().move(30, 30);
	}

}
]]></snapshot>
  </Command>
  <Command __id="738" _type="MoveCaretCommand" caretOffset="1061" date="Sat Mar 19 19:09:16 EDT 2022" docOffset="1937" starttimestamp="1647716908162" timestamp="14448238" />
  <Command __id="739" _type="MoveCaretCommand" caretOffset="1061" date="Sat Mar 19 19:09:16 EDT 2022" docOffset="1937" starttimestamp="1647716908162" timestamp="14448338" />
  <Command __id="741" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:09:16 EDT 2022" starttimestamp="1647716908162" timestamp="14448704" />
  <Command __id="742" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:09:16 EDT 2022" starttimestamp="1647716908162" timestamp="14448705" />
  <Command __id="744" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:09:17 EDT 2022" starttimestamp="1647716908162" timestamp="14449012" />
  <Command __id="745" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:09:17 EDT 2022" starttimestamp="1647716908162" timestamp="14449012" />
  <Command __id="747" _type="PauseCommand" date="Sat Mar 19 19:09:18 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14450308">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1296]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="746" _type="MoveCaretCommand" caretOffset="733" date="Sat Mar 19 19:09:18 EDT 2022" docOffset="1609" starttimestamp="1647716908162" timestamp="14450308" />
  <Command __id="748" _type="MoveCaretCommand" caretOffset="733" date="Sat Mar 19 19:09:18 EDT 2022" docOffset="1609" starttimestamp="1647716908162" timestamp="14450308" />
  <Command __id="749" _type="MoveCaretCommand" caretOffset="789" date="Sat Mar 19 19:09:19 EDT 2022" docOffset="1665" starttimestamp="1647716908162" timestamp="14451283" />
  <Command __id="750" _type="MoveCaretCommand" caretOffset="789" date="Sat Mar 19 19:09:19 EDT 2022" docOffset="1665" starttimestamp="1647716908162" timestamp="14451283" />
  <DocumentChange __id="740" _type="Delete" date="Sat Mar 19 19:09:16 EDT 2022" docASTNodeCount="392" docActiveCodeLength="2443" docExpressionCount="279" docLength="2889" endLine="65" length="2" offset="1935" repeat="2" startLine="65" starttimestamp="1647716908162" timestamp="14448676" timestamp2="14449004">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="752" _type="PauseCommand" date="Sat Mar 19 19:09:20 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14452790">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1507]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="753" _type="InsertStringCommand" date="Sat Mar 19 19:09:20 EDT 2022" starttimestamp="1647716908162" timestamp="14452820" timestamp2="14452820">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="754" _type="InsertStringCommand" date="Sat Mar 19 19:09:20 EDT 2022" starttimestamp="1647716908162" timestamp="14452820" timestamp2="14452820">
    <data><![CDATA[/]]></data>
  </Command>
  <DocumentChange __id="751" _type="Insert" date="Sat Mar 19 19:09:20 EDT 2022" docASTNodeCount="392" docActiveCodeLength="2444" docExpressionCount="279" docLength="2890" length="1" offset="1665" starttimestamp="1647716908162" timestamp="14452790">
    <text><![CDATA[/]]></text>
  </DocumentChange>
  <Command __id="756" _type="PauseCommand" date="Sat Mar 19 19:09:22 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14454806">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1986]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="755" _type="Insert" date="Sat Mar 19 19:09:22 EDT 2022" docASTNodeCount="380" docActiveCodeLength="2336" docExpressionCount="269" docLength="2891" length="1" offset="1666" starttimestamp="1647716908162" timestamp="14454806">
    <text><![CDATA[/]]></text>
  </DocumentChange>
  <Command __id="757" _type="InsertStringCommand" date="Sat Mar 19 19:09:22 EDT 2022" starttimestamp="1647716908162" timestamp="14454829" timestamp2="14454829">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="758" _type="InsertStringCommand" date="Sat Mar 19 19:09:22 EDT 2022" starttimestamp="1647716908162" timestamp="14454830" timestamp2="14454830">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="759" _type="MoveCaretCommand" caretOffset="902" date="Sat Mar 19 19:09:23 EDT 2022" docOffset="1778" starttimestamp="1647716908162" timestamp="14455515" />
  <Command __id="760" _type="MoveCaretCommand" caretOffset="902" date="Sat Mar 19 19:09:23 EDT 2022" docOffset="1778" starttimestamp="1647716908162" timestamp="14455515" />
  <Command __id="762" _type="InsertStringCommand" date="Sat Mar 19 19:09:24 EDT 2022" starttimestamp="1647716908162" timestamp="14456192" timestamp2="14456192">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="763" _type="InsertStringCommand" date="Sat Mar 19 19:09:24 EDT 2022" starttimestamp="1647716908162" timestamp="14456192" timestamp2="14456192">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="765" _type="InsertStringCommand" date="Sat Mar 19 19:09:24 EDT 2022" starttimestamp="1647716908162" timestamp="14456326" timestamp2="14456326">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="766" _type="InsertStringCommand" date="Sat Mar 19 19:09:24 EDT 2022" starttimestamp="1647716908162" timestamp="14456326" timestamp2="14456326">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="768" _type="PauseCommand" date="Sat Mar 19 19:09:26 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14457944">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1618]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="767" _type="MoveCaretCommand" caretOffset="1057" date="Sat Mar 19 19:09:26 EDT 2022" docOffset="1933" starttimestamp="1647716908162" timestamp="14457944" />
  <Command __id="769" _type="MoveCaretCommand" caretOffset="1057" date="Sat Mar 19 19:09:26 EDT 2022" docOffset="1933" starttimestamp="1647716908162" timestamp="14457945" />
  <Command __id="771" _type="PauseCommand" date="Sat Mar 19 19:09:29 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14461789">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3844]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="770" _type="MoveCaretCommand" caretOffset="791" date="Sat Mar 19 19:09:29 EDT 2022" docOffset="1667" starttimestamp="1647716908162" timestamp="14461789" />
  <Command __id="772" _type="MoveCaretCommand" caretOffset="791" date="Sat Mar 19 19:09:29 EDT 2022" docOffset="1667" starttimestamp="1647716908162" timestamp="14461790" />
  <DocumentChange __id="761" _type="Insert" date="Sat Mar 19 19:09:24 EDT 2022" docASTNodeCount="368" docActiveCodeLength="2227" docExpressionCount="259" docLength="2893" length="2" offset="1778" repeat="2" starttimestamp="1647716908162" timestamp="14456175" timestamp2="14456294">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="774" _type="PauseCommand" date="Sat Mar 19 19:09:31 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14463080">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1290]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="773" _type="Delete" date="Sat Mar 19 19:09:31 EDT 2022" docASTNodeCount="380" docActiveCodeLength="2334" docExpressionCount="269" docLength="2891" endLine="62" length="2" offset="1665" repeat="2" startLine="62" starttimestamp="1647716908162" timestamp="14463080" timestamp2="14463111">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="775" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:09:31 EDT 2022" starttimestamp="1647716908162" timestamp="14463108" />
  <Command __id="776" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:09:31 EDT 2022" starttimestamp="1647716908162" timestamp="14463108" />
  <Command __id="778" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:09:31 EDT 2022" starttimestamp="1647716908162" timestamp="14463121" />
  <Command __id="779" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:09:31 EDT 2022" starttimestamp="1647716908162" timestamp="14463122" />
  <Command __id="780" _type="MoveCaretCommand" caretOffset="902" date="Sat Mar 19 19:09:31 EDT 2022" docOffset="1778" starttimestamp="1647716908162" timestamp="14463832" />
  <Command __id="781" _type="MoveCaretCommand" caretOffset="902" date="Sat Mar 19 19:09:31 EDT 2022" docOffset="1778" starttimestamp="1647716908162" timestamp="14463832" />
  <Command __id="783" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:09:32 EDT 2022" starttimestamp="1647716908162" timestamp="14464137" />
  <Command __id="784" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:09:32 EDT 2022" starttimestamp="1647716908162" timestamp="14464137" />
  <Command __id="786" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:09:32 EDT 2022" starttimestamp="1647716908162" timestamp="14464261" />
  <Command __id="787" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:09:32 EDT 2022" starttimestamp="1647716908162" timestamp="14464261" />
  <Command __id="789" _type="PauseCommand" date="Sat Mar 19 19:09:33 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14465687">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1426]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="788" _type="MoveCaretCommand" caretOffset="1059" date="Sat Mar 19 19:09:33 EDT 2022" docOffset="1935" starttimestamp="1647716908162" timestamp="14465687" />
  <Command __id="790" _type="MoveCaretCommand" caretOffset="1059" date="Sat Mar 19 19:09:33 EDT 2022" docOffset="1935" starttimestamp="1647716908162" timestamp="14465687" />
  <DocumentChange __id="782" _type="Delete" date="Sat Mar 19 19:09:32 EDT 2022" docASTNodeCount="392" docActiveCodeLength="2443" docExpressionCount="279" docLength="2889" endLine="63" length="2" offset="1776" repeat="2" startLine="63" starttimestamp="1647716908162" timestamp="14464119" timestamp2="14464250">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="792" _type="PauseCommand" date="Sat Mar 19 19:09:35 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14467280">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1593]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="793" _type="InsertStringCommand" date="Sat Mar 19 19:09:35 EDT 2022" starttimestamp="1647716908162" timestamp="14467303" timestamp2="14467303">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="794" _type="InsertStringCommand" date="Sat Mar 19 19:09:35 EDT 2022" starttimestamp="1647716908162" timestamp="14467303" timestamp2="14467303">
    <data><![CDATA[/]]></data>
  </Command>
  <DocumentChange __id="791" _type="Insert" date="Sat Mar 19 19:09:35 EDT 2022" docASTNodeCount="392" docActiveCodeLength="2444" docExpressionCount="279" docLength="2890" length="1" offset="1935" starttimestamp="1647716908162" timestamp="14467280">
    <text><![CDATA[/]]></text>
  </DocumentChange>
  <Command __id="796" _type="PauseCommand" date="Sat Mar 19 19:09:37 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14469283">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1980]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="797" _type="InsertStringCommand" date="Sat Mar 19 19:09:37 EDT 2022" starttimestamp="1647716908162" timestamp="14469314" timestamp2="14469314">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="798" _type="InsertStringCommand" date="Sat Mar 19 19:09:37 EDT 2022" starttimestamp="1647716908162" timestamp="14469315" timestamp2="14469315">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="800" _type="PauseCommand" date="Sat Mar 19 19:09:39 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14471685">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2370]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="799" _type="ShellCommand" date="Sat Mar 19 19:09:39 EDT 2022" starttimestamp="1647716908162" timestamp="14471685" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="802" _type="PauseCommand" date="Sat Mar 19 19:10:09 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="14501464">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[29779]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="801" _type="ShellCommand" date="Sat Mar 19 19:10:09 EDT 2022" starttimestamp="1647716908162" timestamp="14501464" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="804" _type="PauseCommand" date="Sat Mar 19 19:10:10 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14502753">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1289]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="803" _type="ShellCommand" date="Sat Mar 19 19:10:10 EDT 2022" starttimestamp="1647716908162" timestamp="14502753" type="ECLIPSE_MINIMIZED" />
  <Command __id="805" _type="ShellCommand" date="Sat Mar 19 19:10:10 EDT 2022" starttimestamp="1647716908162" timestamp="14502781" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="807" _type="PauseCommand" date="Sat Mar 19 19:11:43 EDT 2022" range="1m-2m" starttimestamp="1647716908162" timestamp="14595277">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[92496]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="806" _type="ShellCommand" date="Sat Mar 19 19:11:43 EDT 2022" starttimestamp="1647716908162" timestamp="14595277" type="ECLIPSE_MAXIMIZED" />
  <Command __id="808" _type="ShellCommand" date="Sat Mar 19 19:11:43 EDT 2022" starttimestamp="1647716908162" timestamp="14595413" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="810" _type="PauseCommand" date="Sat Mar 19 19:11:45 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14597091">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1678]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="809" _type="MoveCaretCommand" caretOffset="1136" date="Sat Mar 19 19:11:45 EDT 2022" docOffset="2012" starttimestamp="1647716908162" timestamp="14597091" />
  <Command __id="811" _type="MoveCaretCommand" caretOffset="1136" date="Sat Mar 19 19:11:45 EDT 2022" docOffset="2012" starttimestamp="1647716908162" timestamp="14597091" />
  <Command __id="813" _type="PauseCommand" date="Sat Mar 19 19:11:51 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="14603152">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6061]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="812" _type="MoveCaretCommand" caretOffset="1005" date="Sat Mar 19 19:11:51 EDT 2022" docOffset="1881" starttimestamp="1647716908162" timestamp="14603152" />
  <Command __id="814" _type="MoveCaretCommand" caretOffset="1005" date="Sat Mar 19 19:11:51 EDT 2022" docOffset="1881" starttimestamp="1647716908162" timestamp="14603152" />
  <Command __id="816" _type="PauseCommand" date="Sat Mar 19 19:11:52 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14604521">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1369]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="815" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sat Mar 19 19:11:52 EDT 2022" starttimestamp="1647716908162" timestamp="14604521" />
  <Command __id="817" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sat Mar 19 19:11:52 EDT 2022" starttimestamp="1647716908162" timestamp="14604521" />
  <Command __id="819" _type="PauseCommand" date="Sat Mar 19 19:11:54 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14606676">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2155]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="818" _type="MoveCaretCommand" caretOffset="1009" date="Sat Mar 19 19:11:54 EDT 2022" docOffset="1885" starttimestamp="1647716908162" timestamp="14606676" />
  <Command __id="820" _type="MoveCaretCommand" caretOffset="1009" date="Sat Mar 19 19:11:54 EDT 2022" docOffset="1885" starttimestamp="1647716908162" timestamp="14606676" />
  <DocumentChange __id="795" _type="Insert" date="Sat Mar 19 19:09:37 EDT 2022" docASTNodeCount="388" docActiveCodeLength="2420" docExpressionCount="276" docLength="2891" length="1" offset="1936" starttimestamp="1647716908162" timestamp="14469283">
    <text><![CDATA[/]]></text>
  </DocumentChange>
  <Command __id="822" _type="PauseCommand" date="Sat Mar 19 19:11:56 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14608277">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1601]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="821" _type="Insert" date="Sat Mar 19 19:11:56 EDT 2022" docASTNodeCount="388" docActiveCodeLength="2428" docExpressionCount="276" docLength="2899" length="8" offset="1885" repeat="2" starttimestamp="1647716908162" timestamp="14608277" timestamp2="14608929">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <Command __id="823" _type="InsertStringCommand" date="Sat Mar 19 19:11:56 EDT 2022" starttimestamp="1647716908162" timestamp="14608340" timestamp2="14608340">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="824" _type="InsertStringCommand" date="Sat Mar 19 19:11:56 EDT 2022" starttimestamp="1647716908162" timestamp="14608340" timestamp2="14608340">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="826" _type="InsertStringCommand" date="Sat Mar 19 19:11:57 EDT 2022" starttimestamp="1647716908162" timestamp="14608954" timestamp2="14608954">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="827" _type="InsertStringCommand" date="Sat Mar 19 19:11:57 EDT 2022" starttimestamp="1647716908162" timestamp="14608954" timestamp2="14608954">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="829" _type="PasteCommand" date="Sat Mar 19 19:11:58 EDT 2022" starttimestamp="1647716908162" timestamp="14609983" />
  <Command __id="831" _type="PauseCommand" date="Sat Mar 19 19:11:59 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14611555">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1572]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="830" _type="MoveCaretCommand" caretOffset="1056" date="Sat Mar 19 19:11:59 EDT 2022" docOffset="1932" starttimestamp="1647716908162" timestamp="14611555" />
  <Command __id="832" _type="MoveCaretCommand" caretOffset="1056" date="Sat Mar 19 19:11:59 EDT 2022" docOffset="1932" starttimestamp="1647716908162" timestamp="14611555" />
  <Command __id="833" _type="MoveCaretCommand" caretOffset="1056" date="Sat Mar 19 19:12:00 EDT 2022" docOffset="1932" starttimestamp="1647716908162" timestamp="14611839" />
  <Command __id="834" _type="MoveCaretCommand" caretOffset="1056" date="Sat Mar 19 19:12:00 EDT 2022" docOffset="1932" starttimestamp="1647716908162" timestamp="14611839" />
  <Command __id="835" _type="SelectTextCommand" caretOffset="1060" date="Sat Mar 19 19:12:00 EDT 2022" end="1060" start="1030" starttimestamp="1647716908162" timestamp="14611991" />
  <Command __id="836" _type="SelectTextCommand" caretOffset="1060" date="Sat Mar 19 19:12:00 EDT 2022" end="1060" start="1030" starttimestamp="1647716908162" timestamp="14611991" />
  <Command __id="837" _type="MoveCaretCommand" caretOffset="1056" date="Sat Mar 19 19:12:00 EDT 2022" docOffset="1932" starttimestamp="1647716908162" timestamp="14612826" />
  <Command __id="838" _type="MoveCaretCommand" caretOffset="1056" date="Sat Mar 19 19:12:00 EDT 2022" docOffset="1932" starttimestamp="1647716908162" timestamp="14612826" />
  <Command __id="839" _type="SelectTextCommand" caretOffset="1060" date="Sat Mar 19 19:12:01 EDT 2022" end="1060" start="1030" starttimestamp="1647716908162" timestamp="14612954" />
  <Command __id="840" _type="SelectTextCommand" caretOffset="1060" date="Sat Mar 19 19:12:01 EDT 2022" end="1060" start="1030" starttimestamp="1647716908162" timestamp="14612954" />
  <Command __id="841" _type="SelectTextCommand" caretOffset="1109" date="Sat Mar 19 19:12:01 EDT 2022" end="1109" start="1015" starttimestamp="1647716908162" timestamp="14613058" />
  <Command __id="842" _type="SelectTextCommand" caretOffset="1109" date="Sat Mar 19 19:12:01 EDT 2022" end="1109" start="1015" starttimestamp="1647716908162" timestamp="14613058" />
  <Command __id="843" _type="SelectTextCommand" caretOffset="1029" date="Sat Mar 19 19:12:01 EDT 2022" end="1029" start="1015" starttimestamp="1647716908162" timestamp="14613289" />
  <Command __id="844" _type="SelectTextCommand" caretOffset="1029" date="Sat Mar 19 19:12:01 EDT 2022" end="1029" start="1015" starttimestamp="1647716908162" timestamp="14613289" />
  <Command __id="845" _type="MoveCaretCommand" caretOffset="1056" date="Sat Mar 19 19:12:02 EDT 2022" docOffset="1932" starttimestamp="1647716908162" timestamp="14614025" />
  <Command __id="846" _type="MoveCaretCommand" caretOffset="1056" date="Sat Mar 19 19:12:02 EDT 2022" docOffset="1932" starttimestamp="1647716908162" timestamp="14614025" />
  <Command __id="847" _type="SelectTextCommand" caretOffset="1060" date="Sat Mar 19 19:12:02 EDT 2022" end="1060" start="1030" starttimestamp="1647716908162" timestamp="14614171" />
  <Command __id="848" _type="SelectTextCommand" caretOffset="1060" date="Sat Mar 19 19:12:02 EDT 2022" end="1060" start="1030" starttimestamp="1647716908162" timestamp="14614171" />
  <Command __id="849" _type="SelectTextCommand" caretOffset="1109" date="Sat Mar 19 19:12:02 EDT 2022" end="1109" start="1015" starttimestamp="1647716908162" timestamp="14614333" />
  <Command __id="850" _type="SelectTextCommand" caretOffset="1109" date="Sat Mar 19 19:12:02 EDT 2022" end="1109" start="1015" starttimestamp="1647716908162" timestamp="14614333" />
  <DocumentChange __id="828" _type="Replace" date="Sat Mar 19 19:11:58 EDT 2022" docASTNodeCount="394" docActiveCodeLength="2520" docExpressionCount="281" docLength="2991" endLine="65" insertionLength="94" int_docASTNodeCount="388" int_docActiveCodeLength="2426" int_docExpressionCount="276" int_docLength="2897" length="2" offset="1891" startLine="65" starttimestamp="1647716908162" timestamp="14609953">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		ObjectEditor.registerDefaultParameterValues(aDoubleNumberMethod, doubleNumberDefaultArgs);
]]></insertedText>
  </DocumentChange>
  <Command __id="852" _type="PauseCommand" date="Sat Mar 19 19:12:03 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14615751">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1418]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="853" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:12:03 EDT 2022" starttimestamp="1647716908162" timestamp="14615782" />
  <Command __id="854" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:12:03 EDT 2022" starttimestamp="1647716908162" timestamp="14615783" />
  <Command __id="856" _type="PauseCommand" date="Sat Mar 19 19:12:05 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14616966">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1183]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="855" _type="ShellCommand" date="Sat Mar 19 19:12:05 EDT 2022" starttimestamp="1647716908162" timestamp="14616966" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="858" _type="PauseCommand" date="Sat Mar 19 19:12:12 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="14624395">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7429]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="857" _type="ShellCommand" date="Sat Mar 19 19:12:12 EDT 2022" starttimestamp="1647716908162" timestamp="14624395" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="859" _type="MoveCaretCommand" caretOffset="1013" date="Sat Mar 19 19:12:13 EDT 2022" docOffset="1889" starttimestamp="1647716908162" timestamp="14625298" />
  <Command __id="860" _type="MoveCaretCommand" caretOffset="1013" date="Sat Mar 19 19:12:13 EDT 2022" docOffset="1889" starttimestamp="1647716908162" timestamp="14625298" />
  <Command __id="861" _type="MoveCaretCommand" caretOffset="1013" date="Sat Mar 19 19:12:13 EDT 2022" docOffset="1889" starttimestamp="1647716908162" timestamp="14625605" />
  <Command __id="862" _type="MoveCaretCommand" caretOffset="1013" date="Sat Mar 19 19:12:13 EDT 2022" docOffset="1889" starttimestamp="1647716908162" timestamp="14625605" />
  <DocumentChange __id="851" _type="Delete" date="Sat Mar 19 19:12:03 EDT 2022" docASTNodeCount="388" docActiveCodeLength="2426" docExpressionCount="276" docLength="2897" endLine="66" length="94" offset="1891" startLine="65" starttimestamp="1647716908162" timestamp="14615751">
    <text><![CDATA[		ObjectEditor.registerDefaultParameterValues(aDoubleNumberMethod, doubleNumberDefaultArgs);
]]></text>
  </DocumentChange>
  <Command __id="864" _type="PauseCommand" date="Sat Mar 19 19:12:15 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14627502">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1896]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="865" _type="PasteCommand" date="Sat Mar 19 19:12:15 EDT 2022" starttimestamp="1647716908162" timestamp="14627556" />
  <Command __id="867" _type="PauseCommand" date="Sat Mar 19 19:12:23 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="14635246">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[7690]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="866" _type="SelectTextCommand" caretOffset="1045" date="Sat Mar 19 19:12:23 EDT 2022" end="1045" start="1033" starttimestamp="1647716908162" timestamp="14635246" />
  <Command __id="868" _type="SelectTextCommand" caretOffset="1045" date="Sat Mar 19 19:12:23 EDT 2022" end="1045" start="1033" starttimestamp="1647716908162" timestamp="14635247" />
  <DocumentChange __id="863" _type="Replace" date="Sat Mar 19 19:12:15 EDT 2022" docASTNodeCount="460" docActiveCodeLength="3008" docExpressionCount="318" docLength="3513" endLine="64" insertionLength="618" int_docASTNodeCount="388" int_docActiveCodeLength="2424" int_docExpressionCount="276" int_docLength="2895" length="2" offset="1887" startLine="64" starttimestamp="1647716908162" timestamp="14627501">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[
		try {
			Class[] doubleNumberArgTypes = {Integer.TYPE};
			Object[] doubleNumberDefaultArgs = {3};
			String[] doubleNumberArgNames = {"numberToBeDoubled"};

			Method aDoubleNumberMethod = AFunctionTester.class.getMethod("doubleNumber", doubleNumberArgTypes);
			ObjectEditor.registerDefaultParameterValues(aDoubleNumberMethod, doubleNumberDefaultArgs);
			ObjectEditor.registerParameterNames(aDoubleNumberMethod, doubleNumberArgNames);

		} catch (NoSuchMethodException e) {
			e.printStackTrace();
		} catch (SecurityException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}]]></insertedText>
  </DocumentChange>
  <Command __id="870" _type="PauseCommand" date="Sat Mar 19 19:12:24 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14636834">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1587]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="871" _type="InsertStringCommand" date="Sat Mar 19 19:12:25 EDT 2022" starttimestamp="1647716908162" timestamp="14636872" timestamp2="14636872">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="872" _type="InsertStringCommand" date="Sat Mar 19 19:12:25 EDT 2022" starttimestamp="1647716908162" timestamp="14636872" timestamp2="14636872">
    <data><![CDATA[i]]></data>
  </Command>
  <DocumentChange __id="869" _type="Replace" date="Sat Mar 19 19:12:24 EDT 2022" docASTNodeCount="460" docActiveCodeLength="2997" docExpressionCount="318" docLength="3502" endLine="66" insertionLength="1" int_docASTNodeCount="460" int_docActiveCodeLength="2996" int_docExpressionCount="318" int_docLength="3501" length="12" offset="1909" startLine="66" starttimestamp="1647716908162" timestamp="14636834">
    <deletedText><![CDATA[doubleNumber]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <Command __id="874" _type="PauseCommand" date="Sat Mar 19 19:12:27 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14638844">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1972]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="875" _type="InsertStringCommand" date="Sat Mar 19 19:12:27 EDT 2022" starttimestamp="1647716908162" timestamp="14638864" timestamp2="14638864">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="876" _type="InsertStringCommand" date="Sat Mar 19 19:12:27 EDT 2022" starttimestamp="1647716908162" timestamp="14638864" timestamp2="14638864">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="879" _type="PauseCommand" date="Sat Mar 19 19:12:28 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14639880">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1016]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="878" _type="InsertStringCommand" date="Sat Mar 19 19:12:28 EDT 2022" starttimestamp="1647716908162" timestamp="14639880" timestamp2="14639880">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="880" _type="InsertStringCommand" date="Sat Mar 19 19:12:28 EDT 2022" starttimestamp="1647716908162" timestamp="14639880" timestamp2="14639880">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="883" _type="PauseCommand" date="Sat Mar 19 19:12:29 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14640898">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1018]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="882" _type="InsertStringCommand" date="Sat Mar 19 19:12:29 EDT 2022" starttimestamp="1647716908162" timestamp="14640898" timestamp2="14640898">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="884" _type="InsertStringCommand" date="Sat Mar 19 19:12:29 EDT 2022" starttimestamp="1647716908162" timestamp="14640899" timestamp2="14640899">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="886" _type="InsertStringCommand" date="Sat Mar 19 19:12:29 EDT 2022" starttimestamp="1647716908162" timestamp="14640939" timestamp2="14640939">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="887" _type="InsertStringCommand" date="Sat Mar 19 19:12:29 EDT 2022" starttimestamp="1647716908162" timestamp="14640939" timestamp2="14640939">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="889" _type="InsertStringCommand" date="Sat Mar 19 19:12:29 EDT 2022" starttimestamp="1647716908162" timestamp="14640970" timestamp2="14640970">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="890" _type="InsertStringCommand" date="Sat Mar 19 19:12:29 EDT 2022" starttimestamp="1647716908162" timestamp="14640970" timestamp2="14640970">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="892" _type="InsertStringCommand" date="Sat Mar 19 19:12:29 EDT 2022" starttimestamp="1647716908162" timestamp="14641013" timestamp2="14641013">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="893" _type="InsertStringCommand" date="Sat Mar 19 19:12:29 EDT 2022" starttimestamp="1647716908162" timestamp="14641013" timestamp2="14641013">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="895" _type="InsertStringCommand" date="Sat Mar 19 19:12:29 EDT 2022" starttimestamp="1647716908162" timestamp="14641047" timestamp2="14641047">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="896" _type="InsertStringCommand" date="Sat Mar 19 19:12:29 EDT 2022" starttimestamp="1647716908162" timestamp="14641047" timestamp2="14641047">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="898" _type="InsertStringCommand" date="Sat Mar 19 19:12:29 EDT 2022" starttimestamp="1647716908162" timestamp="14641069" timestamp2="14641069">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="899" _type="InsertStringCommand" date="Sat Mar 19 19:12:29 EDT 2022" starttimestamp="1647716908162" timestamp="14641069" timestamp2="14641069">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="901" _type="PauseCommand" date="Sat Mar 19 19:12:32 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14644675">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3606]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="900" _type="MoveCaretCommand" caretOffset="1126" date="Sat Mar 19 19:12:32 EDT 2022" docOffset="2002" starttimestamp="1647716908162" timestamp="14644675" />
  <Command __id="902" _type="MoveCaretCommand" caretOffset="1126" date="Sat Mar 19 19:12:32 EDT 2022" docOffset="2002" starttimestamp="1647716908162" timestamp="14644677" />
  <Command __id="904" _type="PauseCommand" date="Sat Mar 19 19:12:34 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14646703">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2026]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="903" _type="SelectTextCommand" caretOffset="1094" date="Sat Mar 19 19:12:34 EDT 2022" end="1094" start="1082" starttimestamp="1647716908162" timestamp="14646703" />
  <Command __id="905" _type="SelectTextCommand" caretOffset="1094" date="Sat Mar 19 19:12:34 EDT 2022" end="1094" start="1082" starttimestamp="1647716908162" timestamp="14646703" />
  <Command __id="907" _type="PauseCommand" date="Sat Mar 19 19:12:39 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="14651764">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[5061]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="906" _type="MoveCaretCommand" caretOffset="1110" date="Sat Mar 19 19:12:39 EDT 2022" docOffset="1986" starttimestamp="1647716908162" timestamp="14651764" />
  <Command __id="908" _type="MoveCaretCommand" caretOffset="1110" date="Sat Mar 19 19:12:39 EDT 2022" docOffset="1986" starttimestamp="1647716908162" timestamp="14651764" />
  <DocumentChange __id="873" _type="Insert" date="Sat Mar 19 19:12:27 EDT 2022" docASTNodeCount="460" docActiveCodeLength="3005" docExpressionCount="318" docLength="3510" length="8" offset="1910" repeat="8" starttimestamp="1647716908162" timestamp="14638844" timestamp2="14641050">
    <text><![CDATA[nitScene]]></text>
  </DocumentChange>
  <Command __id="910" _type="PauseCommand" date="Sat Mar 19 19:12:42 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14653918">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2154]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="911" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:12:42 EDT 2022" starttimestamp="1647716908162" timestamp="14653950" />
  <Command __id="912" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:12:42 EDT 2022" starttimestamp="1647716908162" timestamp="14653950" />
  <DocumentChange __id="909" _type="Delete" date="Sat Mar 19 19:12:42 EDT 2022" docASTNodeCount="459" docActiveCodeLength="3004" docExpressionCount="317" docLength="3509" endLine="67" length="1" offset="1985" startLine="67" starttimestamp="1647716908162" timestamp="14653918">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <Command __id="914" _type="PauseCommand" date="Sat Mar 19 19:12:44 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14655927">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1977]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="915" _type="InsertStringCommand" date="Sat Mar 19 19:12:44 EDT 2022" starttimestamp="1647716908162" timestamp="14655956" timestamp2="14655956">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="916" _type="InsertStringCommand" date="Sat Mar 19 19:12:44 EDT 2022" starttimestamp="1647716908162" timestamp="14655956" timestamp2="14655956">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="918" _type="PauseCommand" date="Sat Mar 19 19:12:45 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14656992">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1036]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="917" _type="MoveCaretCommand" caretOffset="1082" date="Sat Mar 19 19:12:45 EDT 2022" docOffset="1958" starttimestamp="1647716908162" timestamp="14656992" />
  <Command __id="919" _type="MoveCaretCommand" caretOffset="1082" date="Sat Mar 19 19:12:45 EDT 2022" docOffset="1958" starttimestamp="1647716908162" timestamp="14656993" />
  <Command __id="921" _type="PauseCommand" date="Sat Mar 19 19:12:49 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14660844">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3851]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="920" _type="MoveCaretCommand" caretOffset="1068" date="Sat Mar 19 19:12:49 EDT 2022" docOffset="1944" starttimestamp="1647716908162" timestamp="14660844" />
  <Command __id="922" _type="MoveCaretCommand" caretOffset="1068" date="Sat Mar 19 19:12:49 EDT 2022" docOffset="1944" starttimestamp="1647716908162" timestamp="14660844" />
  <DocumentChange __id="913" _type="Insert" date="Sat Mar 19 19:12:44 EDT 2022" docASTNodeCount="460" docActiveCodeLength="3005" docExpressionCount="318" docLength="3510" length="1" offset="1985" starttimestamp="1647716908162" timestamp="14655927">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <Command __id="924" _type="PauseCommand" date="Sat Mar 19 19:12:50 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14662544">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1700]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="925" _type="InsertStringCommand" date="Sat Mar 19 19:12:50 EDT 2022" starttimestamp="1647716908162" timestamp="14662601" timestamp2="14662601">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="926" _type="InsertStringCommand" date="Sat Mar 19 19:12:50 EDT 2022" starttimestamp="1647716908162" timestamp="14662601" timestamp2="14662601">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="923" _type="Insert" date="Sat Mar 19 19:12:50 EDT 2022" docASTNodeCount="460" docActiveCodeLength="3010" docExpressionCount="318" docLength="3515" length="5" offset="1944" starttimestamp="1647716908162" timestamp="14662544">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <Command __id="928" _type="PauseCommand" date="Sat Mar 19 19:12:52 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14664323">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1722]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="929" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:12:52 EDT 2022" starttimestamp="1647716908162" timestamp="14664339" />
  <Command __id="930" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:12:52 EDT 2022" starttimestamp="1647716908162" timestamp="14664339" />
  <Command __id="932" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:12:52 EDT 2022" starttimestamp="1647716908162" timestamp="14664726" />
  <Command __id="933" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:12:52 EDT 2022" starttimestamp="1647716908162" timestamp="14664726" />
  <Command __id="935" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:12:53 EDT 2022" starttimestamp="1647716908162" timestamp="14665112" />
  <Command __id="936" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:12:53 EDT 2022" starttimestamp="1647716908162" timestamp="14665112" />
  <DocumentChange __id="927" _type="Delete" date="Sat Mar 19 19:12:52 EDT 2022" docASTNodeCount="460" docActiveCodeLength="3007" docExpressionCount="318" docLength="3512" endLine="67" length="3" offset="1946" repeat="3" startLine="67" starttimestamp="1647716908162" timestamp="14664323" timestamp2="14665101">
    <text><![CDATA[			]]></text>
  </DocumentChange>
  <Command __id="938" _type="PauseCommand" date="Sat Mar 19 19:12:56 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14668425">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3313]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="939" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:12:56 EDT 2022" starttimestamp="1647716908162" timestamp="14668483" />
  <Command __id="940" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:12:56 EDT 2022" starttimestamp="1647716908162" timestamp="14668484" />
  <Command __id="942" _type="PauseCommand" date="Sat Mar 19 19:13:00 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14672423">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3939]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <DocumentChange __id="937" _type="Delete" date="Sat Mar 19 19:12:56 EDT 2022" docASTNodeCount="460" docActiveCodeLength="3005" docExpressionCount="318" docLength="3510" endLine="67" length="2" offset="1944" startLine="66" starttimestamp="1647716908162" timestamp="14668425">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="941" _type="MoveCaretCommand" caretOffset="1066" date="Sat Mar 19 19:13:00 EDT 2022" docOffset="1942" starttimestamp="1647716908162" timestamp="14672423" />
  <Command __id="943" _type="MoveCaretCommand" caretOffset="1066" date="Sat Mar 19 19:13:00 EDT 2022" docOffset="1942" starttimestamp="1647716908162" timestamp="14672423" />
  <Command __id="945" _type="InsertStringCommand" date="Sat Mar 19 19:13:01 EDT 2022" starttimestamp="1647716908162" timestamp="14673131" timestamp2="14673131">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="946" _type="InsertStringCommand" date="Sat Mar 19 19:13:01 EDT 2022" starttimestamp="1647716908162" timestamp="14673132" timestamp2="14673132">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="949" _type="PauseCommand" date="Sat Mar 19 19:13:03 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14675004">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1872]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="948" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675004" timestamp2="14675004">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="950" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675004" timestamp2="14675004">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="952" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675054" timestamp2="14675054">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="953" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675054" timestamp2="14675054">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="955" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675095" timestamp2="14675095">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="956" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675095" timestamp2="14675095">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="958" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675133" timestamp2="14675133">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="959" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675133" timestamp2="14675133">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="961" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675165" timestamp2="14675165">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="962" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675165" timestamp2="14675165">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="964" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675203" timestamp2="14675203">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="965" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675203" timestamp2="14675203">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="967" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675243" timestamp2="14675243">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="968" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675243" timestamp2="14675243">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="970" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675293" timestamp2="14675293">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="971" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675293" timestamp2="14675293">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="973" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675341" timestamp2="14675341">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="974" _type="InsertStringCommand" date="Sat Mar 19 19:13:03 EDT 2022" starttimestamp="1647716908162" timestamp="14675341" timestamp2="14675341">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="975" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sat Mar 19 19:13:03 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="14675404" />
  <DocumentChange __id="944" _type="Insert" date="Sat Mar 19 19:13:01 EDT 2022" docASTNodeCount="342" docActiveCodeLength="3015" docExpressionCount="240" docLength="3520" length="10" offset="1942" repeat="10" starttimestamp="1647716908162" timestamp="14673113" timestamp2="14675304">
    <text><![CDATA[, Integer.]]></text>
  </DocumentChange>
  <Command __id="977" _type="PauseCommand" date="Sat Mar 19 19:13:05 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14677692">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2288]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="976" _type="Insert" date="Sat Mar 19 19:13:05 EDT 2022" docASTNodeCount="463" docActiveCodeLength="3016" docExpressionCount="321" docLength="3521" length="1" offset="1952" starttimestamp="1647716908162" timestamp="14677692">
    <text><![CDATA[T]]></text>
  </DocumentChange>
  <Command __id="979" _type="PauseCommand" date="Sat Mar 19 19:13:07 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14679707">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2015]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="983" _type="PauseCommand" date="Sat Mar 19 19:13:10 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14682351">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2644]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="982" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sat Mar 19 19:13:10 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="14682351" />
  <Command __id="984" _type="MoveCaretCommand" caretOffset="1011" date="Sat Mar 19 19:13:10 EDT 2022" docOffset="1887" starttimestamp="1647716908162" timestamp="14682352" />
  <Command __id="985" _type="MoveCaretCommand" caretOffset="1011" date="Sat Mar 19 19:13:10 EDT 2022" docOffset="1887" starttimestamp="1647716908162" timestamp="14682352" />
  <Command __id="987" _type="PauseCommand" date="Sat Mar 19 19:13:14 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14686337">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3985]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="986" _type="SelectTextCommand" caretOffset="1108" date="Sat Mar 19 19:13:14 EDT 2022" end="1108" start="1096" starttimestamp="1647716908162" timestamp="14686337" />
  <Command __id="988" _type="SelectTextCommand" caretOffset="1108" date="Sat Mar 19 19:13:14 EDT 2022" end="1108" start="1096" starttimestamp="1647716908162" timestamp="14686338" />
  <DocumentChange __id="978" _type="Insert" date="Sat Mar 19 19:13:07 EDT 2022" docASTNodeCount="463" docActiveCodeLength="3019" docExpressionCount="321" docLength="3524" length="3" offset="1953" repeat="3" starttimestamp="1647716908162" timestamp="14679707" timestamp2="14680759">
    <text><![CDATA[YPE]]></text>
  </DocumentChange>
  <Command __id="990" _type="PauseCommand" date="Sat Mar 19 19:13:16 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14688698">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2360]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="989" _type="Replace" date="Sat Mar 19 19:13:16 EDT 2022" docASTNodeCount="463" docActiveCodeLength="3008" docExpressionCount="321" docLength="3513" endLine="67" insertionLength="1" int_docASTNodeCount="463" int_docActiveCodeLength="3007" int_docExpressionCount="321" int_docLength="3512" length="12" offset="1972" startLine="67" starttimestamp="1647716908162" timestamp="14688698">
    <deletedText><![CDATA[doubleNumber]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <Command __id="991" _type="InsertStringCommand" date="Sat Mar 19 19:13:16 EDT 2022" starttimestamp="1647716908162" timestamp="14688742" timestamp2="14688742">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="992" _type="InsertStringCommand" date="Sat Mar 19 19:13:16 EDT 2022" starttimestamp="1647716908162" timestamp="14688742" timestamp2="14688742">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="994" _type="InsertStringCommand" date="Sat Mar 19 19:13:16 EDT 2022" starttimestamp="1647716908162" timestamp="14688773" timestamp2="14688773">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="995" _type="InsertStringCommand" date="Sat Mar 19 19:13:16 EDT 2022" starttimestamp="1647716908162" timestamp="14688773" timestamp2="14688773">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="997" _type="InsertStringCommand" date="Sat Mar 19 19:13:16 EDT 2022" starttimestamp="1647716908162" timestamp="14688801" timestamp2="14688801">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="998" _type="InsertStringCommand" date="Sat Mar 19 19:13:16 EDT 2022" starttimestamp="1647716908162" timestamp="14688802" timestamp2="14688802">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1000" _type="InsertStringCommand" date="Sat Mar 19 19:13:16 EDT 2022" starttimestamp="1647716908162" timestamp="14688834" timestamp2="14688834">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1001" _type="InsertStringCommand" date="Sat Mar 19 19:13:16 EDT 2022" starttimestamp="1647716908162" timestamp="14688834" timestamp2="14688834">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1003" _type="InsertStringCommand" date="Sat Mar 19 19:13:17 EDT 2022" starttimestamp="1647716908162" timestamp="14688863" timestamp2="14688863">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1004" _type="InsertStringCommand" date="Sat Mar 19 19:13:17 EDT 2022" starttimestamp="1647716908162" timestamp="14688863" timestamp2="14688863">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1006" _type="InsertStringCommand" date="Sat Mar 19 19:13:17 EDT 2022" starttimestamp="1647716908162" timestamp="14688885" timestamp2="14688885">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1007" _type="InsertStringCommand" date="Sat Mar 19 19:13:17 EDT 2022" starttimestamp="1647716908162" timestamp="14688885" timestamp2="14688885">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1009" _type="InsertStringCommand" date="Sat Mar 19 19:13:17 EDT 2022" starttimestamp="1647716908162" timestamp="14688912" timestamp2="14688912">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1010" _type="InsertStringCommand" date="Sat Mar 19 19:13:17 EDT 2022" starttimestamp="1647716908162" timestamp="14688912" timestamp2="14688912">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1012" _type="InsertStringCommand" date="Sat Mar 19 19:13:17 EDT 2022" starttimestamp="1647716908162" timestamp="14688935" timestamp2="14688935">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1013" _type="InsertStringCommand" date="Sat Mar 19 19:13:17 EDT 2022" starttimestamp="1647716908162" timestamp="14688935" timestamp2="14688935">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1015" _type="InsertStringCommand" date="Sat Mar 19 19:13:17 EDT 2022" starttimestamp="1647716908162" timestamp="14688970" timestamp2="14688970">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1016" _type="InsertStringCommand" date="Sat Mar 19 19:13:17 EDT 2022" starttimestamp="1647716908162" timestamp="14688970" timestamp2="14688970">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1018" _type="PauseCommand" date="Sat Mar 19 19:13:19 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14691671">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2701]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1017" _type="SelectTextCommand" caretOffset="1149" date="Sat Mar 19 19:13:19 EDT 2022" end="1149" start="1137" starttimestamp="1647716908162" timestamp="14691671" />
  <Command __id="1019" _type="SelectTextCommand" caretOffset="1149" date="Sat Mar 19 19:13:19 EDT 2022" end="1149" start="1137" starttimestamp="1647716908162" timestamp="14691672" />
  <Command __id="1021" _type="PauseCommand" date="Sat Mar 19 19:13:21 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14693375">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1703]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1020" _type="MoveCaretCommand" caretOffset="1121" date="Sat Mar 19 19:13:21 EDT 2022" docOffset="1997" starttimestamp="1647716908162" timestamp="14693375" />
  <Command __id="1022" _type="MoveCaretCommand" caretOffset="1121" date="Sat Mar 19 19:13:21 EDT 2022" docOffset="1997" starttimestamp="1647716908162" timestamp="14693375" />
  <DocumentChange __id="993" _type="Insert" date="Sat Mar 19 19:13:16 EDT 2022" docASTNodeCount="463" docActiveCodeLength="3016" docExpressionCount="321" docLength="3521" length="8" offset="1973" repeat="8" starttimestamp="1647716908162" timestamp="14688747" timestamp2="14688946">
    <text><![CDATA[nitScene]]></text>
  </DocumentChange>
  <Command __id="1024" _type="PauseCommand" date="Sat Mar 19 19:13:29 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="14701642">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8267]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1025" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:13:29 EDT 2022" starttimestamp="1647716908162" timestamp="14701673" />
  <Command __id="1026" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:13:29 EDT 2022" starttimestamp="1647716908162" timestamp="14701673" />
  <DocumentChange __id="1023" _type="Delete" date="Sat Mar 19 19:13:29 EDT 2022" docASTNodeCount="462" docActiveCodeLength="3015" docExpressionCount="320" docLength="3520" endLine="67" length="1" offset="1996" startLine="67" starttimestamp="1647716908162" timestamp="14701642">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <Command __id="1028" _type="PauseCommand" date="Sat Mar 19 19:13:31 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14703651">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1978]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1029" _type="InsertStringCommand" date="Sat Mar 19 19:13:31 EDT 2022" starttimestamp="1647716908162" timestamp="14703684" timestamp2="14703684">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="1030" _type="InsertStringCommand" date="Sat Mar 19 19:13:31 EDT 2022" starttimestamp="1647716908162" timestamp="14703685" timestamp2="14703685">
    <data><![CDATA[1]]></data>
  </Command>
  <DocumentChange __id="1027" _type="Insert" date="Sat Mar 19 19:13:31 EDT 2022" docASTNodeCount="463" docActiveCodeLength="3016" docExpressionCount="321" docLength="3521" length="1" offset="1996" starttimestamp="1647716908162" timestamp="14703651">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <Command __id="1032" _type="PauseCommand" date="Sat Mar 19 19:13:33 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14704940">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1255]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1033" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:13:33 EDT 2022" starttimestamp="1647716908162" timestamp="14704967" />
  <Command __id="1034" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:13:33 EDT 2022" starttimestamp="1647716908162" timestamp="14704968" />
  <DocumentChange __id="1031" _type="Delete" date="Sat Mar 19 19:13:33 EDT 2022" docASTNodeCount="462" docActiveCodeLength="3015" docExpressionCount="320" docLength="3520" endLine="67" length="1" offset="1996" startLine="67" starttimestamp="1647716908162" timestamp="14704940">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <Command __id="1036" _type="PauseCommand" date="Sat Mar 19 19:13:37 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14708964">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3996]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1037" _type="InsertStringCommand" date="Sat Mar 19 19:13:37 EDT 2022" starttimestamp="1647716908162" timestamp="14708994" timestamp2="14708994">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="1038" _type="InsertStringCommand" date="Sat Mar 19 19:13:37 EDT 2022" starttimestamp="1647716908162" timestamp="14708994" timestamp2="14708994">
    <data><![CDATA[1]]></data>
  </Command>
  <DocumentChange __id="1035" _type="Insert" date="Sat Mar 19 19:13:37 EDT 2022" docASTNodeCount="463" docActiveCodeLength="3016" docExpressionCount="321" docLength="3521" length="1" offset="1996" starttimestamp="1647716908162" timestamp="14708964">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <Command __id="1040" _type="PauseCommand" date="Sat Mar 19 19:13:39 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14710982">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1988]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1041" _type="InsertStringCommand" date="Sat Mar 19 19:13:39 EDT 2022" starttimestamp="1647716908162" timestamp="14711007" timestamp2="14711007">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1042" _type="InsertStringCommand" date="Sat Mar 19 19:13:39 EDT 2022" starttimestamp="1647716908162" timestamp="14711007" timestamp2="14711007">
    <data><![CDATA[,]]></data>
  </Command>
  <DocumentChange __id="1039" _type="Insert" date="Sat Mar 19 19:13:39 EDT 2022" docASTNodeCount="463" docActiveCodeLength="3017" docExpressionCount="321" docLength="3522" length="1" offset="1997" starttimestamp="1647716908162" timestamp="14710982">
    <text><![CDATA[,]]></text>
  </DocumentChange>
  <Command __id="1044" _type="PauseCommand" date="Sat Mar 19 19:13:41 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14713005">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1998]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1045" _type="InsertStringCommand" date="Sat Mar 19 19:13:41 EDT 2022" starttimestamp="1647716908162" timestamp="14713031" timestamp2="14713031">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1046" _type="InsertStringCommand" date="Sat Mar 19 19:13:41 EDT 2022" starttimestamp="1647716908162" timestamp="14713031" timestamp2="14713031">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1048" _type="InsertStringCommand" date="Sat Mar 19 19:13:41 EDT 2022" starttimestamp="1647716908162" timestamp="14713066" timestamp2="14713066">
    <data><![CDATA[4]]></data>
  </Command>
  <Command __id="1049" _type="InsertStringCommand" date="Sat Mar 19 19:13:41 EDT 2022" starttimestamp="1647716908162" timestamp="14713066" timestamp2="14713066">
    <data><![CDATA[4]]></data>
  </Command>
  <Command __id="1051" _type="PauseCommand" date="Sat Mar 19 19:13:44 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14715856">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2790]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1050" _type="MoveCaretCommand" caretOffset="1120" date="Sat Mar 19 19:13:44 EDT 2022" docOffset="1996" starttimestamp="1647716908162" timestamp="14715856" />
  <Command __id="1052" _type="MoveCaretCommand" caretOffset="1120" date="Sat Mar 19 19:13:44 EDT 2022" docOffset="1996" starttimestamp="1647716908162" timestamp="14715856" />
  <Command __id="1054" _type="PauseCommand" date="Sat Mar 19 19:13:47 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14719054">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3198]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1053" _type="SelectTextCommand" caretOffset="1152" date="Sat Mar 19 19:13:47 EDT 2022" end="1152" start="1140" starttimestamp="1647716908162" timestamp="14719054" />
  <Command __id="1055" _type="SelectTextCommand" caretOffset="1152" date="Sat Mar 19 19:13:47 EDT 2022" end="1152" start="1140" starttimestamp="1647716908162" timestamp="14719055" />
  <DocumentChange __id="1043" _type="Insert" date="Sat Mar 19 19:13:41 EDT 2022" docASTNodeCount="464" docActiveCodeLength="3019" docExpressionCount="322" docLength="3524" length="2" offset="1998" repeat="2" starttimestamp="1647716908162" timestamp="14713005" timestamp2="14713037">
    <text><![CDATA[ 4]]></text>
  </DocumentChange>
  <Command __id="1057" _type="PauseCommand" date="Sat Mar 19 19:13:48 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14720824">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1769]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="1056" _type="Replace" date="Sat Mar 19 19:13:48 EDT 2022" docASTNodeCount="464" docActiveCodeLength="3008" docExpressionCount="322" docLength="3513" endLine="68" insertionLength="1" int_docASTNodeCount="464" int_docActiveCodeLength="3007" int_docExpressionCount="322" int_docLength="3512" length="12" offset="2016" startLine="68" starttimestamp="1647716908162" timestamp="14720824">
    <deletedText><![CDATA[doubleNumber]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <Command __id="1058" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14720876" timestamp2="14720876">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1059" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14720876" timestamp2="14720876">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1061" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14720956" timestamp2="14720956">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1062" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14720956" timestamp2="14720956">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1064" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14720981" timestamp2="14720981">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1065" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14720981" timestamp2="14720981">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1067" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14721010" timestamp2="14721010">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1068" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14721010" timestamp2="14721010">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1070" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14721036" timestamp2="14721036">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1071" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14721036" timestamp2="14721036">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1073" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14721079" timestamp2="14721079">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1074" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14721079" timestamp2="14721079">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1076" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14721111" timestamp2="14721111">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1077" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14721111" timestamp2="14721111">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1079" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14721142" timestamp2="14721142">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1080" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14721142" timestamp2="14721142">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1082" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14721176" timestamp2="14721176">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1083" _type="InsertStringCommand" date="Sat Mar 19 19:13:49 EDT 2022" starttimestamp="1647716908162" timestamp="14721176" timestamp2="14721176">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1085" _type="PauseCommand" date="Sat Mar 19 19:13:51 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14723389">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2213]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1084" _type="MoveCaretCommand" caretOffset="1162" date="Sat Mar 19 19:13:51 EDT 2022" docOffset="2038" starttimestamp="1647716908162" timestamp="14723389" />
  <Command __id="1086" _type="MoveCaretCommand" caretOffset="1162" date="Sat Mar 19 19:13:51 EDT 2022" docOffset="2038" starttimestamp="1647716908162" timestamp="14723389" />
  <Command __id="1088" _type="PauseCommand" date="Sat Mar 19 19:13:52 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14724832">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1443]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1087" _type="SelectTextCommand" caretOffset="1169" date="Sat Mar 19 19:13:52 EDT 2022" end="1169" start="1162" starttimestamp="1647716908162" timestamp="14724832" />
  <Command __id="1089" _type="SelectTextCommand" caretOffset="1169" date="Sat Mar 19 19:13:52 EDT 2022" end="1169" start="1162" starttimestamp="1647716908162" timestamp="14724832" />
  <Command __id="1090" _type="MoveCaretCommand" caretOffset="1169" date="Sat Mar 19 19:13:53 EDT 2022" docOffset="2045" starttimestamp="1647716908162" timestamp="14725234" />
  <Command __id="1091" _type="MoveCaretCommand" caretOffset="1169" date="Sat Mar 19 19:13:53 EDT 2022" docOffset="2045" starttimestamp="1647716908162" timestamp="14725234" />
  <Command __id="1093" _type="PauseCommand" date="Sat Mar 19 19:13:58 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="14730313">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5079]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1092" _type="MoveCaretCommand" caretOffset="1180" date="Sat Mar 19 19:13:58 EDT 2022" docOffset="2056" starttimestamp="1647716908162" timestamp="14730313" />
  <Command __id="1094" _type="MoveCaretCommand" caretOffset="1180" date="Sat Mar 19 19:13:58 EDT 2022" docOffset="2056" starttimestamp="1647716908162" timestamp="14730313" />
  <Command __id="1096" _type="PauseCommand" date="Sat Mar 19 19:14:01 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14732996">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2683]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1095" _type="SelectTextCommand" caretOffset="1179" date="Sat Mar 19 19:14:01 EDT 2022" end="1179" start="1162" starttimestamp="1647716908162" timestamp="14732996" />
  <Command __id="1097" _type="SelectTextCommand" caretOffset="1179" date="Sat Mar 19 19:14:01 EDT 2022" end="1179" start="1162" starttimestamp="1647716908162" timestamp="14732997" />
  <DocumentChange __id="1060" _type="Insert" date="Sat Mar 19 19:13:49 EDT 2022" docASTNodeCount="464" docActiveCodeLength="3016" docExpressionCount="322" docLength="3521" length="8" offset="2017" repeat="8" starttimestamp="1647716908162" timestamp="14720929" timestamp2="14721150">
    <text><![CDATA[nitScene]]></text>
  </DocumentChange>
  <Command __id="1099" _type="PauseCommand" date="Sat Mar 19 19:14:03 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14735462">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2465]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="1098" _type="Replace" date="Sat Mar 19 19:14:03 EDT 2022" docASTNodeCount="464" docActiveCodeLength="3000" docExpressionCount="322" docLength="3505" endLine="68" insertionLength="1" int_docASTNodeCount="464" int_docActiveCodeLength="2999" int_docExpressionCount="322" int_docLength="3504" length="17" offset="2038" startLine="68" starttimestamp="1647716908162" timestamp="14735462">
    <deletedText><![CDATA[numberToBeDoubled]]></deletedText>
    <insertedText><![CDATA[n]]></insertedText>
  </DocumentChange>
  <Command __id="1100" _type="InsertStringCommand" date="Sat Mar 19 19:14:03 EDT 2022" starttimestamp="1647716908162" timestamp="14735491" timestamp2="14735491">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1101" _type="InsertStringCommand" date="Sat Mar 19 19:14:03 EDT 2022" starttimestamp="1647716908162" timestamp="14735491" timestamp2="14735491">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1103" _type="InsertStringCommand" date="Sat Mar 19 19:14:04 EDT 2022" starttimestamp="1647716908162" timestamp="14736484" timestamp2="14736484">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1104" _type="InsertStringCommand" date="Sat Mar 19 19:14:04 EDT 2022" starttimestamp="1647716908162" timestamp="14736486" timestamp2="14736486">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1106" _type="InsertStringCommand" date="Sat Mar 19 19:14:04 EDT 2022" starttimestamp="1647716908162" timestamp="14736525" timestamp2="14736525">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1107" _type="InsertStringCommand" date="Sat Mar 19 19:14:04 EDT 2022" starttimestamp="1647716908162" timestamp="14736525" timestamp2="14736525">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1109" _type="InsertStringCommand" date="Sat Mar 19 19:14:04 EDT 2022" starttimestamp="1647716908162" timestamp="14736560" timestamp2="14736560">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1110" _type="InsertStringCommand" date="Sat Mar 19 19:14:04 EDT 2022" starttimestamp="1647716908162" timestamp="14736560" timestamp2="14736560">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1112" _type="InsertStringCommand" date="Sat Mar 19 19:14:04 EDT 2022" starttimestamp="1647716908162" timestamp="14736592" timestamp2="14736592">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1113" _type="InsertStringCommand" date="Sat Mar 19 19:14:04 EDT 2022" starttimestamp="1647716908162" timestamp="14736592" timestamp2="14736592">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1115" _type="InsertStringCommand" date="Sat Mar 19 19:14:04 EDT 2022" starttimestamp="1647716908162" timestamp="14736622" timestamp2="14736622">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1116" _type="InsertStringCommand" date="Sat Mar 19 19:14:04 EDT 2022" starttimestamp="1647716908162" timestamp="14736622" timestamp2="14736622">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1118" _type="InsertStringCommand" date="Sat Mar 19 19:14:05 EDT 2022" starttimestamp="1647716908162" timestamp="14737136" timestamp2="14737136">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1119" _type="InsertStringCommand" date="Sat Mar 19 19:14:05 EDT 2022" starttimestamp="1647716908162" timestamp="14737136" timestamp2="14737136">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1122" _type="PauseCommand" date="Sat Mar 19 19:14:06 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14738146">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1010]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1121" _type="InsertStringCommand" date="Sat Mar 19 19:14:06 EDT 2022" starttimestamp="1647716908162" timestamp="14738146" timestamp2="14738146">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1123" _type="InsertStringCommand" date="Sat Mar 19 19:14:06 EDT 2022" starttimestamp="1647716908162" timestamp="14738146" timestamp2="14738146">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1125" _type="InsertStringCommand" date="Sat Mar 19 19:14:06 EDT 2022" starttimestamp="1647716908162" timestamp="14738340" timestamp2="14738340">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1126" _type="InsertStringCommand" date="Sat Mar 19 19:14:06 EDT 2022" starttimestamp="1647716908162" timestamp="14738340" timestamp2="14738340">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1128" _type="InsertStringCommand" date="Sat Mar 19 19:14:06 EDT 2022" starttimestamp="1647716908162" timestamp="14738571" timestamp2="14738571">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1129" _type="InsertStringCommand" date="Sat Mar 19 19:14:06 EDT 2022" starttimestamp="1647716908162" timestamp="14738571" timestamp2="14738571">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1131" _type="InsertStringCommand" date="Sat Mar 19 19:14:07 EDT 2022" starttimestamp="1647716908162" timestamp="14739293" timestamp2="14739293">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1132" _type="InsertStringCommand" date="Sat Mar 19 19:14:07 EDT 2022" starttimestamp="1647716908162" timestamp="14739293" timestamp2="14739293">
    <data><![CDATA[p]]></data>
  </Command>
  <DocumentChange __id="1102" _type="Insert" date="Sat Mar 19 19:14:04 EDT 2022" docASTNodeCount="464" docActiveCodeLength="3010" docExpressionCount="322" docLength="3515" length="10" offset="2039" repeat="10" starttimestamp="1647716908162" timestamp="14736463" timestamp2="14739267">
    <text><![CDATA[umber of p]]></text>
  </DocumentChange>
  <Command __id="1134" _type="PauseCommand" date="Sat Mar 19 19:14:09 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14741346">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2053]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1135" _type="InsertStringCommand" date="Sat Mar 19 19:14:09 EDT 2022" starttimestamp="1647716908162" timestamp="14741378" timestamp2="14741378">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1136" _type="InsertStringCommand" date="Sat Mar 19 19:14:09 EDT 2022" starttimestamp="1647716908162" timestamp="14741378" timestamp2="14741378">
    <data><![CDATA[a]]></data>
  </Command>
  <DocumentChange __id="1133" _type="Insert" date="Sat Mar 19 19:14:09 EDT 2022" docASTNodeCount="464" docActiveCodeLength="3011" docExpressionCount="322" docLength="3516" length="1" offset="2049" starttimestamp="1647716908162" timestamp="14741346">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <Command __id="1138" _type="PauseCommand" date="Sat Mar 19 19:14:11 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14743363">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1985]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1139" _type="InsertStringCommand" date="Sat Mar 19 19:14:11 EDT 2022" starttimestamp="1647716908162" timestamp="14743393" timestamp2="14743393">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1140" _type="InsertStringCommand" date="Sat Mar 19 19:14:11 EDT 2022" starttimestamp="1647716908162" timestamp="14743393" timestamp2="14743393">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1143" _type="PauseCommand" date="Sat Mar 19 19:14:12 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14744413">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1020]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1142" _type="InsertStringCommand" date="Sat Mar 19 19:14:12 EDT 2022" starttimestamp="1647716908162" timestamp="14744413" timestamp2="14744413">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1144" _type="InsertStringCommand" date="Sat Mar 19 19:14:12 EDT 2022" starttimestamp="1647716908162" timestamp="14744414" timestamp2="14744414">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1146" _type="InsertStringCommand" date="Sat Mar 19 19:14:12 EDT 2022" starttimestamp="1647716908162" timestamp="14744454" timestamp2="14744454">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1147" _type="InsertStringCommand" date="Sat Mar 19 19:14:12 EDT 2022" starttimestamp="1647716908162" timestamp="14744454" timestamp2="14744454">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1149" _type="InsertStringCommand" date="Sat Mar 19 19:14:12 EDT 2022" starttimestamp="1647716908162" timestamp="14744491" timestamp2="14744491">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1150" _type="InsertStringCommand" date="Sat Mar 19 19:14:12 EDT 2022" starttimestamp="1647716908162" timestamp="14744497" timestamp2="14744497">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1152" _type="InsertStringCommand" date="Sat Mar 19 19:14:12 EDT 2022" starttimestamp="1647716908162" timestamp="14744548" timestamp2="14744548">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1153" _type="InsertStringCommand" date="Sat Mar 19 19:14:12 EDT 2022" starttimestamp="1647716908162" timestamp="14744548" timestamp2="14744548">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1155" _type="PauseCommand" date="Sat Mar 19 19:14:13 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14745757">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1209]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1154" _type="MoveCaretCommand" caretOffset="1180" date="Sat Mar 19 19:14:13 EDT 2022" docOffset="2056" starttimestamp="1647716908162" timestamp="14745757" />
  <Command __id="1156" _type="MoveCaretCommand" caretOffset="1180" date="Sat Mar 19 19:14:13 EDT 2022" docOffset="2056" starttimestamp="1647716908162" timestamp="14745759" />
  <Command __id="1158" _type="InsertStringCommand" date="Sat Mar 19 19:14:14 EDT 2022" starttimestamp="1647716908162" timestamp="14746434" timestamp2="14746434">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1159" _type="InsertStringCommand" date="Sat Mar 19 19:14:14 EDT 2022" starttimestamp="1647716908162" timestamp="14746434" timestamp2="14746434">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1161" _type="InsertStringCommand" date="Sat Mar 19 19:14:14 EDT 2022" starttimestamp="1647716908162" timestamp="14746806" timestamp2="14746806">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1162" _type="InsertStringCommand" date="Sat Mar 19 19:14:14 EDT 2022" starttimestamp="1647716908162" timestamp="14746806" timestamp2="14746806">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="1137" _type="Insert" date="Sat Mar 19 19:14:11 EDT 2022" docASTNodeCount="464" docActiveCodeLength="3016" docExpressionCount="322" docLength="3521" length="5" offset="2050" repeat="5" starttimestamp="1647716908162" timestamp="14743363" timestamp2="14744511">
    <text><![CDATA[trons]]></text>
  </DocumentChange>
  <DocumentChange __id="1157" _type="Insert" date="Sat Mar 19 19:14:14 EDT 2022" docASTNodeCount="464" docActiveCodeLength="3018" docExpressionCount="322" docLength="3523" length="2" offset="2056" repeat="2" starttimestamp="1647716908162" timestamp="14746413" timestamp2="14746762">
    <text><![CDATA[, ]]></text>
  </DocumentChange>
  <Command __id="1164" _type="PauseCommand" date="Sat Mar 19 19:14:18 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14750104">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3298]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1165" _type="InsertStringCommand" date="Sat Mar 19 19:14:18 EDT 2022" starttimestamp="1647716908162" timestamp="14750132" timestamp2="14750132">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="1166" _type="InsertStringCommand" date="Sat Mar 19 19:14:18 EDT 2022" starttimestamp="1647716908162" timestamp="14750132" timestamp2="14750132">
    <data><![CDATA["]]></data>
  </Command>
  <DocumentChange __id="1163" _type="Insert" date="Sat Mar 19 19:14:18 EDT 2022" docASTNodeCount="465" docActiveCodeLength="3020" docExpressionCount="323" docLength="3525" length="2" offset="2058" starttimestamp="1647716908162" timestamp="14750104">
    <text><![CDATA[""]]></text>
  </DocumentChange>
  <Command __id="1168" _type="PauseCommand" date="Sat Mar 19 19:14:21 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14753154">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3022]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1169" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753167" timestamp2="14753167">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1170" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753167" timestamp2="14753167">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1172" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753200" timestamp2="14753200">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1173" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753200" timestamp2="14753200">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1175" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753231" timestamp2="14753231">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1176" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753231" timestamp2="14753231">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1178" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753265" timestamp2="14753265">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1179" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753265" timestamp2="14753265">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1181" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753297" timestamp2="14753297">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1182" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753297" timestamp2="14753297">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1184" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753325" timestamp2="14753325">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1185" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753325" timestamp2="14753325">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1187" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753356" timestamp2="14753356">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1188" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753356" timestamp2="14753356">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1190" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753398" timestamp2="14753398">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1191" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753398" timestamp2="14753398">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1193" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753424" timestamp2="14753424">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1194" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753424" timestamp2="14753424">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1196" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753464" timestamp2="14753464">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1197" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753464" timestamp2="14753464">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1199" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753498" timestamp2="14753498">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1200" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753498" timestamp2="14753498">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1202" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753523" timestamp2="14753523">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1203" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753524" timestamp2="14753524">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1205" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753560" timestamp2="14753560">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1206" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753561" timestamp2="14753561">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1208" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753616" timestamp2="14753616">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1209" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753616" timestamp2="14753616">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1211" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753675" timestamp2="14753675">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1212" _type="InsertStringCommand" date="Sat Mar 19 19:14:21 EDT 2022" starttimestamp="1647716908162" timestamp="14753675" timestamp2="14753675">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1214" _type="PauseCommand" date="Sat Mar 19 19:14:22 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14754782">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1107]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1213" _type="MoveCaretCommand" caretOffset="1176" date="Sat Mar 19 19:14:22 EDT 2022" docOffset="2052" starttimestamp="1647716908162" timestamp="14754782" />
  <Command __id="1215" _type="MoveCaretCommand" caretOffset="1176" date="Sat Mar 19 19:14:22 EDT 2022" docOffset="2052" starttimestamp="1647716908162" timestamp="14754782" />
  <Command __id="1217" _type="PauseCommand" date="Sat Mar 19 19:14:25 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14757672">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2890]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1216" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 19:14:25 EDT 2022" starttimestamp="1647716908162" timestamp="14757672" />
  <Command __id="1218" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:14:25 EDT 2022" starttimestamp="1647716908162" timestamp="14757764" />
  <Command __id="1219" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:14:26 EDT 2022" starttimestamp="1647716908162" timestamp="14757874" />
  <Command __id="1221" _type="PauseCommand" date="Sat Mar 19 19:14:33 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="14765682">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7808]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1220" _type="ShellCommand" date="Sat Mar 19 19:14:33 EDT 2022" starttimestamp="1647716908162" timestamp="14765682" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1222" _type="ShellCommand" date="Sat Mar 19 19:14:33 EDT 2022" starttimestamp="1647716908162" timestamp="14765828" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1226" _type="PauseCommand" date="Sat Mar 19 19:14:38 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14770794">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[4876]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1225" _type="ShellCommand" date="Sat Mar 19 19:14:38 EDT 2022" starttimestamp="1647716908162" timestamp="14770794" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1227" _type="ShellCommand" date="Sat Mar 19 19:14:39 EDT 2022" starttimestamp="1647716908162" timestamp="14770910" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1231" _type="PauseCommand" date="Sat Mar 19 19:14:43 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14775287">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[4344]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1230" _type="MoveCaretCommand" caretOffset="1272" date="Sat Mar 19 19:14:43 EDT 2022" docOffset="2222" starttimestamp="1647716908162" timestamp="14775287" />
  <Command __id="1232" _type="MoveCaretCommand" caretOffset="1272" date="Sat Mar 19 19:14:43 EDT 2022" docOffset="2222" starttimestamp="1647716908162" timestamp="14775287" />
  <Command __id="1234" _type="PauseCommand" date="Sat Mar 19 19:14:49 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="14781517">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6230]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1233" _type="SelectTextCommand" caretOffset="1228" date="Sat Mar 19 19:14:49 EDT 2022" end="1228" start="1215" starttimestamp="1647716908162" timestamp="14781517" />
  <Command __id="1235" _type="SelectTextCommand" caretOffset="1228" date="Sat Mar 19 19:14:49 EDT 2022" end="1228" start="1215" starttimestamp="1647716908162" timestamp="14781517" />
  <DocumentChange __id="1167" _type="Insert" date="Sat Mar 19 19:14:21 EDT 2022" docASTNodeCount="465" docActiveCodeLength="3035" docExpressionCount="323" docLength="3540" length="15" offset="2059" repeat="15" starttimestamp="1647716908162" timestamp="14753154" timestamp2="14753639">
    <text><![CDATA[number of chefs]]></text>
  </DocumentChange>
  <DocumentChange __id="1223" _type="Insert" date="Sat Mar 19 19:14:34 EDT 2022" docASTNodeCount="473" docActiveCodeLength="3069" docExpressionCount="330" docLength="3574" length="34" offset="74" repeat="2" starttimestamp="1647716908162" timestamp="14765918" timestamp2="14765921">
    <text><![CDATA[
import java.lang.reflect.Method;]]></text>
  </DocumentChange>
  <DocumentChange __id="1228" _type="Insert" date="Sat Mar 19 19:14:39 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3109" docExpressionCount="337" docLength="3614" length="40" offset="357" repeat="2" starttimestamp="1647716908162" timestamp="14770943" timestamp2="14770945">
    <text><![CDATA[
import bus.uigen.test.AFunctionTester;]]></text>
  </DocumentChange>
  <Command __id="1237" _type="PauseCommand" date="Sat Mar 19 19:14:52 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14784124">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2607]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="1236" _type="Replace" date="Sat Mar 19 19:14:52 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3097" docExpressionCount="337" docLength="3602" endLine="72" insertionLength="1" int_docASTNodeCount="481" int_docActiveCodeLength="3096" int_docExpressionCount="337" int_docLength="3601" length="13" offset="2165" startLine="72" starttimestamp="1647716908162" timestamp="14784124">
    <deletedText><![CDATA[aDoubleNumber]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <Command __id="1238" _type="InsertStringCommand" date="Sat Mar 19 19:14:52 EDT 2022" starttimestamp="1647716908162" timestamp="14784155" timestamp2="14784155">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1239" _type="InsertStringCommand" date="Sat Mar 19 19:14:52 EDT 2022" starttimestamp="1647716908162" timestamp="14784155" timestamp2="14784155">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1241" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785160" timestamp2="14785160">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1242" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785160" timestamp2="14785160">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1244" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785191" timestamp2="14785191">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1245" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785191" timestamp2="14785191">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1247" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785227" timestamp2="14785227">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1248" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785227" timestamp2="14785227">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1250" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785265" timestamp2="14785265">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1251" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785265" timestamp2="14785265">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1253" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785297" timestamp2="14785297">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1254" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785298" timestamp2="14785298">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1256" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785334" timestamp2="14785334">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1257" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785334" timestamp2="14785334">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1259" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785368" timestamp2="14785368">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1260" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785368" timestamp2="14785368">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1262" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785389" timestamp2="14785389">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1263" _type="InsertStringCommand" date="Sat Mar 19 19:14:53 EDT 2022" starttimestamp="1647716908162" timestamp="14785390" timestamp2="14785390">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1265" _type="PauseCommand" date="Sat Mar 19 19:14:56 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14788561">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3171]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1264" _type="MoveCaretCommand" caretOffset="1271" date="Sat Mar 19 19:14:56 EDT 2022" docOffset="2221" starttimestamp="1647716908162" timestamp="14788561" />
  <Command __id="1266" _type="MoveCaretCommand" caretOffset="1271" date="Sat Mar 19 19:14:56 EDT 2022" docOffset="2221" starttimestamp="1647716908162" timestamp="14788562" />
  <Command __id="1267" _type="SelectTextCommand" caretOffset="1278" date="Sat Mar 19 19:14:56 EDT 2022" end="1278" start="1266" starttimestamp="1647716908162" timestamp="14788727" />
  <Command __id="1268" _type="SelectTextCommand" caretOffset="1278" date="Sat Mar 19 19:14:56 EDT 2022" end="1278" start="1266" starttimestamp="1647716908162" timestamp="14788728" />
  <DocumentChange __id="1240" _type="Insert" date="Sat Mar 19 19:14:53 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3105" docExpressionCount="337" docLength="3610" length="8" offset="2166" repeat="8" starttimestamp="1647716908162" timestamp="14785130" timestamp2="14785372">
    <text><![CDATA[nitScene]]></text>
  </DocumentChange>
  <Command __id="1270" _type="PauseCommand" date="Sat Mar 19 19:14:58 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14790302">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1574]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1271" _type="InsertStringCommand" date="Sat Mar 19 19:14:58 EDT 2022" starttimestamp="1647716908162" timestamp="14790343" timestamp2="14790343">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1272" _type="InsertStringCommand" date="Sat Mar 19 19:14:58 EDT 2022" starttimestamp="1647716908162" timestamp="14790343" timestamp2="14790343">
    <data><![CDATA[i]]></data>
  </Command>
  <DocumentChange __id="1269" _type="Replace" date="Sat Mar 19 19:14:58 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3094" docExpressionCount="337" docLength="3599" endLine="72" insertionLength="1" int_docASTNodeCount="481" int_docActiveCodeLength="3093" int_docExpressionCount="337" int_docLength="3598" length="12" offset="2216" startLine="72" starttimestamp="1647716908162" timestamp="14790302">
    <deletedText><![CDATA[doubleNumber]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <Command __id="1274" _type="PauseCommand" date="Sat Mar 19 19:15:00 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14792314">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1971]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1275" _type="InsertStringCommand" date="Sat Mar 19 19:15:00 EDT 2022" starttimestamp="1647716908162" timestamp="14792345" timestamp2="14792345">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1276" _type="InsertStringCommand" date="Sat Mar 19 19:15:00 EDT 2022" starttimestamp="1647716908162" timestamp="14792345" timestamp2="14792345">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1279" _type="PauseCommand" date="Sat Mar 19 19:15:01 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14793351">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1006]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1278" _type="InsertStringCommand" date="Sat Mar 19 19:15:01 EDT 2022" starttimestamp="1647716908162" timestamp="14793351" timestamp2="14793351">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1280" _type="InsertStringCommand" date="Sat Mar 19 19:15:01 EDT 2022" starttimestamp="1647716908162" timestamp="14793351" timestamp2="14793351">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1282" _type="InsertStringCommand" date="Sat Mar 19 19:15:01 EDT 2022" starttimestamp="1647716908162" timestamp="14793390" timestamp2="14793390">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1283" _type="InsertStringCommand" date="Sat Mar 19 19:15:01 EDT 2022" starttimestamp="1647716908162" timestamp="14793390" timestamp2="14793390">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1285" _type="InsertStringCommand" date="Sat Mar 19 19:15:01 EDT 2022" starttimestamp="1647716908162" timestamp="14793435" timestamp2="14793435">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1286" _type="InsertStringCommand" date="Sat Mar 19 19:15:01 EDT 2022" starttimestamp="1647716908162" timestamp="14793435" timestamp2="14793435">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1288" _type="InsertStringCommand" date="Sat Mar 19 19:15:01 EDT 2022" starttimestamp="1647716908162" timestamp="14793470" timestamp2="14793470">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1289" _type="InsertStringCommand" date="Sat Mar 19 19:15:01 EDT 2022" starttimestamp="1647716908162" timestamp="14793470" timestamp2="14793470">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1291" _type="InsertStringCommand" date="Sat Mar 19 19:15:01 EDT 2022" starttimestamp="1647716908162" timestamp="14793510" timestamp2="14793510">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1292" _type="InsertStringCommand" date="Sat Mar 19 19:15:01 EDT 2022" starttimestamp="1647716908162" timestamp="14793510" timestamp2="14793510">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1294" _type="InsertStringCommand" date="Sat Mar 19 19:15:01 EDT 2022" starttimestamp="1647716908162" timestamp="14793541" timestamp2="14793541">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1295" _type="InsertStringCommand" date="Sat Mar 19 19:15:01 EDT 2022" starttimestamp="1647716908162" timestamp="14793541" timestamp2="14793541">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1297" _type="InsertStringCommand" date="Sat Mar 19 19:15:01 EDT 2022" starttimestamp="1647716908162" timestamp="14793573" timestamp2="14793573">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1298" _type="InsertStringCommand" date="Sat Mar 19 19:15:01 EDT 2022" starttimestamp="1647716908162" timestamp="14793574" timestamp2="14793574">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1300" _type="PauseCommand" date="Sat Mar 19 19:15:06 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14797864">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4290]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1299" _type="MoveCaretCommand" caretOffset="1278" date="Sat Mar 19 19:15:06 EDT 2022" docOffset="2228" starttimestamp="1647716908162" timestamp="14797864" />
  <Command __id="1301" _type="MoveCaretCommand" caretOffset="1278" date="Sat Mar 19 19:15:06 EDT 2022" docOffset="2228" starttimestamp="1647716908162" timestamp="14797865" />
  <Command __id="1302" _type="SelectTextCommand" caretOffset="1298" date="Sat Mar 19 19:15:06 EDT 2022" end="1298" start="1278" starttimestamp="1647716908162" timestamp="14798753" />
  <Command __id="1303" _type="SelectTextCommand" caretOffset="1298" date="Sat Mar 19 19:15:06 EDT 2022" end="1298" start="1278" starttimestamp="1647716908162" timestamp="14798753" />
  <Command __id="1304" _type="MoveCaretCommand" caretOffset="1284" date="Sat Mar 19 19:15:07 EDT 2022" docOffset="2234" starttimestamp="1647716908162" timestamp="14799181" />
  <Command __id="1305" _type="MoveCaretCommand" caretOffset="1284" date="Sat Mar 19 19:15:07 EDT 2022" docOffset="2234" starttimestamp="1647716908162" timestamp="14799181" />
  <Command __id="1307" _type="PauseCommand" date="Sat Mar 19 19:15:09 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14801549">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2368]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <DocumentChange __id="1273" _type="Insert" date="Sat Mar 19 19:15:00 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3102" docExpressionCount="337" docLength="3607" length="8" offset="2217" repeat="8" starttimestamp="1647716908162" timestamp="14792314" timestamp2="14793544">
    <text><![CDATA[nitScene]]></text>
  </DocumentChange>
  <DocumentChange __id="1309" _type="Replace" date="Sat Mar 19 19:15:10 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3091" docExpressionCount="337" docLength="3596" endLine="72" insertionLength="1" int_docASTNodeCount="481" int_docActiveCodeLength="3090" int_docExpressionCount="337" int_docLength="3595" length="12" offset="2228" startLine="72" starttimestamp="1647716908162" timestamp="14802198">
    <deletedText><![CDATA[doubleNumber]]></deletedText>
    <insertedText><![CDATA[I]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1312" _type="Delete" date="Sat Mar 19 19:15:10 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3090" docExpressionCount="337" docLength="3595" endLine="72" length="1" offset="2228" startLine="72" starttimestamp="1647716908162" timestamp="14802419">
    <text><![CDATA[I]]></text>
  </DocumentChange>
  <Command __id="1306" _type="SelectTextCommand" caretOffset="1290" date="Sat Mar 19 19:15:09 EDT 2022" end="1290" start="1278" starttimestamp="1647716908162" timestamp="14801549" />
  <Command __id="1308" _type="SelectTextCommand" caretOffset="1290" date="Sat Mar 19 19:15:09 EDT 2022" end="1290" start="1278" starttimestamp="1647716908162" timestamp="14801550" />
  <Command __id="1310" _type="InsertStringCommand" date="Sat Mar 19 19:15:10 EDT 2022" starttimestamp="1647716908162" timestamp="14802239" timestamp2="14802239">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1311" _type="InsertStringCommand" date="Sat Mar 19 19:15:10 EDT 2022" starttimestamp="1647716908162" timestamp="14802239" timestamp2="14802239">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1313" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:15:10 EDT 2022" starttimestamp="1647716908162" timestamp="14802432" />
  <Command __id="1314" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:15:10 EDT 2022" starttimestamp="1647716908162" timestamp="14802432" />
  <Command __id="1316" _type="InsertStringCommand" date="Sat Mar 19 19:15:10 EDT 2022" starttimestamp="1647716908162" timestamp="14802657" timestamp2="14802657">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1317" _type="InsertStringCommand" date="Sat Mar 19 19:15:10 EDT 2022" starttimestamp="1647716908162" timestamp="14802657" timestamp2="14802657">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1319" _type="InsertStringCommand" date="Sat Mar 19 19:15:10 EDT 2022" starttimestamp="1647716908162" timestamp="14802803" timestamp2="14802803">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1320" _type="InsertStringCommand" date="Sat Mar 19 19:15:10 EDT 2022" starttimestamp="1647716908162" timestamp="14802803" timestamp2="14802803">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1322" _type="InsertStringCommand" date="Sat Mar 19 19:15:11 EDT 2022" starttimestamp="1647716908162" timestamp="14802870" timestamp2="14802870">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1323" _type="InsertStringCommand" date="Sat Mar 19 19:15:11 EDT 2022" starttimestamp="1647716908162" timestamp="14802870" timestamp2="14802870">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1325" _type="InsertStringCommand" date="Sat Mar 19 19:15:11 EDT 2022" starttimestamp="1647716908162" timestamp="14802986" timestamp2="14802986">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1326" _type="InsertStringCommand" date="Sat Mar 19 19:15:11 EDT 2022" starttimestamp="1647716908162" timestamp="14802986" timestamp2="14802986">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1328" _type="InsertStringCommand" date="Sat Mar 19 19:15:11 EDT 2022" starttimestamp="1647716908162" timestamp="14803264" timestamp2="14803264">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1329" _type="InsertStringCommand" date="Sat Mar 19 19:15:11 EDT 2022" starttimestamp="1647716908162" timestamp="14803264" timestamp2="14803264">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1331" _type="InsertStringCommand" date="Sat Mar 19 19:15:11 EDT 2022" starttimestamp="1647716908162" timestamp="14803437" timestamp2="14803437">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1332" _type="InsertStringCommand" date="Sat Mar 19 19:15:11 EDT 2022" starttimestamp="1647716908162" timestamp="14803437" timestamp2="14803437">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1334" _type="InsertStringCommand" date="Sat Mar 19 19:15:11 EDT 2022" starttimestamp="1647716908162" timestamp="14803580" timestamp2="14803580">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1335" _type="InsertStringCommand" date="Sat Mar 19 19:15:11 EDT 2022" starttimestamp="1647716908162" timestamp="14803580" timestamp2="14803580">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1338" _type="PauseCommand" date="Sat Mar 19 19:15:12 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14804661">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1081]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1337" _type="InsertStringCommand" date="Sat Mar 19 19:15:12 EDT 2022" starttimestamp="1647716908162" timestamp="14804661" timestamp2="14804661">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1339" _type="InsertStringCommand" date="Sat Mar 19 19:15:12 EDT 2022" starttimestamp="1647716908162" timestamp="14804662" timestamp2="14804662">
    <data><![CDATA[n]]></data>
  </Command>
  <DocumentChange __id="1315" _type="Insert" date="Sat Mar 19 19:15:10 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3098" docExpressionCount="337" docLength="3603" length="8" offset="2228" repeat="8" starttimestamp="1647716908162" timestamp="14802635" timestamp2="14804629">
    <text><![CDATA[initScen]]></text>
  </DocumentChange>
  <Command __id="1341" _type="PauseCommand" date="Sat Mar 19 19:15:14 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14806642">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1980]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1342" _type="InsertStringCommand" date="Sat Mar 19 19:15:14 EDT 2022" starttimestamp="1647716908162" timestamp="14806674" timestamp2="14806674">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1343" _type="InsertStringCommand" date="Sat Mar 19 19:15:14 EDT 2022" starttimestamp="1647716908162" timestamp="14806674" timestamp2="14806674">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1345" _type="PauseCommand" date="Sat Mar 19 19:15:17 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14809383">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2709]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1344" _type="MoveCaretCommand" caretOffset="1346" date="Sat Mar 19 19:15:17 EDT 2022" docOffset="2296" starttimestamp="1647716908162" timestamp="14809383" />
  <Command __id="1346" _type="MoveCaretCommand" caretOffset="1346" date="Sat Mar 19 19:15:17 EDT 2022" docOffset="2296" starttimestamp="1647716908162" timestamp="14809383" />
  <Command __id="1348" _type="PauseCommand" date="Sat Mar 19 19:15:19 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14811255">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1872]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1347" _type="SelectTextCommand" caretOffset="1359" date="Sat Mar 19 19:15:19 EDT 2022" end="1359" start="1346" starttimestamp="1647716908162" timestamp="14811255" />
  <Command __id="1349" _type="SelectTextCommand" caretOffset="1359" date="Sat Mar 19 19:15:19 EDT 2022" end="1359" start="1346" starttimestamp="1647716908162" timestamp="14811255" />
  <DocumentChange __id="1340" _type="Insert" date="Sat Mar 19 19:15:14 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3099" docExpressionCount="337" docLength="3604" length="1" offset="2236" starttimestamp="1647716908162" timestamp="14806642">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <Command __id="1351" _type="PauseCommand" date="Sat Mar 19 19:15:20 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14812659">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1404]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1352" _type="InsertStringCommand" date="Sat Mar 19 19:15:20 EDT 2022" starttimestamp="1647716908162" timestamp="14812698" timestamp2="14812698">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1353" _type="InsertStringCommand" date="Sat Mar 19 19:15:20 EDT 2022" starttimestamp="1647716908162" timestamp="14812698" timestamp2="14812698">
    <data><![CDATA[i]]></data>
  </Command>
  <DocumentChange __id="1350" _type="Replace" date="Sat Mar 19 19:15:20 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3087" docExpressionCount="337" docLength="3592" endLine="73" insertionLength="1" int_docASTNodeCount="481" int_docActiveCodeLength="3086" int_docExpressionCount="337" int_docLength="3591" length="13" offset="2296" startLine="73" starttimestamp="1647716908162" timestamp="14812659">
    <deletedText><![CDATA[aDoubleNumber]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <Command __id="1355" _type="PauseCommand" date="Sat Mar 19 19:15:22 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14814673">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1975]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1356" _type="InsertStringCommand" date="Sat Mar 19 19:15:22 EDT 2022" starttimestamp="1647716908162" timestamp="14814705" timestamp2="14814705">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1357" _type="InsertStringCommand" date="Sat Mar 19 19:15:22 EDT 2022" starttimestamp="1647716908162" timestamp="14814705" timestamp2="14814705">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1359" _type="InsertStringCommand" date="Sat Mar 19 19:15:23 EDT 2022" starttimestamp="1647716908162" timestamp="14815700" timestamp2="14815700">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1360" _type="InsertStringCommand" date="Sat Mar 19 19:15:23 EDT 2022" starttimestamp="1647716908162" timestamp="14815700" timestamp2="14815700">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1363" _type="PauseCommand" date="Sat Mar 19 19:15:24 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14816735">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1035]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1362" _type="InsertStringCommand" date="Sat Mar 19 19:15:24 EDT 2022" starttimestamp="1647716908162" timestamp="14816735" timestamp2="14816735">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1364" _type="InsertStringCommand" date="Sat Mar 19 19:15:24 EDT 2022" starttimestamp="1647716908162" timestamp="14816735" timestamp2="14816735">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1366" _type="InsertStringCommand" date="Sat Mar 19 19:15:24 EDT 2022" starttimestamp="1647716908162" timestamp="14816767" timestamp2="14816767">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1367" _type="InsertStringCommand" date="Sat Mar 19 19:15:24 EDT 2022" starttimestamp="1647716908162" timestamp="14816767" timestamp2="14816767">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1369" _type="InsertStringCommand" date="Sat Mar 19 19:15:24 EDT 2022" starttimestamp="1647716908162" timestamp="14816794" timestamp2="14816794">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1370" _type="InsertStringCommand" date="Sat Mar 19 19:15:24 EDT 2022" starttimestamp="1647716908162" timestamp="14816794" timestamp2="14816794">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1372" _type="InsertStringCommand" date="Sat Mar 19 19:15:24 EDT 2022" starttimestamp="1647716908162" timestamp="14816836" timestamp2="14816836">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1373" _type="InsertStringCommand" date="Sat Mar 19 19:15:24 EDT 2022" starttimestamp="1647716908162" timestamp="14816836" timestamp2="14816836">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1375" _type="InsertStringCommand" date="Sat Mar 19 19:15:25 EDT 2022" starttimestamp="1647716908162" timestamp="14816860" timestamp2="14816860">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1376" _type="InsertStringCommand" date="Sat Mar 19 19:15:25 EDT 2022" starttimestamp="1647716908162" timestamp="14816860" timestamp2="14816860">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1378" _type="InsertStringCommand" date="Sat Mar 19 19:15:25 EDT 2022" starttimestamp="1647716908162" timestamp="14816896" timestamp2="14816896">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1379" _type="InsertStringCommand" date="Sat Mar 19 19:15:25 EDT 2022" starttimestamp="1647716908162" timestamp="14816896" timestamp2="14816896">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1381" _type="PauseCommand" date="Sat Mar 19 19:15:26 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14818644">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1748]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1380" _type="MoveCaretCommand" caretOffset="1363" date="Sat Mar 19 19:15:26 EDT 2022" docOffset="2313" starttimestamp="1647716908162" timestamp="14818644" />
  <Command __id="1382" _type="MoveCaretCommand" caretOffset="1363" date="Sat Mar 19 19:15:26 EDT 2022" docOffset="2313" starttimestamp="1647716908162" timestamp="14818646" />
  <Command __id="1384" _type="PauseCommand" date="Sat Mar 19 19:15:31 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14823380">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4734]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1383" _type="SelectTextCommand" caretOffset="1375" date="Sat Mar 19 19:15:31 EDT 2022" end="1375" start="1363" starttimestamp="1647716908162" timestamp="14823380" />
  <Command __id="1385" _type="SelectTextCommand" caretOffset="1375" date="Sat Mar 19 19:15:31 EDT 2022" end="1375" start="1363" starttimestamp="1647716908162" timestamp="14823380" />
  <DocumentChange __id="1354" _type="Insert" date="Sat Mar 19 19:15:22 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3095" docExpressionCount="337" docLength="3600" length="8" offset="2297" repeat="8" starttimestamp="1647716908162" timestamp="14814673" timestamp2="14816867">
    <text><![CDATA[nitScene]]></text>
  </DocumentChange>
  <Command __id="1387" _type="PauseCommand" date="Sat Mar 19 19:15:32 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14824781">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1401]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="1386" _type="Replace" date="Sat Mar 19 19:15:32 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3084" docExpressionCount="337" docLength="3589" endLine="73" insertionLength="1" int_docASTNodeCount="481" int_docActiveCodeLength="3083" int_docExpressionCount="337" int_docLength="3588" length="12" offset="2313" startLine="73" starttimestamp="1647716908162" timestamp="14824781">
    <deletedText><![CDATA[doubleNumber]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <Command __id="1388" _type="InsertStringCommand" date="Sat Mar 19 19:15:32 EDT 2022" starttimestamp="1647716908162" timestamp="14824819" timestamp2="14824819">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1389" _type="InsertStringCommand" date="Sat Mar 19 19:15:32 EDT 2022" starttimestamp="1647716908162" timestamp="14824819" timestamp2="14824819">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1391" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14824849" timestamp2="14824849">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1392" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14824849" timestamp2="14824849">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1394" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14824882" timestamp2="14824882">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1395" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14824882" timestamp2="14824882">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1397" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14824914" timestamp2="14824914">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1398" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14824914" timestamp2="14824914">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1400" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14824948" timestamp2="14824948">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1401" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14824948" timestamp2="14824948">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1403" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14825109" timestamp2="14825109">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1404" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14825109" timestamp2="14825109">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1406" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14825292" timestamp2="14825292">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1407" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14825292" timestamp2="14825292">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1409" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14825415" timestamp2="14825415">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1410" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14825415" timestamp2="14825415">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1412" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14825465" timestamp2="14825465">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1413" _type="InsertStringCommand" date="Sat Mar 19 19:15:33 EDT 2022" starttimestamp="1647716908162" timestamp="14825465" timestamp2="14825465">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1415" _type="PauseCommand" date="Sat Mar 19 19:15:35 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14827679">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2214]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1414" _type="MoveCaretCommand" caretOffset="1426" date="Sat Mar 19 19:15:35 EDT 2022" docOffset="2376" starttimestamp="1647716908162" timestamp="14827679" />
  <Command __id="1416" _type="MoveCaretCommand" caretOffset="1426" date="Sat Mar 19 19:15:35 EDT 2022" docOffset="2376" starttimestamp="1647716908162" timestamp="14827679" />
  <Command __id="1418" _type="PauseCommand" date="Sat Mar 19 19:15:37 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14829221">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1542]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1417" _type="SelectTextCommand" caretOffset="1439" date="Sat Mar 19 19:15:37 EDT 2022" end="1439" start="1426" starttimestamp="1647716908162" timestamp="14829221" />
  <Command __id="1419" _type="SelectTextCommand" caretOffset="1439" date="Sat Mar 19 19:15:37 EDT 2022" end="1439" start="1426" starttimestamp="1647716908162" timestamp="14829222" />
  <DocumentChange __id="1390" _type="Insert" date="Sat Mar 19 19:15:32 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3092" docExpressionCount="337" docLength="3597" length="8" offset="2314" repeat="8" starttimestamp="1647716908162" timestamp="14824825" timestamp2="14825432">
    <text><![CDATA[nitScene]]></text>
  </DocumentChange>
  <Command __id="1421" _type="PauseCommand" date="Sat Mar 19 19:15:38 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14830560">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1338]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1422" _type="InsertStringCommand" date="Sat Mar 19 19:15:38 EDT 2022" starttimestamp="1647716908162" timestamp="14830599" timestamp2="14830599">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1423" _type="InsertStringCommand" date="Sat Mar 19 19:15:38 EDT 2022" starttimestamp="1647716908162" timestamp="14830599" timestamp2="14830599">
    <data><![CDATA[i]]></data>
  </Command>
  <DocumentChange __id="1420" _type="Replace" date="Sat Mar 19 19:15:38 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3080" docExpressionCount="337" docLength="3585" endLine="74" insertionLength="1" int_docASTNodeCount="481" int_docActiveCodeLength="3079" int_docExpressionCount="337" int_docLength="3584" length="13" offset="2376" startLine="74" starttimestamp="1647716908162" timestamp="14830560">
    <deletedText><![CDATA[aDoubleNumber]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <Command __id="1425" _type="PauseCommand" date="Sat Mar 19 19:15:40 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14832573">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1974]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1426" _type="InsertStringCommand" date="Sat Mar 19 19:15:40 EDT 2022" starttimestamp="1647716908162" timestamp="14832612" timestamp2="14832612">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1427" _type="InsertStringCommand" date="Sat Mar 19 19:15:40 EDT 2022" starttimestamp="1647716908162" timestamp="14832612" timestamp2="14832612">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1430" _type="PauseCommand" date="Sat Mar 19 19:15:41 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14833612">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1000]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1429" _type="InsertStringCommand" date="Sat Mar 19 19:15:41 EDT 2022" starttimestamp="1647716908162" timestamp="14833612" timestamp2="14833612">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1431" _type="InsertStringCommand" date="Sat Mar 19 19:15:41 EDT 2022" starttimestamp="1647716908162" timestamp="14833612" timestamp2="14833612">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1433" _type="InsertStringCommand" date="Sat Mar 19 19:15:41 EDT 2022" starttimestamp="1647716908162" timestamp="14833651" timestamp2="14833651">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1434" _type="InsertStringCommand" date="Sat Mar 19 19:15:41 EDT 2022" starttimestamp="1647716908162" timestamp="14833651" timestamp2="14833651">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1436" _type="InsertStringCommand" date="Sat Mar 19 19:15:41 EDT 2022" starttimestamp="1647716908162" timestamp="14833683" timestamp2="14833683">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1437" _type="InsertStringCommand" date="Sat Mar 19 19:15:41 EDT 2022" starttimestamp="1647716908162" timestamp="14833683" timestamp2="14833683">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1439" _type="InsertStringCommand" date="Sat Mar 19 19:15:41 EDT 2022" starttimestamp="1647716908162" timestamp="14833711" timestamp2="14833711">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1440" _type="InsertStringCommand" date="Sat Mar 19 19:15:41 EDT 2022" starttimestamp="1647716908162" timestamp="14833711" timestamp2="14833711">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1442" _type="InsertStringCommand" date="Sat Mar 19 19:15:41 EDT 2022" starttimestamp="1647716908162" timestamp="14833750" timestamp2="14833750">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1443" _type="InsertStringCommand" date="Sat Mar 19 19:15:41 EDT 2022" starttimestamp="1647716908162" timestamp="14833750" timestamp2="14833750">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1445" _type="InsertStringCommand" date="Sat Mar 19 19:15:41 EDT 2022" starttimestamp="1647716908162" timestamp="14833785" timestamp2="14833785">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1446" _type="InsertStringCommand" date="Sat Mar 19 19:15:41 EDT 2022" starttimestamp="1647716908162" timestamp="14833785" timestamp2="14833785">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1448" _type="InsertStringCommand" date="Sat Mar 19 19:15:41 EDT 2022" starttimestamp="1647716908162" timestamp="14833813" timestamp2="14833813">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1449" _type="InsertStringCommand" date="Sat Mar 19 19:15:41 EDT 2022" starttimestamp="1647716908162" timestamp="14833813" timestamp2="14833813">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1450" _type="MoveCaretCommand" caretOffset="1443" date="Sat Mar 19 19:15:42 EDT 2022" docOffset="2393" starttimestamp="1647716908162" timestamp="14834647" />
  <Command __id="1451" _type="MoveCaretCommand" caretOffset="1443" date="Sat Mar 19 19:15:42 EDT 2022" docOffset="2393" starttimestamp="1647716908162" timestamp="14834647" />
  <Command __id="1453" _type="PauseCommand" date="Sat Mar 19 19:15:45 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14836947">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2300]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1452" _type="SelectTextCommand" caretOffset="1455" date="Sat Mar 19 19:15:45 EDT 2022" end="1455" start="1443" starttimestamp="1647716908162" timestamp="14836947" />
  <Command __id="1454" _type="SelectTextCommand" caretOffset="1455" date="Sat Mar 19 19:15:45 EDT 2022" end="1455" start="1443" starttimestamp="1647716908162" timestamp="14836949" />
  <DocumentChange __id="1424" _type="Insert" date="Sat Mar 19 19:15:40 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3088" docExpressionCount="337" docLength="3593" length="8" offset="2377" repeat="8" starttimestamp="1647716908162" timestamp="14832573" timestamp2="14833789">
    <text><![CDATA[nitScene]]></text>
  </DocumentChange>
  <Command __id="1456" _type="PauseCommand" date="Sat Mar 19 19:15:46 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14838542">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1593]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1457" _type="InsertStringCommand" date="Sat Mar 19 19:15:46 EDT 2022" starttimestamp="1647716908162" timestamp="14838572" timestamp2="14838572">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1458" _type="InsertStringCommand" date="Sat Mar 19 19:15:46 EDT 2022" starttimestamp="1647716908162" timestamp="14838572" timestamp2="14838572">
    <data><![CDATA[i]]></data>
  </Command>
  <DocumentChange __id="1455" _type="Replace" date="Sat Mar 19 19:15:46 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3077" docExpressionCount="337" docLength="3582" endLine="74" insertionLength="1" int_docASTNodeCount="481" int_docActiveCodeLength="3076" int_docExpressionCount="337" int_docLength="3581" length="12" offset="2393" startLine="74" starttimestamp="1647716908162" timestamp="14838542">
    <deletedText><![CDATA[doubleNumber]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <Command __id="1460" _type="PauseCommand" date="Sat Mar 19 19:15:48 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14840547">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1975]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1461" _type="InsertStringCommand" date="Sat Mar 19 19:15:48 EDT 2022" starttimestamp="1647716908162" timestamp="14840574" timestamp2="14840574">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1462" _type="InsertStringCommand" date="Sat Mar 19 19:15:48 EDT 2022" starttimestamp="1647716908162" timestamp="14840574" timestamp2="14840574">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1465" _type="PauseCommand" date="Sat Mar 19 19:15:49 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14841581">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1007]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1464" _type="InsertStringCommand" date="Sat Mar 19 19:15:49 EDT 2022" starttimestamp="1647716908162" timestamp="14841581" timestamp2="14841581">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1466" _type="InsertStringCommand" date="Sat Mar 19 19:15:49 EDT 2022" starttimestamp="1647716908162" timestamp="14841582" timestamp2="14841582">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1468" _type="InsertStringCommand" date="Sat Mar 19 19:15:49 EDT 2022" starttimestamp="1647716908162" timestamp="14841611" timestamp2="14841611">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1469" _type="InsertStringCommand" date="Sat Mar 19 19:15:49 EDT 2022" starttimestamp="1647716908162" timestamp="14841611" timestamp2="14841611">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1471" _type="InsertStringCommand" date="Sat Mar 19 19:15:49 EDT 2022" starttimestamp="1647716908162" timestamp="14841640" timestamp2="14841640">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1472" _type="InsertStringCommand" date="Sat Mar 19 19:15:49 EDT 2022" starttimestamp="1647716908162" timestamp="14841640" timestamp2="14841640">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1474" _type="InsertStringCommand" date="Sat Mar 19 19:15:49 EDT 2022" starttimestamp="1647716908162" timestamp="14841665" timestamp2="14841665">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1475" _type="InsertStringCommand" date="Sat Mar 19 19:15:49 EDT 2022" starttimestamp="1647716908162" timestamp="14841665" timestamp2="14841665">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1477" _type="InsertStringCommand" date="Sat Mar 19 19:15:49 EDT 2022" starttimestamp="1647716908162" timestamp="14841700" timestamp2="14841700">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1478" _type="InsertStringCommand" date="Sat Mar 19 19:15:49 EDT 2022" starttimestamp="1647716908162" timestamp="14841700" timestamp2="14841700">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1480" _type="InsertStringCommand" date="Sat Mar 19 19:15:49 EDT 2022" starttimestamp="1647716908162" timestamp="14841739" timestamp2="14841739">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1481" _type="InsertStringCommand" date="Sat Mar 19 19:15:49 EDT 2022" starttimestamp="1647716908162" timestamp="14841740" timestamp2="14841740">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1483" _type="InsertStringCommand" date="Sat Mar 19 19:15:49 EDT 2022" starttimestamp="1647716908162" timestamp="14841769" timestamp2="14841769">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1484" _type="InsertStringCommand" date="Sat Mar 19 19:15:49 EDT 2022" starttimestamp="1647716908162" timestamp="14841769" timestamp2="14841769">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1486" _type="PauseCommand" date="Sat Mar 19 19:15:53 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14845441">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3672]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1485" _type="MoveCaretCommand" caretOffset="1219" date="Sat Mar 19 19:15:53 EDT 2022" docOffset="2169" starttimestamp="1647716908162" timestamp="14845441" />
  <Command __id="1487" _type="MoveCaretCommand" caretOffset="1219" date="Sat Mar 19 19:15:53 EDT 2022" docOffset="2169" starttimestamp="1647716908162" timestamp="14845442" />
  <Command __id="1489" _type="PauseCommand" date="Sat Mar 19 19:15:56 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14848095">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2653]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1492" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:16:10 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14862653" type="Run" />
  <Command __id="1494" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:16:10 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14862653" type="Run" />
  <Command __id="1496" _type="PauseCommand" date="Sat Mar 19 19:16:12 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14863848">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1195]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1495" _type="ExceptionCommand" date="Sat Mar 19 19:16:12 EDT 2022" starttimestamp="1647716908162" timestamp="14863848" type="Exception">
    <exceptionString><![CDATA[W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
java.lang.NoSuchMethodException: bus.uigen.test.AFunctionTester.initScene(int,int)
	at java.base/java.lang.Class.getMethod(Class.java:2122)
	at main.MainClass.animateArrayUseInteractive(MainClass.java:73)
	at main.MainClass.main(MainClass.java:47)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1497" _type="ShellCommand" date="Sat Mar 19 19:16:12 EDT 2022" starttimestamp="1647716908162" timestamp="14864242" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1498" _type="ConsoleOutput" date="Sat Mar 19 19:16:12 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14864544" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@4f32a3ad
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(INSERT,"E** Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@4f32a3ad"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1499" _type="ConsoleOutput" date="Sat Mar 19 19:16:12 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14864816" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Patron List not in range.
W*** Value: null of Root.Chef List not in range.
W*** Value: null of Root.Buffer not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@4f32a3ad"), Diff(INSERT,"Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1501" _type="PauseCommand" date="Sat Mar 19 19:16:29 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="14881653">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[16837]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1500" _type="ShellCommand" date="Sat Mar 19 19:16:29 EDT 2022" starttimestamp="1647716908162" timestamp="14881653" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1502" _type="MoveCaretCommand" caretOffset="1428" date="Sat Mar 19 19:16:29 EDT 2022" docOffset="2378" starttimestamp="1647716908162" timestamp="14881745" />
  <Command __id="1503" _type="MoveCaretCommand" caretOffset="1428" date="Sat Mar 19 19:16:29 EDT 2022" docOffset="2378" starttimestamp="1647716908162" timestamp="14881745" />
  <Command __id="1505" _type="PauseCommand" date="Sat Mar 19 19:16:46 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="14898543">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[16798]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1504" _type="MoveCaretCommand" caretOffset="1233" date="Sat Mar 19 19:16:46 EDT 2022" docOffset="2183" starttimestamp="1647716908162" timestamp="14898543" />
  <Command __id="1506" _type="MoveCaretCommand" caretOffset="1233" date="Sat Mar 19 19:16:46 EDT 2022" docOffset="2183" starttimestamp="1647716908162" timestamp="14898543" />
  <Command __id="1508" _type="PauseCommand" date="Sat Mar 19 19:16:48 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14900636">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2093]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1507" _type="SelectTextCommand" caretOffset="1248" date="Sat Mar 19 19:16:48 EDT 2022" end="1248" start="1233" starttimestamp="1647716908162" timestamp="14900636" />
  <Command __id="1509" _type="SelectTextCommand" caretOffset="1248" date="Sat Mar 19 19:16:48 EDT 2022" end="1248" start="1233" starttimestamp="1647716908162" timestamp="14900637" />
  <DocumentChange __id="1459" _type="Insert" date="Sat Mar 19 19:15:48 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3085" docExpressionCount="337" docLength="3590" length="8" offset="2394" repeat="8" starttimestamp="1647716908162" timestamp="14840547" timestamp2="14841745">
    <text><![CDATA[nitScene]]></text>
  </DocumentChange>
  <Command __id="1511" _type="PauseCommand" date="Sat Mar 19 19:16:51 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14903700">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3063]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1512" _type="InsertStringCommand" date="Sat Mar 19 19:16:51 EDT 2022" starttimestamp="1647716908162" timestamp="14903737" timestamp2="14903737">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1513" _type="InsertStringCommand" date="Sat Mar 19 19:16:51 EDT 2022" starttimestamp="1647716908162" timestamp="14903738" timestamp2="14903738">
    <data><![CDATA[A]]></data>
  </Command>
  <DocumentChange __id="1510" _type="Replace" date="Sat Mar 19 19:16:51 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3071" docExpressionCount="337" docLength="3576" endLine="72" insertionLength="1" int_docASTNodeCount="480" int_docActiveCodeLength="3070" int_docExpressionCount="336" int_docLength="3575" length="15" offset="2183" startLine="72" starttimestamp="1647716908162" timestamp="14903700">
    <deletedText><![CDATA[AFunctionTester]]></deletedText>
    <insertedText><![CDATA[A]]></insertedText>
  </DocumentChange>
  <Command __id="1515" _type="PauseCommand" date="Sat Mar 19 19:16:53 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14905726">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1988]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="1514" _type="Delete" date="Sat Mar 19 19:16:53 EDT 2022" docASTNodeCount="480" docActiveCodeLength="3070" docExpressionCount="336" docLength="3575" endLine="72" length="1" offset="2183" startLine="72" starttimestamp="1647716908162" timestamp="14905726">
    <text><![CDATA[A]]></text>
  </DocumentChange>
  <Command __id="1516" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:16:53 EDT 2022" starttimestamp="1647716908162" timestamp="14905760" />
  <Command __id="1517" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:16:53 EDT 2022" starttimestamp="1647716908162" timestamp="14905760" />
  <Command __id="1519" _type="InsertStringCommand" date="Sat Mar 19 19:16:53 EDT 2022" starttimestamp="1647716908162" timestamp="14905797" timestamp2="14905797">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1520" _type="InsertStringCommand" date="Sat Mar 19 19:16:53 EDT 2022" starttimestamp="1647716908162" timestamp="14905797" timestamp2="14905797">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1522" _type="InsertStringCommand" date="Sat Mar 19 19:16:53 EDT 2022" starttimestamp="1647716908162" timestamp="14905823" timestamp2="14905823">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1523" _type="InsertStringCommand" date="Sat Mar 19 19:16:53 EDT 2022" starttimestamp="1647716908162" timestamp="14905824" timestamp2="14905824">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1525" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14905858" timestamp2="14905858">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1526" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14905858" timestamp2="14905858">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1528" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14905921" timestamp2="14905921">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1529" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14905921" timestamp2="14905921">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1531" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14905958" timestamp2="14905958">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1532" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14905959" timestamp2="14905959">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1534" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14905984" timestamp2="14905984">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1535" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14905984" timestamp2="14905984">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1537" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906030" timestamp2="14906030">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1538" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906030" timestamp2="14906030">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1540" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906062" timestamp2="14906062">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="1541" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906062" timestamp2="14906062">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="1543" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906089" timestamp2="14906089">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1544" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906089" timestamp2="14906089">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1546" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906118" timestamp2="14906118">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1547" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906118" timestamp2="14906118">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1549" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906142" timestamp2="14906142">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1550" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906142" timestamp2="14906142">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1552" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906171" timestamp2="14906171">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1553" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906171" timestamp2="14906171">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1555" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906196" timestamp2="14906196">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1556" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906199" timestamp2="14906199">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1558" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906232" timestamp2="14906232">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1559" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906232" timestamp2="14906232">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1561" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906269" timestamp2="14906269">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1562" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906269" timestamp2="14906269">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1564" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906296" timestamp2="14906296">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1565" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906296" timestamp2="14906296">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1567" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906329" timestamp2="14906329">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1568" _type="InsertStringCommand" date="Sat Mar 19 19:16:54 EDT 2022" starttimestamp="1647716908162" timestamp="14906329" timestamp2="14906329">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1570" _type="PauseCommand" date="Sat Mar 19 19:16:55 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14907480">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1151]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1569" _type="MoveCaretCommand" caretOffset="1466" date="Sat Mar 19 19:16:55 EDT 2022" docOffset="2416" starttimestamp="1647716908162" timestamp="14907480" />
  <Command __id="1571" _type="MoveCaretCommand" caretOffset="1466" date="Sat Mar 19 19:16:55 EDT 2022" docOffset="2416" starttimestamp="1647716908162" timestamp="14907481" />
  <Command __id="1573" _type="PauseCommand" date="Sat Mar 19 19:17:02 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="14914394">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6913]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1579" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:17:07 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14919830" type="Run" />
  <Command __id="1581" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:17:07 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="14919831" type="Run" />
  <Command __id="1583" _type="PauseCommand" date="Sat Mar 19 19:17:09 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="14920873">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1042]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1582" _type="ConsoleOutput" date="Sat Mar 19 19:17:09 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14920873" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(INSERT,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1584" _type="ShellCommand" date="Sat Mar 19 19:17:09 EDT 2022" starttimestamp="1647716908162" timestamp="14921191" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1585" _type="ConsoleOutput" date="Sat Mar 19 19:17:09 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14921517" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@6cb107fd
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@6cb107fd"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1586" _type="ConsoleOutput" date="Sat Mar 19 19:17:09 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14921815" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Patron List not in range.
W*** Value: null of Root.Chef List not in range.
W*** Value: null of Root.Buffer not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@6cb107fd"), Diff(INSERT,"Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1588" _type="PauseCommand" date="Sat Mar 19 19:17:17 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="14929659">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7843]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1587" _type="ConsoleOutput" date="Sat Mar 19 19:17:17 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14929658" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6e81b390]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6e81b390]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6e81b390]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6e81b390]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3119ff77]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3119ff77]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3119ff77]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3119ff77]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21e82292]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21e82292]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@21e82292]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@21e82292]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@46cca12e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@46cca12e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@46cca12e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@46cca12e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@25328754]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@25328754]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@25328754]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@25328754]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5b2e36c2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5b2e36c2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@5b2e36c2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@5b2e36c2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@3bb27387]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@3bb27387]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@3bb27387]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@3bb27387]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6e81b390]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6e81b390]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6e81b390]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6e81b390]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3119ff77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3119ff77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3119ff77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3119ff77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21e82292]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21e82292]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@21e82292]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@21e82292]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@46cca12e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@46cca12e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@46cca12e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@46cca12e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@25328754]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@25328754]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@25328754]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@25328754]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5b2e36c2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5b2e36c2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@5b2e36c2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@5b2e36c2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@3bb27387]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@3bb27387]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@3bb27387]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@3bb27387]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1589" _type="ConsoleOutput" date="Sat Mar 19 19:17:18 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14929875" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6e81b390]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6e81b390]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6e81b390]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6e81b390]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3119ff77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3119ff77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3119ff77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3119ff77]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21e82292]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21e82292]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@21e82292]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@21e82292]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@46cca12e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@46cca12e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@46cca12e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@46cca12e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@25328754]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@25328754]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@25328754]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@25328754]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5b2e36c2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5b2e36c2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@5b2e36c2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@5b2e36c2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@3bb27387]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@3bb27387]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@3bb27387]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@3bb27387]¶Moving the stove:"), Diff(INSERT,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list."), Diff(EQUAL," ¶")]]]></diff>
  </Command>
  <Command __id="1590" _type="ConsoleOutput" date="Sat Mar 19 19:17:18 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14929938" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"Table"), Diff(EQUAL,".addPropertyChangeListener("), Diff(DELETE,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use"), Diff(INSERT," should be associated with"), Diff(EQUAL," annotation"), Diff(INSERT,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"interface java.beans."), Diff(EQUAL,"Property"), Diff(DELETE,"Change"), Diff(INSERT," "), Diff(EQUAL,"Listener)"), Diff(DELETE," for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Line"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="1591" _type="ConsoleOutput" date="Sat Mar 19 19:17:18 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14930478" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(INSERT," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Tab"), Diff(INSERT,"nAng"), Diff(EQUAL,"le.addPropertyChangeListener("), Diff(INSERT,"graphics.Angle,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with"), Diff(INSERT,"¶W*** Use"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"Property Listener)¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(INSERT,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1592" _type="ConsoleOutput" date="Sat Mar 19 19:17:18 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14930576" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1593" _type="ConsoleOutput" date="Sat Mar 19 19:17:19 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14930891" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W"), Diff(INSERT,"E"), Diff(EQUAL,"***"), Diff(DELETE," Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Could not find image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1594" _type="ConsoleOutput" date="Sat Mar 19 19:17:19 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14931423" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Patron List.1:.Patron.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W"), Diff(EQUAL,"***"), Diff(DELETE,"Could not find image file:"), Diff(INSERT," Value: null of Root.Patron List.1:.Patron.Plate not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1595" _type="ConsoleOutput" date="Sat Mar 19 19:17:19 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14931732" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Patron List.1:.Patron.Plate"), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶E***Could"), Diff(EQUAL," not "), Diff(INSERT,"f"), Diff(EQUAL,"in"), Diff(DELETE," range."), Diff(INSERT,"d image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1596" _type="ConsoleOutput" date="Sat Mar 19 19:17:20 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14931961" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W"), Diff(INSERT,"E"), Diff(EQUAL,"***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"Could not find image file:"), Diff(EQUAL,"¶E***Could not find image file:¶")]]]></diff>
  </Command>
  <Command __id="1597" _type="ConsoleOutput" date="Sat Mar 19 19:17:20 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14932096" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"E***Could not find image file:¶"), Diff(DELETE,"E***Could not find image file:¶")]]]></diff>
  </Command>
  <Command __id="1598" _type="ConsoleOutput" date="Sat Mar 19 19:17:20 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14932514" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.1:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W"), Diff(EQUAL,"***"), Diff(DELETE,"Could not find image file:"), Diff(INSERT," Value: null of Root.Chef List.1:.Chef.Plate not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1599" _type="ConsoleOutput" date="Sat Mar 19 19:17:21 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14933009" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.2:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Chef List."), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,":.Chef.Plate not in range.¶")]]]></diff>
  </Command>
  <Command __id="1600" _type="ConsoleOutput" date="Sat Mar 19 19:17:21 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14933406" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.3:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Chef List."), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,":.Chef.Plate not in range.¶")]]]></diff>
  </Command>
  <Command __id="1601" _type="ConsoleOutput" date="Sat Mar 19 19:17:22 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14933935" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.4:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Chef List."), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,":.Chef.Plate not in range.¶")]]]></diff>
  </Command>
  <Command __id="1602" _type="ConsoleOutput" date="Sat Mar 19 19:17:22 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14934297" type="ConsoleOutput">
    <outputString><![CDATA[W*** Assuming implicit pattern: No Pattern
  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer
E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@42ca06d
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Chef List.4:.Chef.Plate not in range."), Diff(INSERT,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@42ca06d"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1603" _type="ConsoleOutput" date="Sat Mar 19 19:17:22 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="14934626" type="ConsoleOutput">
    <outputString><![CDATA[W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@42ca06d"), Diff(INSERT,"Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1605" _type="PauseCommand" date="Sat Mar 19 19:17:40 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="14952564">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[17938]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1604" _type="ShellCommand" date="Sat Mar 19 19:17:40 EDT 2022" starttimestamp="1647716908162" timestamp="14952564" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1607" _type="PauseCommand" date="Sat Mar 19 19:17:45 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="14956989">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4425]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1606" _type="ShellCommand" date="Sat Mar 19 19:17:45 EDT 2022" starttimestamp="1647716908162" timestamp="14956989" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1609" _type="PauseCommand" date="Sat Mar 19 19:18:18 EDT 2022" range="30s-1m" starttimestamp="1647716908162" timestamp="14990776">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[33787]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1608" _type="ShellCommand" date="Sat Mar 19 19:18:18 EDT 2022" starttimestamp="1647716908162" timestamp="14990776" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1611" _type="PauseCommand" date="Sat Mar 19 19:18:31 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="15003763">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[12987]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1610" _type="MoveCaretCommand" caretOffset="815" date="Sat Mar 19 19:18:31 EDT 2022" docOffset="1765" starttimestamp="1647716908162" timestamp="15003763" />
  <Command __id="1612" _type="MoveCaretCommand" caretOffset="815" date="Sat Mar 19 19:18:31 EDT 2022" docOffset="1765" starttimestamp="1647716908162" timestamp="15003763" />
  <Command __id="1613" _type="SelectTextCommand" caretOffset="820" date="Sat Mar 19 19:18:32 EDT 2022" end="820" start="802" starttimestamp="1647716908162" timestamp="15003843" />
  <Command __id="1614" _type="SelectTextCommand" caretOffset="820" date="Sat Mar 19 19:18:32 EDT 2022" end="820" start="802" starttimestamp="1647716908162" timestamp="15003843" />
  <Command __id="1615" _type="SelectTextCommand" caretOffset="898" date="Sat Mar 19 19:18:32 EDT 2022" end="898" start="787" starttimestamp="1647716908162" timestamp="15003997" />
  <Command __id="1616" _type="SelectTextCommand" caretOffset="898" date="Sat Mar 19 19:18:32 EDT 2022" end="898" start="787" starttimestamp="1647716908162" timestamp="15003997" />
  <Command __id="1618" _type="PauseCommand" date="Sat Mar 19 19:18:36 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15008103">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4106]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="1617" _type="CopyCommand" date="Sat Mar 19 19:18:36 EDT 2022" starttimestamp="1647716908162" timestamp="15008103" />
  <Command __id="1619" _type="MoveCaretCommand" caretOffset="783" date="Sat Mar 19 19:18:37 EDT 2022" docOffset="1733" starttimestamp="1647716908162" timestamp="15009049" />
  <Command __id="1620" _type="MoveCaretCommand" caretOffset="783" date="Sat Mar 19 19:18:37 EDT 2022" docOffset="1733" starttimestamp="1647716908162" timestamp="15009049" />
  <Command __id="1622" _type="PauseCommand" date="Sat Mar 19 19:18:57 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="15029018">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[19969]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1621" _type="MoveCaretCommand" caretOffset="896" date="Sat Mar 19 19:18:57 EDT 2022" docOffset="1846" starttimestamp="1647716908162" timestamp="15029018" />
  <Command __id="1623" _type="MoveCaretCommand" caretOffset="896" date="Sat Mar 19 19:18:57 EDT 2022" docOffset="1846" starttimestamp="1647716908162" timestamp="15029018" />
  <DocumentChange __id="1518" _type="Insert" date="Sat Mar 19 19:16:53 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3087" docExpressionCount="337" docLength="3592" length="17" offset="2183" repeat="17" starttimestamp="1647716908162" timestamp="14905765" timestamp2="14906299">
    <text><![CDATA[AnArrayBasedScene]]></text>
  </DocumentChange>
  <Command __id="1625" _type="PauseCommand" date="Sat Mar 19 19:19:00 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15032345">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3327]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1626" _type="InsertStringCommand" date="Sat Mar 19 19:19:00 EDT 2022" starttimestamp="1647716908162" timestamp="15032395" timestamp2="15032395">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1627" _type="InsertStringCommand" date="Sat Mar 19 19:19:00 EDT 2022" starttimestamp="1647716908162" timestamp="15032395" timestamp2="15032395">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="1624" _type="Insert" date="Sat Mar 19 19:19:00 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3091" docExpressionCount="337" docLength="3596" length="4" offset="1846" starttimestamp="1647716908162" timestamp="15032345">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="1629" _type="PauseCommand" date="Sat Mar 19 19:19:02 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15034357">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1962]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1630" _type="PasteCommand" date="Sat Mar 19 19:19:02 EDT 2022" starttimestamp="1647716908162" timestamp="15034402" />
  <DocumentChange __id="1628" _type="Replace" date="Sat Mar 19 19:19:02 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3200" docExpressionCount="347" docLength="3705" endLine="65" insertionLength="111" int_docASTNodeCount="481" int_docActiveCodeLength="3089" int_docExpressionCount="337" int_docLength="3594" length="2" offset="1848" startLine="65" starttimestamp="1647716908162" timestamp="15034357">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		ObjectEditor.setMethodAttribute(AnArrayBasedScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);
]]></insertedText>
  </DocumentChange>
  <Command __id="1632" _type="PauseCommand" date="Sat Mar 19 19:19:04 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15036510">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2108]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1633" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:19:04 EDT 2022" starttimestamp="1647716908162" timestamp="15036576" />
  <Command __id="1634" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:19:04 EDT 2022" starttimestamp="1647716908162" timestamp="15036577" />
  <Command __id="1636" _type="PauseCommand" date="Sat Mar 19 19:19:09 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15041546">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4969]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1635" _type="MoveCaretCommand" caretOffset="989" date="Sat Mar 19 19:19:09 EDT 2022" docOffset="1939" starttimestamp="1647716908162" timestamp="15041546" />
  <Command __id="1637" _type="MoveCaretCommand" caretOffset="989" date="Sat Mar 19 19:19:09 EDT 2022" docOffset="1939" starttimestamp="1647716908162" timestamp="15041546" />
  <Command __id="1638" _type="SelectTextCommand" caretOffset="999" date="Sat Mar 19 19:19:10 EDT 2022" end="999" start="985" starttimestamp="1647716908162" timestamp="15041872" />
  <Command __id="1639" _type="SelectTextCommand" caretOffset="999" date="Sat Mar 19 19:19:10 EDT 2022" end="999" start="985" starttimestamp="1647716908162" timestamp="15041872" />
  <DocumentChange __id="1631" _type="Delete" date="Sat Mar 19 19:19:04 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3198" docExpressionCount="347" docLength="3703" endLine="66" length="2" offset="1957" startLine="65" starttimestamp="1647716908162" timestamp="15036510">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="1641" _type="PauseCommand" date="Sat Mar 19 19:19:11 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15043062">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1190]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="1640" _type="Replace" date="Sat Mar 19 19:19:11 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3185" docExpressionCount="347" docLength="3690" endLine="65" insertionLength="1" int_docASTNodeCount="493" int_docActiveCodeLength="3184" int_docExpressionCount="346" int_docLength="3689" length="14" offset="1935" startLine="65" starttimestamp="1647716908162" timestamp="15043062">
    <deletedText><![CDATA[TOOLBAR_METHOD]]></deletedText>
    <insertedText><![CDATA[L]]></insertedText>
  </DocumentChange>
  <Command __id="1642" _type="InsertStringCommand" date="Sat Mar 19 19:19:11 EDT 2022" starttimestamp="1647716908162" timestamp="15043087" timestamp2="15043087">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="1643" _type="InsertStringCommand" date="Sat Mar 19 19:19:11 EDT 2022" starttimestamp="1647716908162" timestamp="15043087" timestamp2="15043087">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="1645" _type="InsertStringCommand" date="Sat Mar 19 19:19:12 EDT 2022" starttimestamp="1647716908162" timestamp="15044003" timestamp2="15044003">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1646" _type="InsertStringCommand" date="Sat Mar 19 19:19:12 EDT 2022" starttimestamp="1647716908162" timestamp="15044004" timestamp2="15044004">
    <data><![CDATA[A]]></data>
  </Command>
  <DocumentChange __id="1644" _type="Insert" date="Sat Mar 19 19:19:12 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3186" docExpressionCount="347" docLength="3691" length="1" offset="1936" starttimestamp="1647716908162" timestamp="15043975">
    <text><![CDATA[A]]></text>
  </DocumentChange>
  <Command __id="1648" _type="PauseCommand" date="Sat Mar 19 19:19:14 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15046569">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2565]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1649" _type="InsertStringCommand" date="Sat Mar 19 19:19:14 EDT 2022" starttimestamp="1647716908162" timestamp="15046598" timestamp2="15046598">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="1650" _type="InsertStringCommand" date="Sat Mar 19 19:19:14 EDT 2022" starttimestamp="1647716908162" timestamp="15046599" timestamp2="15046599">
    <data><![CDATA[B]]></data>
  </Command>
  <DocumentChange __id="1647" _type="Insert" date="Sat Mar 19 19:19:14 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3187" docExpressionCount="347" docLength="3692" length="1" offset="1937" starttimestamp="1647716908162" timestamp="15046569">
    <text><![CDATA[B]]></text>
  </DocumentChange>
  <Command __id="1652" _type="PauseCommand" date="Sat Mar 19 19:19:16 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15048576">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1977]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1653" _type="InsertStringCommand" date="Sat Mar 19 19:19:16 EDT 2022" starttimestamp="1647716908162" timestamp="15048598" timestamp2="15048598">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1654" _type="InsertStringCommand" date="Sat Mar 19 19:19:16 EDT 2022" starttimestamp="1647716908162" timestamp="15048598" timestamp2="15048598">
    <data><![CDATA[E]]></data>
  </Command>
  <DocumentChange __id="1651" _type="Insert" date="Sat Mar 19 19:19:16 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3188" docExpressionCount="347" docLength="3693" length="1" offset="1938" starttimestamp="1647716908162" timestamp="15048576">
    <text><![CDATA[E]]></text>
  </DocumentChange>
  <Command __id="1656" _type="PauseCommand" date="Sat Mar 19 19:19:18 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15050604">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2005]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1657" _type="InsertStringCommand" date="Sat Mar 19 19:19:18 EDT 2022" starttimestamp="1647716908162" timestamp="15050637" timestamp2="15050637">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="1658" _type="InsertStringCommand" date="Sat Mar 19 19:19:18 EDT 2022" starttimestamp="1647716908162" timestamp="15050638" timestamp2="15050638">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="1660" _type="PauseCommand" date="Sat Mar 19 19:19:23 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15055113">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4475]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1659" _type="MoveCaretCommand" caretOffset="964" date="Sat Mar 19 19:19:23 EDT 2022" docOffset="1914" starttimestamp="1647716908162" timestamp="15055113" />
  <Command __id="1661" _type="MoveCaretCommand" caretOffset="964" date="Sat Mar 19 19:19:23 EDT 2022" docOffset="1914" starttimestamp="1647716908162" timestamp="15055114" />
  <Command __id="1662" _type="SelectTextCommand" caretOffset="967" date="Sat Mar 19 19:19:23 EDT 2022" end="967" start="958" starttimestamp="1647716908162" timestamp="15055370" />
  <Command __id="1663" _type="SelectTextCommand" caretOffset="967" date="Sat Mar 19 19:19:23 EDT 2022" end="967" start="958" starttimestamp="1647716908162" timestamp="15055370" />
  <Command __id="1665" _type="PauseCommand" date="Sat Mar 19 19:19:25 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15057342">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1972]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <DocumentChange __id="1655" _type="Insert" date="Sat Mar 19 19:19:18 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3189" docExpressionCount="347" docLength="3694" length="1" offset="1939" starttimestamp="1647716908162" timestamp="15050603">
    <text><![CDATA[L]]></text>
  </DocumentChange>
  <DocumentChange __id="1669" _type="Delete" date="Sat Mar 19 19:19:26 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3185" docExpressionCount="347" docLength="3690" endLine="65" length="4" offset="1942" startLine="65" starttimestamp="1647716908162" timestamp="15057980">
    <text><![CDATA[true]]></text>
  </DocumentChange>
  <Command __id="1664" _type="MoveCaretCommand" caretOffset="993" date="Sat Mar 19 19:19:25 EDT 2022" docOffset="1943" starttimestamp="1647716908162" timestamp="15057342" />
  <Command __id="1666" _type="MoveCaretCommand" caretOffset="993" date="Sat Mar 19 19:19:25 EDT 2022" docOffset="1943" starttimestamp="1647716908162" timestamp="15057343" />
  <Command __id="1667" _type="SelectTextCommand" caretOffset="996" date="Sat Mar 19 19:19:25 EDT 2022" end="996" start="992" starttimestamp="1647716908162" timestamp="15057508" />
  <Command __id="1668" _type="SelectTextCommand" caretOffset="996" date="Sat Mar 19 19:19:25 EDT 2022" end="996" start="992" starttimestamp="1647716908162" timestamp="15057508" />
  <Command __id="1670" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:19:26 EDT 2022" starttimestamp="1647716908162" timestamp="15058007" />
  <Command __id="1671" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:19:26 EDT 2022" starttimestamp="1647716908162" timestamp="15058007" />
  <Command __id="1673" _type="InsertStringCommand" date="Sat Mar 19 19:19:27 EDT 2022" starttimestamp="1647716908162" timestamp="15058934" timestamp2="15058934">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="1674" _type="InsertStringCommand" date="Sat Mar 19 19:19:27 EDT 2022" starttimestamp="1647716908162" timestamp="15058934" timestamp2="15058934">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="1677" _type="PauseCommand" date="Sat Mar 19 19:19:28 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15060335">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1401]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1676" _type="InsertStringCommand" date="Sat Mar 19 19:19:28 EDT 2022" starttimestamp="1647716908162" timestamp="15060335" timestamp2="15060335">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1678" _type="InsertStringCommand" date="Sat Mar 19 19:19:28 EDT 2022" starttimestamp="1647716908162" timestamp="15060335" timestamp2="15060335">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1680" _type="InsertStringCommand" date="Sat Mar 19 19:19:28 EDT 2022" starttimestamp="1647716908162" timestamp="15060619" timestamp2="15060619">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1681" _type="InsertStringCommand" date="Sat Mar 19 19:19:28 EDT 2022" starttimestamp="1647716908162" timestamp="15060620" timestamp2="15060620">
    <data><![CDATA[n]]></data>
  </Command>
  <DocumentChange __id="1672" _type="Insert" date="Sat Mar 19 19:19:27 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3189" docExpressionCount="347" docLength="3694" length="4" offset="1942" repeat="3" starttimestamp="1647716908162" timestamp="15058905" timestamp2="15060598">
    <text><![CDATA["In"]]></text>
  </DocumentChange>
  <Command __id="1683" _type="PauseCommand" date="Sat Mar 19 19:19:30 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15062750">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2130]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1684" _type="InsertStringCommand" date="Sat Mar 19 19:19:30 EDT 2022" starttimestamp="1647716908162" timestamp="15062769" timestamp2="15062769">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1685" _type="InsertStringCommand" date="Sat Mar 19 19:19:30 EDT 2022" starttimestamp="1647716908162" timestamp="15062770" timestamp2="15062770">
    <data><![CDATA[i]]></data>
  </Command>
  <DocumentChange __id="1682" _type="Insert" date="Sat Mar 19 19:19:30 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3190" docExpressionCount="347" docLength="3695" length="1" offset="1945" starttimestamp="1647716908162" timestamp="15062750">
    <text><![CDATA[i]]></text>
  </DocumentChange>
  <Command __id="1687" _type="PauseCommand" date="Sat Mar 19 19:19:32 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15064765">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1995]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1717" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:19:43 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15075676" type="Run" />
  <Command __id="1719" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:19:43 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15075677" type="Run" />
  <Command __id="1721" _type="PauseCommand" date="Sat Mar 19 19:19:45 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15077056">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1379]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1720" _type="ConsoleOutput" date="Sat Mar 19 19:19:45 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15077056" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE,"Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(INSERT," public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1722" _type="ShellCommand" date="Sat Mar 19 19:19:45 EDT 2022" starttimestamp="1647716908162" timestamp="15077410" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1723" _type="ConsoleOutput" date="Sat Mar 19 19:19:45 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15077720" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@6cb107fd
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@6cb107fd"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1724" _type="ConsoleOutput" date="Sat Mar 19 19:19:46 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15078025" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Patron List not in range.
W*** Value: null of Root.Chef List not in range.
W*** Value: null of Root.Buffer not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@6cb107fd"), Diff(INSERT,"Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1726" _type="PauseCommand" date="Sat Mar 19 19:19:53 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15085275">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7250]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1725" _type="ShellCommand" date="Sat Mar 19 19:19:53 EDT 2022" starttimestamp="1647716908162" timestamp="15085275" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1728" _type="PauseCommand" date="Sat Mar 19 19:19:55 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15087122">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1847]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1727" _type="MoveCaretCommand" caretOffset="846" date="Sat Mar 19 19:19:55 EDT 2022" docOffset="1796" starttimestamp="1647716908162" timestamp="15087122" />
  <Command __id="1729" _type="MoveCaretCommand" caretOffset="846" date="Sat Mar 19 19:19:55 EDT 2022" docOffset="1796" starttimestamp="1647716908162" timestamp="15087122" />
  <Command __id="1731" _type="PauseCommand" date="Sat Mar 19 19:20:37 EDT 2022" range="30s-1m" starttimestamp="1647716908162" timestamp="15129029">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[41907]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1730" _type="MoveCaretCommand" caretOffset="896" date="Sat Mar 19 19:20:37 EDT 2022" docOffset="1846" starttimestamp="1647716908162" timestamp="15129029" />
  <Command __id="1732" _type="MoveCaretCommand" caretOffset="896" date="Sat Mar 19 19:20:37 EDT 2022" docOffset="1846" starttimestamp="1647716908162" timestamp="15129029" />
  <Command __id="1734" _type="PauseCommand" date="Sat Mar 19 19:20:38 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15130514">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1485]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1733" _type="MoveCaretCommand" caretOffset="1006" date="Sat Mar 19 19:20:38 EDT 2022" docOffset="1956" starttimestamp="1647716908162" timestamp="15130514" />
  <Command __id="1735" _type="MoveCaretCommand" caretOffset="1006" date="Sat Mar 19 19:20:38 EDT 2022" docOffset="1956" starttimestamp="1647716908162" timestamp="15130514" />
  <Command __id="1736" _type="MoveCaretCommand" caretOffset="896" date="Sat Mar 19 19:20:39 EDT 2022" docOffset="1846" starttimestamp="1647716908162" timestamp="15131010" />
  <Command __id="1737" _type="MoveCaretCommand" caretOffset="896" date="Sat Mar 19 19:20:39 EDT 2022" docOffset="1846" starttimestamp="1647716908162" timestamp="15131010" />
  <Command __id="1738" _type="MoveCaretCommand" caretOffset="1006" date="Sat Mar 19 19:20:39 EDT 2022" docOffset="1956" starttimestamp="1647716908162" timestamp="15131479" />
  <Command __id="1739" _type="MoveCaretCommand" caretOffset="1006" date="Sat Mar 19 19:20:39 EDT 2022" docOffset="1956" starttimestamp="1647716908162" timestamp="15131479" />
  <Command __id="1740" _type="MoveCaretCommand" caretOffset="1006" date="Sat Mar 19 19:20:40 EDT 2022" docOffset="1956" starttimestamp="1647716908162" timestamp="15132289" />
  <Command __id="1741" _type="MoveCaretCommand" caretOffset="1006" date="Sat Mar 19 19:20:40 EDT 2022" docOffset="1956" starttimestamp="1647716908162" timestamp="15132289" />
  <Command __id="1743" _type="PauseCommand" date="Sat Mar 19 19:20:41 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15133714">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1425]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1742" _type="MoveCaretCommand" caretOffset="896" date="Sat Mar 19 19:20:41 EDT 2022" docOffset="1846" starttimestamp="1647716908162" timestamp="15133714" />
  <Command __id="1744" _type="MoveCaretCommand" caretOffset="896" date="Sat Mar 19 19:20:41 EDT 2022" docOffset="1846" starttimestamp="1647716908162" timestamp="15133714" />
  <Command __id="1746" _type="PauseCommand" date="Sat Mar 19 19:20:43 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15135399">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1685]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1745" _type="MoveCaretCommand" caretOffset="1006" date="Sat Mar 19 19:20:43 EDT 2022" docOffset="1956" starttimestamp="1647716908162" timestamp="15135399" />
  <Command __id="1747" _type="MoveCaretCommand" caretOffset="1006" date="Sat Mar 19 19:20:43 EDT 2022" docOffset="1956" starttimestamp="1647716908162" timestamp="15135399" />
  <Command __id="1749" _type="PauseCommand" date="Sat Mar 19 19:20:58 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="15150407">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[15008]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1748" _type="MoveCaretCommand" caretOffset="993" date="Sat Mar 19 19:20:58 EDT 2022" docOffset="1943" starttimestamp="1647716908162" timestamp="15150407" />
  <Command __id="1750" _type="MoveCaretCommand" caretOffset="993" date="Sat Mar 19 19:20:58 EDT 2022" docOffset="1943" starttimestamp="1647716908162" timestamp="15150408" />
  <Command __id="1751" _type="SelectTextCommand" caretOffset="1003" date="Sat Mar 19 19:20:58 EDT 2022" end="1003" start="993" starttimestamp="1647716908162" timestamp="15150535" />
  <Command __id="1752" _type="SelectTextCommand" caretOffset="1003" date="Sat Mar 19 19:20:58 EDT 2022" end="1003" start="993" starttimestamp="1647716908162" timestamp="15150535" />
  <Command __id="1753" _type="SelectTextCommand" caretOffset="1008" date="Sat Mar 19 19:20:58 EDT 2022" end="1008" start="898" starttimestamp="1647716908162" timestamp="15150696" />
  <Command __id="1754" _type="SelectTextCommand" caretOffset="1008" date="Sat Mar 19 19:20:58 EDT 2022" end="1008" start="898" starttimestamp="1647716908162" timestamp="15150697" />
  <Command __id="1755" _type="MoveCaretCommand" caretOffset="1072" date="Sat Mar 19 19:20:59 EDT 2022" docOffset="2022" starttimestamp="1647716908162" timestamp="15151424" />
  <Command __id="1756" _type="MoveCaretCommand" caretOffset="1072" date="Sat Mar 19 19:20:59 EDT 2022" docOffset="2022" starttimestamp="1647716908162" timestamp="15151424" />
  <Command __id="1757" _type="SelectTextCommand" caretOffset="1079" date="Sat Mar 19 19:20:59 EDT 2022" end="1079" start="1068" starttimestamp="1647716908162" timestamp="15151583" />
  <Command __id="1758" _type="SelectTextCommand" caretOffset="1079" date="Sat Mar 19 19:20:59 EDT 2022" end="1079" start="1068" starttimestamp="1647716908162" timestamp="15151583" />
  <Command __id="1759" _type="SelectTextCommand" caretOffset="1121" date="Sat Mar 19 19:20:59 EDT 2022" end="1121" start="1008" starttimestamp="1647716908162" timestamp="15151746" />
  <Command __id="1760" _type="SelectTextCommand" caretOffset="1121" date="Sat Mar 19 19:20:59 EDT 2022" end="1121" start="1008" starttimestamp="1647716908162" timestamp="15151746" />
  <Command __id="1762" _type="PauseCommand" date="Sat Mar 19 19:21:02 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15154520">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2773]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1761" _type="MoveCaretCommand" caretOffset="1119" date="Sat Mar 19 19:21:02 EDT 2022" docOffset="2069" starttimestamp="1647716908162" timestamp="15154519" />
  <Command __id="1763" _type="MoveCaretCommand" caretOffset="1119" date="Sat Mar 19 19:21:02 EDT 2022" docOffset="2069" starttimestamp="1647716908162" timestamp="15154520" />
  <Command __id="1765" _type="InsertStringCommand" date="Sat Mar 19 19:21:03 EDT 2022" starttimestamp="1647716908162" timestamp="15155075" timestamp2="15155075">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1766" _type="InsertStringCommand" date="Sat Mar 19 19:21:03 EDT 2022" starttimestamp="1647716908162" timestamp="15155076" timestamp2="15155076">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1768" _type="PasteCommand" date="Sat Mar 19 19:21:04 EDT 2022" starttimestamp="1647716908162" timestamp="15155883" />
  <Command __id="1770" _type="PauseCommand" date="Sat Mar 19 19:21:05 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15157441">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1558]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1769" _type="MoveCaretCommand" caretOffset="1232" date="Sat Mar 19 19:21:05 EDT 2022" docOffset="2182" starttimestamp="1647716908162" timestamp="15157441" />
  <Command __id="1771" _type="MoveCaretCommand" caretOffset="1232" date="Sat Mar 19 19:21:05 EDT 2022" docOffset="2182" starttimestamp="1647716908162" timestamp="15157441" />
  <Command __id="1772" _type="SelectTextCommand" caretOffset="1241" date="Sat Mar 19 19:21:05 EDT 2022" end="1241" start="1232" starttimestamp="1647716908162" timestamp="15157574" />
  <Command __id="1773" _type="SelectTextCommand" caretOffset="1241" date="Sat Mar 19 19:21:05 EDT 2022" end="1241" start="1232" starttimestamp="1647716908162" timestamp="15157574" />
  <Command __id="1775" _type="PauseCommand" date="Sat Mar 19 19:21:06 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15158742">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1168]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1774" _type="MoveCaretCommand" caretOffset="1184" date="Sat Mar 19 19:21:06 EDT 2022" docOffset="2134" starttimestamp="1647716908162" timestamp="15158742" />
  <Command __id="1776" _type="MoveCaretCommand" caretOffset="1184" date="Sat Mar 19 19:21:06 EDT 2022" docOffset="2134" starttimestamp="1647716908162" timestamp="15158743" />
  <Command __id="1777" _type="SelectTextCommand" caretOffset="1190" date="Sat Mar 19 19:21:07 EDT 2022" end="1190" start="1181" starttimestamp="1647716908162" timestamp="15159139" />
  <Command __id="1778" _type="SelectTextCommand" caretOffset="1190" date="Sat Mar 19 19:21:07 EDT 2022" end="1190" start="1181" starttimestamp="1647716908162" timestamp="15159139" />
  <DocumentChange __id="1686" _type="Insert" date="Sat Mar 19 19:19:32 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3197" docExpressionCount="347" docLength="3702" length="7" offset="1946" repeat="7" starttimestamp="1647716908162" timestamp="15064765" timestamp2="15066023">
    <text><![CDATA[t Scene]]></text>
  </DocumentChange>
  <DocumentChange __id="1764" _type="Insert" date="Sat Mar 19 19:21:03 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3201" docExpressionCount="347" docLength="3706" length="4" offset="2069" starttimestamp="1647716908162" timestamp="15155021">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="1767" _type="Replace" date="Sat Mar 19 19:21:04 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3310" docExpressionCount="357" docLength="3815" endLine="67" insertionLength="111" int_docASTNodeCount="493" int_docActiveCodeLength="3199" int_docExpressionCount="347" int_docLength="3704" length="2" offset="2071" startLine="67" starttimestamp="1647716908162" timestamp="15155854">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		ObjectEditor.setMethodAttribute(AnArrayBasedScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);
]]></insertedText>
  </DocumentChange>
  <Command __id="1780" _type="PauseCommand" date="Sat Mar 19 19:21:08 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15160667">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1528]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1781" _type="InsertStringCommand" date="Sat Mar 19 19:21:08 EDT 2022" starttimestamp="1647716908162" timestamp="15160707" timestamp2="15160707">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1782" _type="InsertStringCommand" date="Sat Mar 19 19:21:08 EDT 2022" starttimestamp="1647716908162" timestamp="15160707" timestamp2="15160707">
    <data><![CDATA[c]]></data>
  </Command>
  <DocumentChange __id="1779" _type="Replace" date="Sat Mar 19 19:21:08 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3302" docExpressionCount="357" docLength="3807" endLine="67" insertionLength="1" int_docASTNodeCount="505" int_docActiveCodeLength="3301" int_docExpressionCount="357" int_docLength="3806" length="9" offset="2131" startLine="67" starttimestamp="1647716908162" timestamp="15160667">
    <deletedText><![CDATA[initScene]]></deletedText>
    <insertedText><![CDATA[c]]></insertedText>
  </DocumentChange>
  <Command __id="1784" _type="PauseCommand" date="Sat Mar 19 19:21:10 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15162698">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1990]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1785" _type="InsertStringCommand" date="Sat Mar 19 19:21:10 EDT 2022" starttimestamp="1647716908162" timestamp="15162722" timestamp2="15162722">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1786" _type="InsertStringCommand" date="Sat Mar 19 19:21:10 EDT 2022" starttimestamp="1647716908162" timestamp="15162722" timestamp2="15162722">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1788" _type="InsertStringCommand" date="Sat Mar 19 19:21:10 EDT 2022" starttimestamp="1647716908162" timestamp="15162760" timestamp2="15162760">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1789" _type="InsertStringCommand" date="Sat Mar 19 19:21:10 EDT 2022" starttimestamp="1647716908162" timestamp="15162760" timestamp2="15162760">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1791" _type="InsertStringCommand" date="Sat Mar 19 19:21:10 EDT 2022" starttimestamp="1647716908162" timestamp="15162791" timestamp2="15162791">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1792" _type="InsertStringCommand" date="Sat Mar 19 19:21:10 EDT 2022" starttimestamp="1647716908162" timestamp="15162792" timestamp2="15162792">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1794" _type="InsertStringCommand" date="Sat Mar 19 19:21:10 EDT 2022" starttimestamp="1647716908162" timestamp="15162826" timestamp2="15162826">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1795" _type="InsertStringCommand" date="Sat Mar 19 19:21:10 EDT 2022" starttimestamp="1647716908162" timestamp="15162826" timestamp2="15162826">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1797" _type="InsertStringCommand" date="Sat Mar 19 19:21:11 EDT 2022" starttimestamp="1647716908162" timestamp="15162854" timestamp2="15162854">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1798" _type="InsertStringCommand" date="Sat Mar 19 19:21:11 EDT 2022" starttimestamp="1647716908162" timestamp="15162855" timestamp2="15162855">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1800" _type="InsertStringCommand" date="Sat Mar 19 19:21:11 EDT 2022" starttimestamp="1647716908162" timestamp="15162899" timestamp2="15162899">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1801" _type="InsertStringCommand" date="Sat Mar 19 19:21:11 EDT 2022" starttimestamp="1647716908162" timestamp="15162899" timestamp2="15162899">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1803" _type="InsertStringCommand" date="Sat Mar 19 19:21:11 EDT 2022" starttimestamp="1647716908162" timestamp="15162944" timestamp2="15162944">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1804" _type="InsertStringCommand" date="Sat Mar 19 19:21:11 EDT 2022" starttimestamp="1647716908162" timestamp="15162944" timestamp2="15162944">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1806" _type="InsertStringCommand" date="Sat Mar 19 19:21:11 EDT 2022" starttimestamp="1647716908162" timestamp="15162974" timestamp2="15162974">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1807" _type="InsertStringCommand" date="Sat Mar 19 19:21:11 EDT 2022" starttimestamp="1647716908162" timestamp="15162974" timestamp2="15162974">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1809" _type="InsertStringCommand" date="Sat Mar 19 19:21:11 EDT 2022" starttimestamp="1647716908162" timestamp="15163017" timestamp2="15163017">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1810" _type="InsertStringCommand" date="Sat Mar 19 19:21:11 EDT 2022" starttimestamp="1647716908162" timestamp="15163017" timestamp2="15163017">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1812" _type="InsertStringCommand" date="Sat Mar 19 19:21:11 EDT 2022" starttimestamp="1647716908162" timestamp="15163051" timestamp2="15163051">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1813" _type="InsertStringCommand" date="Sat Mar 19 19:21:11 EDT 2022" starttimestamp="1647716908162" timestamp="15163051" timestamp2="15163051">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1815" _type="PauseCommand" date="Sat Mar 19 19:21:13 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15165446">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2395]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1814" _type="MoveCaretCommand" caretOffset="1214" date="Sat Mar 19 19:21:13 EDT 2022" docOffset="2164" starttimestamp="1647716908162" timestamp="15165446" />
  <Command __id="1816" _type="MoveCaretCommand" caretOffset="1214" date="Sat Mar 19 19:21:13 EDT 2022" docOffset="2164" starttimestamp="1647716908162" timestamp="15165447" />
  <Command __id="1817" _type="SelectTextCommand" caretOffset="1224" date="Sat Mar 19 19:21:13 EDT 2022" end="1224" start="1210" starttimestamp="1647716908162" timestamp="15165611" />
  <Command __id="1818" _type="SelectTextCommand" caretOffset="1224" date="Sat Mar 19 19:21:13 EDT 2022" end="1224" start="1210" starttimestamp="1647716908162" timestamp="15165611" />
  <DocumentChange __id="1783" _type="Insert" date="Sat Mar 19 19:21:10 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3312" docExpressionCount="357" docLength="3817" length="10" offset="2132" repeat="10" starttimestamp="1647716908162" timestamp="15162697" timestamp2="15163020">
    <text><![CDATA[hefToTable]]></text>
  </DocumentChange>
  <Command __id="1820" _type="PauseCommand" date="Sat Mar 19 19:21:16 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15168071">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2460]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1821" _type="InsertStringCommand" date="Sat Mar 19 19:21:16 EDT 2022" starttimestamp="1647716908162" timestamp="15168110" timestamp2="15168110">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="1822" _type="InsertStringCommand" date="Sat Mar 19 19:21:16 EDT 2022" starttimestamp="1647716908162" timestamp="15168110" timestamp2="15168110">
    <data><![CDATA[L]]></data>
  </Command>
  <DocumentChange __id="1819" _type="Replace" date="Sat Mar 19 19:21:16 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3299" docExpressionCount="357" docLength="3804" endLine="67" insertionLength="1" int_docASTNodeCount="505" int_docActiveCodeLength="3298" int_docExpressionCount="356" int_docLength="3803" length="14" offset="2160" startLine="67" starttimestamp="1647716908162" timestamp="15168071">
    <deletedText><![CDATA[TOOLBAR_METHOD]]></deletedText>
    <insertedText><![CDATA[L]]></insertedText>
  </DocumentChange>
  <Command __id="1824" _type="PauseCommand" date="Sat Mar 19 19:21:18 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15170087">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1977]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1825" _type="InsertStringCommand" date="Sat Mar 19 19:21:18 EDT 2022" starttimestamp="1647716908162" timestamp="15170109" timestamp2="15170109">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1826" _type="InsertStringCommand" date="Sat Mar 19 19:21:18 EDT 2022" starttimestamp="1647716908162" timestamp="15170109" timestamp2="15170109">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1829" _type="PauseCommand" date="Sat Mar 19 19:21:19 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15171134">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1025]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1828" _type="InsertStringCommand" date="Sat Mar 19 19:21:19 EDT 2022" starttimestamp="1647716908162" timestamp="15171134" timestamp2="15171134">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="1830" _type="InsertStringCommand" date="Sat Mar 19 19:21:19 EDT 2022" starttimestamp="1647716908162" timestamp="15171134" timestamp2="15171134">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="1832" _type="InsertStringCommand" date="Sat Mar 19 19:21:19 EDT 2022" starttimestamp="1647716908162" timestamp="15171165" timestamp2="15171165">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1833" _type="InsertStringCommand" date="Sat Mar 19 19:21:19 EDT 2022" starttimestamp="1647716908162" timestamp="15171165" timestamp2="15171165">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="1835" _type="InsertStringCommand" date="Sat Mar 19 19:21:19 EDT 2022" starttimestamp="1647716908162" timestamp="15171200" timestamp2="15171200">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="1836" _type="InsertStringCommand" date="Sat Mar 19 19:21:19 EDT 2022" starttimestamp="1647716908162" timestamp="15171200" timestamp2="15171200">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="1838" _type="PauseCommand" date="Sat Mar 19 19:21:20 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15172795">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1595]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1837" _type="MoveCaretCommand" caretOffset="1219" date="Sat Mar 19 19:21:20 EDT 2022" docOffset="2169" starttimestamp="1647716908162" timestamp="15172795" />
  <Command __id="1839" _type="MoveCaretCommand" caretOffset="1219" date="Sat Mar 19 19:21:20 EDT 2022" docOffset="2169" starttimestamp="1647716908162" timestamp="15172796" />
  <Command __id="1840" _type="SelectTextCommand" caretOffset="1221" date="Sat Mar 19 19:21:21 EDT 2022" end="1221" start="1217" starttimestamp="1647716908162" timestamp="15172927" />
  <Command __id="1841" _type="SelectTextCommand" caretOffset="1221" date="Sat Mar 19 19:21:21 EDT 2022" end="1221" start="1217" starttimestamp="1647716908162" timestamp="15172927" />
  <DocumentChange __id="1823" _type="Insert" date="Sat Mar 19 19:21:18 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3303" docExpressionCount="357" docLength="3808" length="4" offset="2161" repeat="4" starttimestamp="1647716908162" timestamp="15170087" timestamp2="15171167">
    <text><![CDATA[ABEL]]></text>
  </DocumentChange>
  <Command __id="1843" _type="PauseCommand" date="Sat Mar 19 19:21:23 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15175345">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2418]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1844" _type="InsertStringCommand" date="Sat Mar 19 19:21:23 EDT 2022" starttimestamp="1647716908162" timestamp="15175380" timestamp2="15175380">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="1845" _type="InsertStringCommand" date="Sat Mar 19 19:21:23 EDT 2022" starttimestamp="1647716908162" timestamp="15175380" timestamp2="15175380">
    <data><![CDATA["]]></data>
  </Command>
  <DocumentChange __id="1842" _type="Replace" date="Sat Mar 19 19:21:23 EDT 2022" docASTNodeCount="358" docActiveCodeLength="3300" docExpressionCount="254" docLength="3805" endLine="67" insertionLength="1" int_docASTNodeCount="505" int_docActiveCodeLength="3299" int_docExpressionCount="357" int_docLength="3804" length="4" offset="2167" startLine="67" starttimestamp="1647716908162" timestamp="15175345">
    <deletedText><![CDATA[true]]></deletedText>
    <insertedText><![CDATA["]]></insertedText>
  </DocumentChange>
  <Command __id="1847" _type="PauseCommand" date="Sat Mar 19 19:21:26 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15178386">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3006]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1848" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178418" timestamp2="15178418">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1849" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178418" timestamp2="15178418">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="1851" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178450" timestamp2="15178450">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1852" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178450" timestamp2="15178450">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1854" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178485" timestamp2="15178485">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1855" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178485" timestamp2="15178485">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1857" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178515" timestamp2="15178515">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1858" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178515" timestamp2="15178515">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1860" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178543" timestamp2="15178543">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1861" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178543" timestamp2="15178543">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1863" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178577" timestamp2="15178577">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1864" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178578" timestamp2="15178578">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1866" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178596" timestamp2="15178596">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1867" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178596" timestamp2="15178596">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1869" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178637" timestamp2="15178637">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1870" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178637" timestamp2="15178637">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1872" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178667" timestamp2="15178667">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1873" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178667" timestamp2="15178667">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1875" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178694" timestamp2="15178694">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1876" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178694" timestamp2="15178694">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1878" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178732" timestamp2="15178732">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1879" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178732" timestamp2="15178732">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1881" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178761" timestamp2="15178761">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1882" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178761" timestamp2="15178761">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1884" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178790" timestamp2="15178790">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1885" _type="InsertStringCommand" date="Sat Mar 19 19:21:26 EDT 2022" starttimestamp="1647716908162" timestamp="15178790" timestamp2="15178790">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1887" _type="InsertStringCommand" date="Sat Mar 19 19:21:27 EDT 2022" starttimestamp="1647716908162" timestamp="15178839" timestamp2="15178839">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1888" _type="InsertStringCommand" date="Sat Mar 19 19:21:27 EDT 2022" starttimestamp="1647716908162" timestamp="15178839" timestamp2="15178839">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1890" _type="InsertStringCommand" date="Sat Mar 19 19:21:27 EDT 2022" starttimestamp="1647716908162" timestamp="15178893" timestamp2="15178893">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1891" _type="InsertStringCommand" date="Sat Mar 19 19:21:27 EDT 2022" starttimestamp="1647716908162" timestamp="15178893" timestamp2="15178893">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1893" _type="InsertStringCommand" date="Sat Mar 19 19:21:27 EDT 2022" starttimestamp="1647716908162" timestamp="15178944" timestamp2="15178944">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1894" _type="InsertStringCommand" date="Sat Mar 19 19:21:27 EDT 2022" starttimestamp="1647716908162" timestamp="15178944" timestamp2="15178944">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1896" _type="InsertStringCommand" date="Sat Mar 19 19:21:27 EDT 2022" starttimestamp="1647716908162" timestamp="15178973" timestamp2="15178973">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1897" _type="InsertStringCommand" date="Sat Mar 19 19:21:27 EDT 2022" starttimestamp="1647716908162" timestamp="15178973" timestamp2="15178973">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="1846" _type="Insert" date="Sat Mar 19 19:21:26 EDT 2022" docASTNodeCount="358" docActiveCodeLength="3317" docExpressionCount="254" docLength="3822" length="17" offset="2168" repeat="17" starttimestamp="1647716908162" timestamp="15178386" timestamp2="15178952">
    <text><![CDATA[Chef to the table]]></text>
  </DocumentChange>
  <Command __id="1899" _type="PauseCommand" date="Sat Mar 19 19:21:29 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15181104">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2131]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1900" _type="InsertStringCommand" date="Sat Mar 19 19:21:29 EDT 2022" starttimestamp="1647716908162" timestamp="15181160" timestamp2="15181160">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="1901" _type="InsertStringCommand" date="Sat Mar 19 19:21:29 EDT 2022" starttimestamp="1647716908162" timestamp="15181161" timestamp2="15181161">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="1903" _type="PauseCommand" date="Sat Mar 19 19:21:30 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15182333">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1172]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1902" _type="MoveCaretCommand" caretOffset="1229" date="Sat Mar 19 19:21:30 EDT 2022" docOffset="2179" starttimestamp="1647716908162" timestamp="15182333" />
  <Command __id="1904" _type="MoveCaretCommand" caretOffset="1229" date="Sat Mar 19 19:21:30 EDT 2022" docOffset="2179" starttimestamp="1647716908162" timestamp="15182334" />
  <Command __id="1906" _type="PauseCommand" date="Sat Mar 19 19:21:33 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15184866">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2532]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1911" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:21:38 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15190111" type="Run" />
  <Command __id="1913" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:21:38 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15190111" type="Run" />
  <Command __id="1915" _type="PauseCommand" date="Sat Mar 19 19:21:39 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15191378">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1267]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1914" _type="ConsoleOutput" date="Sat Mar 19 19:21:39 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15191378" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(INSERT,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1916" _type="ShellCommand" date="Sat Mar 19 19:21:39 EDT 2022" starttimestamp="1647716908162" timestamp="15191768" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1917" _type="ConsoleOutput" date="Sat Mar 19 19:21:40 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15192075" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@6cb107fd
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@6cb107fd"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1918" _type="ConsoleOutput" date="Sat Mar 19 19:21:40 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15192357" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Patron List not in range.
W*** Value: null of Root.Chef List not in range.
W*** Value: null of Root.Buffer not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@6cb107fd"), Diff(INSERT,"Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1920" _type="PauseCommand" date="Sat Mar 19 19:21:46 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15198193">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5836]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1919" _type="ConsoleOutput" date="Sat Mar 19 19:21:46 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15198193" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5edbf4ab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5edbf4ab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5edbf4ab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5edbf4ab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4e89be95]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4e89be95]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4e89be95]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4e89be95]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3710689f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3710689f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3710689f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3710689f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5bc5c59]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5bc5c59]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5bc5c59]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5bc5c59]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4438ee9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4438ee9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4438ee9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4438ee9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@73df5e2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@73df5e2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@73df5e2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@73df5e2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@33dd210a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@33dd210a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@33dd210a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@33dd210a]
Moving the stove: 

W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5edbf4ab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5edbf4ab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5edbf4ab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5edbf4ab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4e89be95]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4e89be95]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4e89be95]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4e89be95]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3710689f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3710689f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3710689f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3710689f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5bc5c59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5bc5c59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5bc5c59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5bc5c59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4438ee9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4438ee9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4438ee9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4438ee9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@73df5e2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@73df5e2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@73df5e2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@73df5e2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@33dd210a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@33dd210a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@33dd210a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@33dd210a]¶Moving the stove: ¶¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1921" _type="ConsoleOutput" date="Sat Mar 19 19:21:46 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15198304" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5edbf4ab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5edbf4ab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5edbf4ab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5edbf4ab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4e89be95]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4e89be95]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4e89be95]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4e89be95]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3710689f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3710689f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3710689f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3710689f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5bc5c59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5bc5c59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5bc5c59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5bc5c59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4438ee9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4438ee9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4438ee9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4438ee9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@73df5e2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@73df5e2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@73df5e2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@73df5e2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@33dd210a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@33dd210a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@33dd210a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@33dd210a]¶Moving the stove: ¶¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)"), Diff(INSERT,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1922" _type="ConsoleOutput" date="Sat Mar 19 19:21:46 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15198365" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Table"), Diff(EQUAL,".addPropertyChangeListener("), Diff(DELETE,"graphics.Avatar,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE,"¶W*** Use"), Diff(INSERT," should be associated with"), Diff(EQUAL," annotation"), Diff(INSERT,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"interface java.beans."), Diff(EQUAL,"Property"), Diff(DELETE,"Change"), Diff(INSERT," "), Diff(EQUAL,"Listener)"), Diff(DELETE," for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Line"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="1923" _type="ConsoleOutput" date="Sat Mar 19 19:21:47 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15198983" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(INSERT," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Tab"), Diff(INSERT,"nAng"), Diff(EQUAL,"le.addPropertyChangeListener("), Diff(INSERT,"graphics.Angle,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with"), Diff(INSERT,"¶W*** Use"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"Property Listener)¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(INSERT,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1924" _type="ConsoleOutput" date="Sat Mar 19 19:21:47 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15199065" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1925" _type="ConsoleOutput" date="Sat Mar 19 19:21:47 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15199556" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W"), Diff(INSERT,"E"), Diff(EQUAL,"***"), Diff(DELETE," Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Could not find image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1926" _type="ConsoleOutput" date="Sat Mar 19 19:21:48 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15200235" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Patron List.1:.Patron.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W"), Diff(EQUAL,"***"), Diff(DELETE,"Could not find image file:"), Diff(INSERT," Value: null of Root.Patron List.1:.Patron.Plate not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1927" _type="ConsoleOutput" date="Sat Mar 19 19:21:48 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15200498" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Patron List.1:.Patron.Plate not in range."), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1928" _type="ConsoleOutput" date="Sat Mar 19 19:21:48 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15200591" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W"), Diff(INSERT,"E"), Diff(EQUAL,"***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"Could not find image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1929" _type="ConsoleOutput" date="Sat Mar 19 19:21:48 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15200732" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"E***Could not find image file:¶")]]]></diff>
  </Command>
  <Command __id="1930" _type="ConsoleOutput" date="Sat Mar 19 19:21:48 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15200833" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"E***Could not find image file:¶")]]]></diff>
  </Command>
  <Command __id="1931" _type="ConsoleOutput" date="Sat Mar 19 19:21:49 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15200949" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"E***Could not find image file:¶")]]]></diff>
  </Command>
  <Command __id="1932" _type="ConsoleOutput" date="Sat Mar 19 19:21:49 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15201291" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.1:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W"), Diff(EQUAL,"***"), Diff(DELETE,"Could not find image file:"), Diff(INSERT," Value: null of Root.Chef List.1:.Chef.Plate not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1933" _type="ConsoleOutput" date="Sat Mar 19 19:21:50 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15201972" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.2:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Chef List."), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,":.Chef.Plate not in range.¶")]]]></diff>
  </Command>
  <Command __id="1934" _type="ConsoleOutput" date="Sat Mar 19 19:21:50 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15202538" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.3:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Chef List."), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,":.Chef.Plate not in range.¶")]]]></diff>
  </Command>
  <Command __id="1935" _type="ConsoleOutput" date="Sat Mar 19 19:21:51 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15203123" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Chef List.4:.Chef.Plate not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Root.Chef List."), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,":.Chef.Plate not in range.¶")]]]></diff>
  </Command>
  <Command __id="1936" _type="ConsoleOutput" date="Sat Mar 19 19:21:51 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15203448" type="ConsoleOutput">
    <outputString><![CDATA[W*** Assuming implicit pattern: No Pattern
  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer
E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@1340ad50
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Chef List.4:.Chef.Plate not in range."), Diff(INSERT,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@1340ad50"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1937" _type="ConsoleOutput" date="Sat Mar 19 19:21:51 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15203705" type="ConsoleOutput">
    <outputString><![CDATA[W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@1340ad50"), Diff(INSERT,"Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1939" _type="PauseCommand" date="Sat Mar 19 19:22:11 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="15223524">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[19819]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1938" _type="ShellCommand" date="Sat Mar 19 19:22:11 EDT 2022" starttimestamp="1647716908162" timestamp="15223524" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1941" _type="PauseCommand" date="Sat Mar 19 19:22:13 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15225782">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2258]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1940" _type="ShellCommand" date="Sat Mar 19 19:22:13 EDT 2022" starttimestamp="1647716908162" timestamp="15225782" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1943" _type="PauseCommand" date="Sat Mar 19 19:23:00 EDT 2022" range="30s-1m" starttimestamp="1647716908162" timestamp="15272160">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[46378]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1942" _type="ShellCommand" date="Sat Mar 19 19:23:00 EDT 2022" starttimestamp="1647716908162" timestamp="15272160" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1945" _type="PauseCommand" date="Sat Mar 19 19:23:06 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15278068">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5908]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1944" _type="ShellCommand" date="Sat Mar 19 19:23:06 EDT 2022" starttimestamp="1647716908162" timestamp="15278068" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1947" _type="PauseCommand" date="Sat Mar 19 19:23:17 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="15288922">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10854]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1946" _type="ShellCommand" date="Sat Mar 19 19:23:17 EDT 2022" starttimestamp="1647716908162" timestamp="15288922" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1949" _type="PauseCommand" date="Sat Mar 19 19:23:22 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15293959">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5037]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1948" _type="ShellCommand" date="Sat Mar 19 19:23:22 EDT 2022" starttimestamp="1647716908162" timestamp="15293959" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1951" _type="PauseCommand" date="Sat Mar 19 19:23:24 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15296495">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2536]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1950" _type="ExceptionCommand" date="Sat Mar 19 19:23:24 EDT 2022" starttimestamp="1647716908162" timestamp="15296495" type="Exception">
    <exceptionString><![CDATA[W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextOut of object: graphics.ABoundedBuffer@1340ad50. Ignoring notification.
0
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@32b05537]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@32b05537]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@32b05537]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@32b05537]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6a554382]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6a554382]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6a554382]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6a554382]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@13820a6a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@13820a6a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@13820a6a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@13820a6a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6ca81f5c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6ca81f5c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@6ca81f5c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@6ca81f5c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4792084c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4792084c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4792084c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4792084c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@22945036]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@22945036]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@22945036]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@22945036]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@6c7bc8b8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@6c7bc8b8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@6c7bc8b8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@6c7bc8b8]
java.lang.NullPointerException: Cannot invoke "shapes.RemoteImage.setImageFileName(String)" because "shape" is null
	at bus.uigen.oadapters.ImageShapeAdapter.setImageFileName(ImageShapeAdapter.java:51)
	at bus.uigen.oadapters.ImageShapeAdapter.respondToPropertyChange(ImageShapeAdapter.java:71)
	at bus.uigen.oadapters.ShapeObjectAdapter.subPropertyChange(ShapeObjectAdapter.java:1151)
	at bus.uigen.oadapters.ObjectAdapter.propertyChange(ObjectAdapter.java:4330)
	at graphics.APropertyListenerSupport.notifyAllListeners(APropertyListenerSupport.java:21)
	at graphics.APlate.setImageFileName(APlate.java:53)
	at graphics.AnAvatar.dropPlate(AnAvatar.java:158)
	at graphics.AnArrayBasedScene.chefToTable(AnArrayBasedScene.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1953" _type="PauseCommand" date="Sat Mar 19 19:23:43 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="15315013">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[18517]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1952" _type="ShellCommand" date="Sat Mar 19 19:23:43 EDT 2022" starttimestamp="1647716908162" timestamp="15315012" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1898" _type="Insert" date="Sat Mar 19 19:21:29 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3318" docExpressionCount="357" docLength="3823" length="1" offset="2185" starttimestamp="1647716908162" timestamp="15181104">
    <text><![CDATA["]]></text>
  </DocumentChange>
  <Command __id="1955" _type="PauseCommand" date="Sat Mar 19 19:24:04 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="15335897">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[20885]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1956" _type="MoveCaretCommand" caretOffset="123" date="Sat Mar 19 19:24:04 EDT 2022" docOffset="123" starttimestamp="1647716908162" timestamp="15336149" />
  <Command __id="1958" _type="PauseCommand" date="Sat Mar 19 19:24:10 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15342534">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6385]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1957" _type="MoveCaretCommand" caretOffset="784" date="Sat Mar 19 19:24:10 EDT 2022" docOffset="784" starttimestamp="1647716908162" timestamp="15342534" />
  <Command __id="1959" _type="MoveCaretCommand" caretOffset="784" date="Sat Mar 19 19:24:10 EDT 2022" docOffset="784" starttimestamp="1647716908162" timestamp="15342534" />
  <Command __id="1954" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:24:04 EDT 2022" docASTNodeCount="851" docActiveCodeLength="4614" docExpressionCount="578" docLength="4614" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15335897">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AnAvatar.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶import java.beans.PropertyChangeListener;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"Arms",¶	"Legs",¶	"Neck",¶	"Torso",¶	"head",¶	"text",¶	"plate"¶})¶@EditablePropertyNames({¶	"Arms",¶	"Legs",¶	"Neck",¶	"Torso",¶	"head",¶	"text"¶})¶public class AnAvatar implements Avatar {¶	Angle Legs;¶	Angle Arms;¶	Line Torso;¶	Line Neck;¶	StringShape text;¶	Head head;¶	String headImage = "";¶	String plateImage = "";¶	Plate plate;¶	¶	int INIT_X = 50;¶	int INIT_Y = 50;¶	int INIT_Radius = 20;¶	int INIT_Neck = 10;¶	int INIT_Head = 99;¶¶	¶	public AnAvatar() {¶		Legs = new AnAngle();¶		Legs.moveX(INIT_X);¶		Legs.moveY(INIT_Y+40);¶		Arms = new AnAngle();¶		Arms.moveX(INIT_X);¶		Arms.moveY(INIT_Y);¶		Torso = new ALine();¶		Torso.setX(INIT_X);¶		Torso.setY(INIT_X);¶		Neck = new ALine();¶		Neck.setHeight(10);¶		Neck.setWidth(0);¶		Neck.setRadius(INIT_Radius);¶		Neck.setX(INIT_X);¶		Neck.setY(INIT_Y-INIT_Neck);¶		head = new AHead();¶		text = new AStringShape();¶		text.setText("");¶		head.setImageFileName(headImage);¶		head.setX(13);¶		head.setY(INIT_Y-INIT_Head);¶		head.setHeight(90);¶		head.setWidth(80);¶		plate = new APlate();¶		plate.setImageFileName(plateImage);¶		plate.setHeight(0);¶		plate.setWidth(0);¶		plate.setX(INIT_X-20);¶		plate.setY(INIT_Y+30);¶		plate.setZIndex(60000);¶	}¶	¶	@Override¶	public Plate getPlate() {¶		return plate;¶	}¶¶	@Override¶	public void setPlate(Plate newPlate) {¶		plate = newPlate;¶	}¶¶	@Override¶	public Angle getArms() {¶		return Arms;¶	}¶	¶	@Override¶	public void setArms(Angle NewArms) {¶		Arms = NewArms;¶	}¶¶¶	@Override¶	public Angle getLegs() {¶		return Legs;¶	}¶	¶	@Override¶	public void setLegs(Angle NewLegs) {¶		Legs = NewLegs;¶	}¶¶¶	@Override¶	public Line getTorso() {¶		return Torso;¶	}¶	¶	@Override¶	public void setTorso(Line NewTorso) {¶		Torso = NewTorso;¶	}¶¶¶	@Override¶	public Line getNeck() {¶		return Neck;¶	}¶	¶	@Override¶	public void setNeck(Line newNeck) {¶		Neck = newNeck;¶	}¶	¶	@Override¶	public StringShape getText() {¶		return text;¶	}¶	¶	@Override¶	public void setText(StringShape NewText) {¶		text = NewText;¶	}¶	¶¶	@Override¶	public Head getHead() {¶		return head;¶	}¶¶	@Override¶	public void setHead(Head NewHead) {¶		head = NewHead;¶	}¶	¶	@Override¶	public void dropPlate(String imageName) {¶		plate.setImageFileName(imageName);¶		plate.setHeight(40);¶		plate.setWidth(40);¶	}¶	¶	@Override¶	public void goBack(int X, int Y) {¶		Legs.move(X, Y);¶		Arms.move(X, Y);¶		Torso.move(X, Y);¶		Neck.move(X, Y);¶		head.move(X, Y);¶	}¶	¶	@Override¶	public void move(int X, int Y) {¶		Legs.move(X, Y);¶		Arms.move(X, Y);¶		Torso.move(X, Y);¶		Neck.move(X, Y);¶		head.move(X, Y);¶		plate.move(X, Y);¶	}¶	¶	@Override¶	public void moveTo(int newX, int newY) {¶		Legs.moveTo(newX, newY);¶		Arms.moveTo(newX, newY);¶		Torso.moveTo(newX, newY);¶		Neck.moveTo(newX, newY);¶		head.moveTo(newX, newY);	¶		plate.moveTo(newX, newY);¶	}¶	¶	@Override¶	public void scale(double ratio) {¶		Legs.getRightLine().setRadius(Legs.getRightLine().getRadius()*ratio);¶		Legs.getLeftLine().setRadius(Legs.getLeftLine().getRadius()*ratio);¶		Arms.getRightLine().setRadius(Arms.getRightLine().getRadius()*ratio);¶		Arms.getLeftLine().setRadius(Arms.getLeftLine().getRadius()*ratio);¶		Neck.setRadius(Neck.getRadius()*ratio);¶		Torso.setRadius(Torso.getRadius()*ratio);¶	}¶	¶	¶	@Override¶	public void addPropertyChangeListener(Avatar avatarParameter, PropertyChangeListener aListener) {¶		avatarParameter.getArms().addPropertyChangeListener(getArms(), aListener);¶		avatarParameter.getLegs().addPropertyChangeListener(getLegs(), aListener);¶		avatarParameter.getHead().addPropertyChangeListener(aListener);¶		avatarParameter.getNeck().addPropertyChangeListener(aListener);¶		avatarParameter.getTorso().addPropertyChangeListener(aListener);¶		avatarParameter.getText().addPropertyChangeListener(aListener);¶	}¶	¶	public static void main(String[] args) {¶		Avatar scene = new AnAvatar();¶		scene.getHead().setImageFileName("images/0.png");¶		OEFrame editor = ObjectEditor.edit(scene);¶		editor.showDrawPanel();¶	}¶¶¶¶¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="1961" _type="PauseCommand" date="Sat Mar 19 19:24:12 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15344565">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2031]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1962" _type="InsertStringCommand" date="Sat Mar 19 19:24:12 EDT 2022" starttimestamp="1647716908162" timestamp="15344586" timestamp2="15344586">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1963" _type="InsertStringCommand" date="Sat Mar 19 19:24:12 EDT 2022" starttimestamp="1647716908162" timestamp="15344586" timestamp2="15344586">
    <data><![CDATA[i]]></data>
  </Command>
  <DocumentChange __id="1960" _type="Insert" date="Sat Mar 19 19:24:12 EDT 2022" docASTNodeCount="851" docActiveCodeLength="4615" docExpressionCount="578" docLength="4615" length="1" offset="784" starttimestamp="1647716908162" timestamp="15344565">
    <text><![CDATA[i]]></text>
  </DocumentChange>
  <Command __id="1965" _type="PauseCommand" date="Sat Mar 19 19:24:14 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15346568">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1981]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1966" _type="InsertStringCommand" date="Sat Mar 19 19:24:14 EDT 2022" starttimestamp="1647716908162" timestamp="15346587" timestamp2="15346587">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1967" _type="InsertStringCommand" date="Sat Mar 19 19:24:14 EDT 2022" starttimestamp="1647716908162" timestamp="15346587" timestamp2="15346587">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1970" _type="PauseCommand" date="Sat Mar 19 19:24:15 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15347598">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1011]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1969" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347598" timestamp2="15347598">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1971" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347598" timestamp2="15347598">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1973" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347627" timestamp2="15347627">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1974" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347627" timestamp2="15347627">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1976" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347654" timestamp2="15347654">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1977" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347655" timestamp2="15347655">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1979" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347690" timestamp2="15347690">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1980" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347690" timestamp2="15347690">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1982" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347710" timestamp2="15347710">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1983" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347710" timestamp2="15347710">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="1985" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347748" timestamp2="15347748">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="1986" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347748" timestamp2="15347748">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="1988" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347771" timestamp2="15347771">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="1989" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347771" timestamp2="15347771">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="1991" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347797" timestamp2="15347797">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1992" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347797" timestamp2="15347797">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1994" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347832" timestamp2="15347832">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1995" _type="InsertStringCommand" date="Sat Mar 19 19:24:15 EDT 2022" starttimestamp="1647716908162" timestamp="15347832" timestamp2="15347832">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1997" _type="InsertStringCommand" date="Sat Mar 19 19:24:16 EDT 2022" starttimestamp="1647716908162" timestamp="15347858" timestamp2="15347858">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1998" _type="InsertStringCommand" date="Sat Mar 19 19:24:16 EDT 2022" starttimestamp="1647716908162" timestamp="15347858" timestamp2="15347858">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2000" _type="InsertStringCommand" date="Sat Mar 19 19:24:16 EDT 2022" starttimestamp="1647716908162" timestamp="15347899" timestamp2="15347899">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="2001" _type="InsertStringCommand" date="Sat Mar 19 19:24:16 EDT 2022" starttimestamp="1647716908162" timestamp="15347899" timestamp2="15347899">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="2003" _type="PauseCommand" date="Sat Mar 19 19:24:20 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15352127">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4228]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2002" _type="MoveCaretCommand" caretOffset="1608" date="Sat Mar 19 19:24:20 EDT 2022" docOffset="1608" starttimestamp="1647716908162" timestamp="15352127" />
  <Command __id="2004" _type="MoveCaretCommand" caretOffset="1608" date="Sat Mar 19 19:24:20 EDT 2022" docOffset="1608" starttimestamp="1647716908162" timestamp="15352127" />
  <DocumentChange __id="1964" _type="Insert" date="Sat Mar 19 19:24:14 EDT 2022" docASTNodeCount="851" docActiveCodeLength="4627" docExpressionCount="578" docLength="4627" length="12" offset="785" repeat="12" starttimestamp="1647716908162" timestamp="15346567" timestamp2="15347867">
    <text><![CDATA[mages/12.png]]></text>
  </DocumentChange>
  <Command __id="2006" _type="PauseCommand" date="Sat Mar 19 19:24:22 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15353985">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1858]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="2005" _type="Insert" date="Sat Mar 19 19:24:22 EDT 2022" docASTNodeCount="851" docActiveCodeLength="4628" docExpressionCount="578" docLength="4628" length="1" offset="1608" starttimestamp="1647716908162" timestamp="15353985">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <Command __id="2007" _type="InsertStringCommand" date="Sat Mar 19 19:24:22 EDT 2022" starttimestamp="1647716908162" timestamp="15354005" timestamp2="15354005">
    <data><![CDATA[3]]></data>
  </Command>
  <Command __id="2008" _type="InsertStringCommand" date="Sat Mar 19 19:24:22 EDT 2022" starttimestamp="1647716908162" timestamp="15354005" timestamp2="15354005">
    <data><![CDATA[3]]></data>
  </Command>
  <Command __id="2009" _type="MoveCaretCommand" caretOffset="1631" date="Sat Mar 19 19:24:22 EDT 2022" docOffset="1631" starttimestamp="1647716908162" timestamp="15354726" />
  <Command __id="2010" _type="MoveCaretCommand" caretOffset="1631" date="Sat Mar 19 19:24:22 EDT 2022" docOffset="1631" starttimestamp="1647716908162" timestamp="15354726" />
  <Command __id="2017" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:24:26 EDT 2022" starttimestamp="1647716908162" timestamp="15358728" />
  <Command __id="2019" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:24:26 EDT 2022" starttimestamp="1647716908162" timestamp="15358782" />
  <Command __id="2020" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:24:27 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15359081" type="Run" />
  <Command __id="2021" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:24:27 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15359081" type="Run" />
  <Command __id="2022" _type="ConsoleOutput" date="Sat Mar 19 19:24:28 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15360053" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE,"Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(INSERT," public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2023" _type="ShellCommand" date="Sat Mar 19 19:24:28 EDT 2022" starttimestamp="1647716908162" timestamp="15360274" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2024" _type="ConsoleOutput" date="Sat Mar 19 19:24:28 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15360439" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@6cb107fd
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@6cb107fd"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2025" _type="ConsoleOutput" date="Sat Mar 19 19:24:28 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15360656" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Patron List not in range.
W*** Value: null of Root.Chef List not in range.
W*** Value: null of Root.Buffer not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@6cb107fd"), Diff(INSERT,"Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2027" _type="PauseCommand" date="Sat Mar 19 19:24:32 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15364378">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3722]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2026" _type="ConsoleOutput" date="Sat Mar 19 19:24:32 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15364378" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@35febbdc]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@35febbdc]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@35febbdc]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@35febbdc]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@171159b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@171159b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@171159b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@171159b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@68bb6e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@68bb6e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@68bb6e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@68bb6e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@552424f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@552424f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@552424f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@552424f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45323962]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45323962]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@45323962]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@45323962]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@58732cb6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@58732cb6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@58732cb6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@58732cb6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1d854f1d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1d854f1d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1d854f1d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1d854f1d]
Moving the stove: 

W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@35febbdc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@35febbdc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@35febbdc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@35febbdc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@171159b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@171159b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@171159b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@171159b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@68bb6e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@68bb6e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@68bb6e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@68bb6e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@552424f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@552424f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@552424f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@552424f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45323962]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45323962]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@45323962]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@45323962]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@58732cb6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@58732cb6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@58732cb6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@58732cb6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1d854f1d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1d854f1d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1d854f1d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1d854f1d]¶Moving the stove: ¶¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2028" _type="ConsoleOutput" date="Sat Mar 19 19:24:32 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15364459" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@35febbdc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@35febbdc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@35febbdc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@35febbdc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@171159b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@171159b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@171159b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@171159b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@68bb6e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@68bb6e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@68bb6e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@68bb6e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@552424f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@552424f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@552424f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@552424f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45323962]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45323962]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@45323962]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@45323962]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@58732cb6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@58732cb6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@58732cb6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@58732cb6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1d854f1d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1d854f1d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1d854f1d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1d854f1d]¶Moving the stove: ¶¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. "), Diff(INSERT,"W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2029" _type="ConsoleOutput" date="Sat Mar 19 19:24:32 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15364519" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be a"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ A"), Diff(EQUAL,"ssociate"), Diff(DELETE,"d with"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @"), Diff(DELETE,"ObserverRegisterer(Property Listener)"), Diff(INSERT,"Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2030" _type="ConsoleOutput" date="Sat Mar 19 19:24:33 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15364927" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶"), Diff(EQUAL,"W*** Implicit property ZIndex of  A"), Diff(DELETE,"Line"), Diff(INSERT,"Head"), Diff(EQUAL," ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"Head"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="2032" _type="PauseCommand" date="Sat Mar 19 19:24:34 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15365972">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1045]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2031" _type="ConsoleOutput" date="Sat Mar 19 19:24:34 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15365972" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.A"), Diff(DELETE,"nAngle"), Diff(INSERT,"Chef"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶"), Diff(DELETE,"W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="2034" _type="PauseCommand" date="Sat Mar 19 19:24:35 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15367712">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1740]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2033" _type="ConsoleOutput" date="Sat Mar 19 19:24:35 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15367712" type="ConsoleOutput">
    <outputString><![CDATA[W*** Assuming implicit pattern: No Pattern
  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer
E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@2b2e7ccf
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef."), Diff(INSERT,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke "), Diff(EQUAL,"addPropertyChangeListener"), Diff(DELETE,"("), Diff(INSERT," on"), Diff(EQUAL,"graphics."), Diff(DELETE,"Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"ABoundedBuffer@2b2e7ccf"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2035" _type="ConsoleOutput" date="Sat Mar 19 19:24:36 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15367944" type="ConsoleOutput">
    <outputString><![CDATA[W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@2b2e7ccf"), Diff(INSERT,"Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2037" _type="PauseCommand" date="Sat Mar 19 19:24:43 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15375106">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7162]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2036" _type="ConsoleOutput" date="Sat Mar 19 19:24:43 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15375106" type="ConsoleOutput">
    <outputString><![CDATA[W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextOut of object: graphics.ABoundedBuffer@2b2e7ccf. Ignoring notification.
0
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@73ab2135]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@73ab2135]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@73ab2135]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@73ab2135]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@72b4d196]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@72b4d196]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@72b4d196]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@72b4d196]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@218beba8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@218beba8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@218beba8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@218beba8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4aed099a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4aed099a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4aed099a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4aed099a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@8da8c85]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@8da8c85]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@8da8c85]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@8da8c85]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@ae666d1]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@ae666d1]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@ae666d1]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@ae666d1]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@323d1118]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@323d1118]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@323d1118]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@323d1118]
W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextIn of object: graphics.ABoundedBuffer@2b2e7ccf. Ignoring notification.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(INSERT," "), Diff(EQUAL,"Received notification"), Diff(DELETE," about change to composite property: result .It is usually more efficient to notify about changes to atomic properties"), Diff(INSERT,"(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextOut of object: graphics.ABoundedBuffer@2b2e7ccf. Ignoring notification.¶0¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@73ab2135]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@73ab2135]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@73ab2135]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@73ab2135]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@72b4d196]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@72b4d196]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@72b4d196]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@72b4d196]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@218beba8]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@218beba8]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@218beba8]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@218beba8]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4aed099a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4aed099a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4aed099a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4aed099a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@8da8c85]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@8da8c85]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@8da8c85]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@8da8c85]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@ae666d1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@ae666d1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@ae666d1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@ae666d1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@323d1118]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@323d1118]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@323d1118]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@323d1118]¶W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextIn of object: graphics.ABoundedBuffer@2b2e7ccf. Ignoring notification"), Diff(EQUAL,".¶")]]]></diff>
  </Command>
  <Command __id="2039" _type="PauseCommand" date="Sat Mar 19 19:24:49 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15380926">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5820]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2038" _type="ConsoleOutput" date="Sat Mar 19 19:24:49 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15380926" type="ConsoleOutput">
    <outputString><![CDATA[1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@36b36b8c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@36b36b8c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=240; newValue=225; propagationId=null; source=graphics.ALine@36b36b8c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=240; newValue=225; propagationId=null; source=graphics.ALine@36b36b8c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@32999efb]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@32999efb]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=240; newValue=225; propagationId=null; source=graphics.ALine@32999efb]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=240; newValue=225; propagationId=null; source=graphics.ALine@32999efb]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@5725a97c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@5725a97c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@5725a97c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@5725a97c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@546287e9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@546287e9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@546287e9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@546287e9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@4ffa1918]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@4ffa1918]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@4ffa1918]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@4ffa1918]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@1237bb5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@1237bb5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=190; newValue=175; propagationId=null; source=graphics.ALine@1237bb5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=190; newValue=175; propagationId=null; source=graphics.ALine@1237bb5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=593; propagationId=null; source=graphics.AHead@4d289010]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=593; propagationId=null; source=graphics.AHead@4d289010]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=101; newValue=86; propagationId=null; source=graphics.AHead@4d289010]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=101; newValue=86; propagationId=null; source=graphics.AHead@4d289010]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextOut of object: graphics.ABoundedBuffer@2b2e7ccf. Ignoring notification.¶0"), Diff(INSERT,"1"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"73ab2135"), Diff(INSERT,"36b36b8c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"73ab2135"), Diff(INSERT,"36b36b8c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"160"), Diff(INSERT,"225"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"73ab2135"), Diff(INSERT,"36b36b8c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"160"), Diff(INSERT,"225"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"73ab2135"), Diff(INSERT,"36b36b8c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"72b4d196"), Diff(INSERT,"32999efb"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"72b4d196"), Diff(INSERT,"32999efb"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"160"), Diff(INSERT,"225"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"72b4d196"), Diff(INSERT,"32999efb"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"160"), Diff(INSERT,"225"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"72b4d196"), Diff(INSERT,"32999efb"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"218beba8"), Diff(INSERT,"5725a97c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"218beba8"), Diff(INSERT,"5725a97c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue=1"), Diff(DELETE,"20"), Diff(INSERT,"85"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"218beba8"), Diff(INSERT,"5725a97c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue=1"), Diff(DELETE,"20"), Diff(INSERT,"85"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"218beba8"), Diff(INSERT,"5725a97c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"4aed099a"), Diff(INSERT,"546287e9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"4aed099a"), Diff(INSERT,"546287e9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue=1"), Diff(DELETE,"20"), Diff(INSERT,"85"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"4aed099a"), Diff(INSERT,"546287e9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue=1"), Diff(DELETE,"20"), Diff(INSERT,"85"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"4aed099a"), Diff(INSERT,"546287e9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"8da8c85"), Diff(INSERT,"4ffa1918"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"8da8c85"), Diff(INSERT,"4ffa1918"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue=1"), Diff(DELETE,"20"), Diff(INSERT,"85"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"8da8c85"), Diff(INSERT,"4ffa1918"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue=1"), Diff(DELETE,"20"), Diff(INSERT,"85"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"8da8c85"), Diff(INSERT,"4ffa1918"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"ae666d1"), Diff(INSERT,"1237bb5"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"ae666d1"), Diff(INSERT,"1237bb5"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"90; newValue=1"), Diff(DELETE,"10"), Diff(INSERT,"75"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"ae666d1"), Diff(INSERT,"1237bb5"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"90; newValue=1"), Diff(DELETE,"10"), Diff(INSERT,"75"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"ae666d1"), Diff(INSERT,"1237bb5"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(EQUAL,"63; newValue=5"), Diff(DELETE,"2"), Diff(INSERT,"9"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"323d1118"), Diff(INSERT,"4d289010"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(EQUAL,"63; newValue=5"), Diff(DELETE,"2"), Diff(INSERT,"9"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"323d1118"), Diff(INSERT,"4d289010"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(INSERT,"01"), Diff(EQUAL,"; newValue="), Diff(DELETE,"21"), Diff(INSERT,"86"), Diff(EQUAL,"; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"323d1118"), Diff(INSERT,"4d289010"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(INSERT,"01"), Diff(EQUAL,"; newValue="), Diff(DELETE,"21"), Diff(INSERT,"86"), Diff(EQUAL,"; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"323d1118]¶W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextIn of object: graphics.ABoundedBuffer@2b2e7ccf. Ignoring notification."), Diff(INSERT,"4d289010]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2041" _type="PauseCommand" date="Sat Mar 19 19:24:51 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15383164">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2238]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2040" _type="ConsoleOutput" date="Sat Mar 19 19:24:51 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15383164" type="ConsoleOutput">
    <outputString><![CDATA[2
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@35febbdc]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@35febbdc]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@35febbdc]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@35febbdc]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@171159b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@171159b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@171159b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@171159b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@68bb6e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@68bb6e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@68bb6e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@68bb6e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@552424f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@552424f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@552424f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@552424f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@45323962]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@45323962]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@45323962]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@45323962]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@58732cb6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@58732cb6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=190; propagationId=null; source=graphics.ALine@58732cb6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=190; propagationId=null; source=graphics.ALine@58732cb6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=93; newValue=673; propagationId=null; source=graphics.AHead@1d854f1d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=93; newValue=673; propagationId=null; source=graphics.AHead@1d854f1d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=101; propagationId=null; source=graphics.AHead@1d854f1d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=101; propagationId=null; source=graphics.AHead@1d854f1d]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@3"), Diff(DELETE,"6b36b8"), Diff(INSERT,"5febbd"), Diff(EQUAL,"c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@3"), Diff(DELETE,"6b36b8"), Diff(INSERT,"5febbd"), Diff(EQUAL,"c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"40; newValue=2"), Diff(DELETE,"25"), Diff(INSERT,"40"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@3"), Diff(DELETE,"6b36b8"), Diff(INSERT,"5febbd"), Diff(EQUAL,"c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"40; newValue=2"), Diff(DELETE,"25"), Diff(INSERT,"40"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@3"), Diff(DELETE,"6b36b8"), Diff(INSERT,"5febbd"), Diff(EQUAL,"c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"32999efb"), Diff(INSERT,"171159b3"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"32999efb"), Diff(INSERT,"171159b3"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"40; newValue=2"), Diff(DELETE,"25"), Diff(INSERT,"40"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"32999efb"), Diff(INSERT,"171159b3"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"40; newValue=2"), Diff(DELETE,"25"), Diff(INSERT,"40"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"32999efb"), Diff(INSERT,"171159b3"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5725a97c"), Diff(INSERT,"68bb6e"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5725a97c"), Diff(INSERT,"68bb6e"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"185"), Diff(INSERT,"200"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5725a97c"), Diff(INSERT,"68bb6e"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"185"), Diff(INSERT,"200"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5725a97c"), Diff(INSERT,"68bb6e"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@5"), Diff(DELETE,"46287e9"), Diff(INSERT,"52424f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@5"), Diff(DELETE,"46287e9"), Diff(INSERT,"52424f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"185"), Diff(INSERT,"200"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@5"), Diff(DELETE,"46287e9"), Diff(INSERT,"52424f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"185"), Diff(INSERT,"200"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@5"), Diff(DELETE,"46287e9"), Diff(INSERT,"52424f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"ffa1918"), Diff(INSERT,"5323962"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"ffa1918"), Diff(INSERT,"5323962"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"185"), Diff(INSERT,"200"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"ffa1918"), Diff(INSERT,"5323962"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"185"), Diff(INSERT,"200"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"ffa1918"), Diff(INSERT,"5323962"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"1237bb5"), Diff(INSERT,"58732cb6"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"1237bb5"), Diff(INSERT,"58732cb6"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"90; newValue=1"), Diff(DELETE,"75"), Diff(INSERT,"90"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"1237bb5"), Diff(INSERT,"58732cb6"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"90; newValue=1"), Diff(DELETE,"75"), Diff(INSERT,"90"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"1237bb5"), Diff(INSERT,"58732cb6"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"9"), Diff(EQUAL,"3; newValue="), Diff(DELETE,"59"), Diff(INSERT,"67"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"4d289010"), Diff(INSERT,"1d854f1d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"9"), Diff(EQUAL,"3; newValue="), Diff(DELETE,"59"), Diff(INSERT,"67"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"4d289010"), Diff(INSERT,"1d854f1d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"01; newValue="), Diff(DELETE,"86"), Diff(INSERT,"101"), Diff(EQUAL,"; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"4d289010"), Diff(INSERT,"1d854f1d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"01; newValue="), Diff(DELETE,"86"), Diff(INSERT,"101"), Diff(EQUAL,"; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"4d289010"), Diff(INSERT,"1d854f1d"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="2043" _type="PauseCommand" date="Sat Mar 19 19:25:07 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="15399098">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[15934]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2042" _type="ShellCommand" date="Sat Mar 19 19:25:07 EDT 2022" starttimestamp="1647716908162" timestamp="15399098" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2045" _type="PauseCommand" date="Sat Mar 19 19:25:08 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15400426">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1328]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2044" _type="MoveCaretCommand" caretOffset="1608" date="Sat Mar 19 19:25:08 EDT 2022" docOffset="1608" starttimestamp="1647716908162" timestamp="15400426" />
  <Command __id="2046" _type="MoveCaretCommand" caretOffset="1608" date="Sat Mar 19 19:25:08 EDT 2022" docOffset="1608" starttimestamp="1647716908162" timestamp="15400426" />
  <Command __id="2047" _type="SelectTextCommand" caretOffset="1610" date="Sat Mar 19 19:25:08 EDT 2022" end="1610" start="1608" starttimestamp="1647716908162" timestamp="15400551" />
  <Command __id="2048" _type="SelectTextCommand" caretOffset="1610" date="Sat Mar 19 19:25:08 EDT 2022" end="1610" start="1608" starttimestamp="1647716908162" timestamp="15400552" />
  <DocumentChange __id="2011" _type="Insert" date="Sat Mar 19 19:24:23 EDT 2022" docASTNodeCount="851" docActiveCodeLength="4629" docExpressionCount="578" docLength="4629" length="1" offset="1631" starttimestamp="1647716908162" timestamp="15355233">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <Command __id="2050" _type="PauseCommand" date="Sat Mar 19 19:25:10 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15402219">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1667]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="2049" _type="Replace" date="Sat Mar 19 19:25:10 EDT 2022" docASTNodeCount="851" docActiveCodeLength="4628" docExpressionCount="578" docLength="4628" endLine="74" insertionLength="1" int_docASTNodeCount="850" int_docActiveCodeLength="4627" int_docExpressionCount="577" int_docLength="4627" length="2" offset="1608" startLine="74" starttimestamp="1647716908162" timestamp="15402219">
    <deletedText><![CDATA[30]]></deletedText>
    <insertedText><![CDATA[0]]></insertedText>
  </DocumentChange>
  <Command __id="2051" _type="InsertStringCommand" date="Sat Mar 19 19:25:10 EDT 2022" starttimestamp="1647716908162" timestamp="15402258" timestamp2="15402258">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="2052" _type="InsertStringCommand" date="Sat Mar 19 19:25:10 EDT 2022" starttimestamp="1647716908162" timestamp="15402258" timestamp2="15402258">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="2053" _type="MoveCaretCommand" caretOffset="1630" date="Sat Mar 19 19:25:11 EDT 2022" docOffset="1630" starttimestamp="1647716908162" timestamp="15402896" />
  <Command __id="2054" _type="MoveCaretCommand" caretOffset="1630" date="Sat Mar 19 19:25:11 EDT 2022" docOffset="1630" starttimestamp="1647716908162" timestamp="15402896" />
  <Command __id="2055" _type="SelectTextCommand" caretOffset="1632" date="Sat Mar 19 19:25:11 EDT 2022" end="1632" start="1630" starttimestamp="1647716908162" timestamp="15403071" />
  <Command __id="2056" _type="SelectTextCommand" caretOffset="1632" date="Sat Mar 19 19:25:11 EDT 2022" end="1632" start="1630" starttimestamp="1647716908162" timestamp="15403071" />
  <Command __id="2058" _type="InsertStringCommand" date="Sat Mar 19 19:25:11 EDT 2022" starttimestamp="1647716908162" timestamp="15403764" timestamp2="15403764">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="2059" _type="InsertStringCommand" date="Sat Mar 19 19:25:11 EDT 2022" starttimestamp="1647716908162" timestamp="15403764" timestamp2="15403764">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="2061" _type="PauseCommand" date="Sat Mar 19 19:25:12 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15404832">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1068]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2069" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:25:23 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15415041" type="Run" />
  <Command __id="2071" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:25:23 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15415042" type="Run" />
  <Command __id="2073" _type="PauseCommand" date="Sat Mar 19 19:25:24 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15416333">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1291]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2072" _type="ConsoleOutput" date="Sat Mar 19 19:25:24 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15416333" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@35febbdc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@35febbdc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@35febbdc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@35febbdc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@171159b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@171159b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@171159b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@171159b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@68bb6e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@68bb6e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@68bb6e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@68bb6e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@552424f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@552424f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@552424f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@552424f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@45323962]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@45323962]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@45323962]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@45323962]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@58732cb6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@58732cb6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=190; propagationId=null; source=graphics.ALine@58732cb6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=190; propagationId=null; source=graphics.ALine@58732cb6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=93; newValue=673; propagationId=null; source=graphics.AHead@1d854f1d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=93; newValue=673; propagationId=null; source=graphics.AHead@1d854f1d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=101; propagationId=null; source=graphics.AHead@1d854f1d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=101; propagationId=null; source=graphics.AHead@1d854f1d]"), Diff(INSERT,"W*** public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2074" _type="ShellCommand" date="Sat Mar 19 19:25:24 EDT 2022" starttimestamp="1647716908162" timestamp="15416630" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2075" _type="ConsoleOutput" date="Sat Mar 19 19:25:25 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15416948" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@6cb107fd
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AnArrayBasedScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@6cb107fd"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2076" _type="ConsoleOutput" date="Sat Mar 19 19:25:25 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15417246" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Patron List not in range.
W*** Value: null of Root.Chef List not in range.
W*** Value: null of Root.Buffer not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.AnArrayBasedScene@6cb107fd"), Diff(INSERT,"Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2078" _type="PauseCommand" date="Sat Mar 19 19:25:29 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15421737">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4491]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2077" _type="ConsoleOutput" date="Sat Mar 19 19:25:29 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15421737" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@123701b2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@123701b2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@123701b2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@123701b2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21cc5a84]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21cc5a84]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@21cc5a84]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@21cc5a84]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6a8c5520]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6a8c5520]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6a8c5520]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6a8c5520]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21b05ba6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21b05ba6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@21b05ba6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@21b05ba6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@b20e4b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@b20e4b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@b20e4b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@b20e4b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@487b8729]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@487b8729]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@487b8729]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@487b8729]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@40d6fe53]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@40d6fe53]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@40d6fe53]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@40d6fe53]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Patron List not in range.¶W*** Value: null of Root.Chef List not in range.¶W*** Value: null of Root.Buffer not in range."), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@123701b2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@123701b2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@123701b2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@123701b2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21cc5a84]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21cc5a84]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@21cc5a84]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@21cc5a84]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6a8c5520]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6a8c5520]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6a8c5520]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6a8c5520]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21b05ba6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21b05ba6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@21b05ba6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@21b05ba6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@b20e4b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@b20e4b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@b20e4b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@b20e4b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@487b8729]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@487b8729]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@487b8729]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@487b8729]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@40d6fe53]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@40d6fe53]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@40d6fe53]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@40d6fe53]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2079" _type="ConsoleOutput" date="Sat Mar 19 19:25:30 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15421933" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@123701b2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@123701b2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@123701b2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@123701b2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21cc5a84]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21cc5a84]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@21cc5a84]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@21cc5a84]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6a8c5520]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6a8c5520]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6a8c5520]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6a8c5520]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21b05ba6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@21b05ba6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@21b05ba6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@21b05ba6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@b20e4b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@b20e4b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@b20e4b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@b20e4b3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@487b8729]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@487b8729]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@487b8729]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@487b8729]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@40d6fe53]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@40d6fe53]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@40d6fe53]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@40d6fe53]¶Moving the stove:"), Diff(INSERT,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list."), Diff(EQUAL," ¶")]]]></diff>
  </Command>
  <Command __id="2080" _type="ConsoleOutput" date="Sat Mar 19 19:25:30 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15422000" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"Table"), Diff(EQUAL,".addPropertyChangeListener("), Diff(DELETE,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use"), Diff(INSERT," should be associated with"), Diff(EQUAL," annotation"), Diff(INSERT,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"interface java.beans."), Diff(EQUAL,"Property"), Diff(DELETE,"Change"), Diff(INSERT," "), Diff(EQUAL,"Listener)"), Diff(DELETE," for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Line"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="2081" _type="ConsoleOutput" date="Sat Mar 19 19:25:30 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15422452" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(INSERT," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Tab"), Diff(INSERT,"nAng"), Diff(EQUAL,"le.addPropertyChangeListener("), Diff(INSERT,"graphics.Angle,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with"), Diff(INSERT,"¶W*** Use"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"Property Listener)¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(INSERT,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2082" _type="ConsoleOutput" date="Sat Mar 19 19:25:30 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15422527" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2084" _type="PauseCommand" date="Sat Mar 19 19:25:31 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15423772">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1245]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2083" _type="ConsoleOutput" date="Sat Mar 19 19:25:31 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15423772" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2086" _type="PauseCommand" date="Sat Mar 19 19:25:34 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15426274">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2502]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2085" _type="ConsoleOutput" date="Sat Mar 19 19:25:34 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15426274" type="ConsoleOutput">
    <outputString><![CDATA[W*** Assuming implicit pattern: No Pattern
  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer
E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@534dfc8a
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef."), Diff(INSERT,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke "), Diff(EQUAL,"addPropertyChangeListener"), Diff(DELETE,"("), Diff(INSERT," on"), Diff(EQUAL,"graphics."), Diff(DELETE,"Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"ABoundedBuffer@534dfc8a"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2087" _type="ConsoleOutput" date="Sat Mar 19 19:25:34 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15426559" type="ConsoleOutput">
    <outputString><![CDATA[W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@534dfc8a"), Diff(INSERT,"Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2089" _type="PauseCommand" date="Sat Mar 19 19:25:38 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15430822">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4263]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2088" _type="ConsoleOutput" date="Sat Mar 19 19:25:38 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15430822" type="ConsoleOutput">
    <outputString><![CDATA[W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextOut of object: graphics.ABoundedBuffer@534dfc8a. Ignoring notification.
0
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@42e99021]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@42e99021]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@42e99021]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@42e99021]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@72a60ecc]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@72a60ecc]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@72a60ecc]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@72a60ecc]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@67895508]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@67895508]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@67895508]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@67895508]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5eafb228]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5eafb228]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5eafb228]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5eafb228]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5c47ac9e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5c47ac9e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5c47ac9e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5c47ac9e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@52ad9b03]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@52ad9b03]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@52ad9b03]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@52ad9b03]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@5771c0f2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@5771c0f2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@5771c0f2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@5771c0f2]
W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextIn of object: graphics.ABoundedBuffer@534dfc8a. Ignoring notification.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(INSERT," "), Diff(EQUAL,"Received notification"), Diff(DELETE," about change to composite property: result .It is usually more efficient to notify about changes to atomic properties"), Diff(INSERT,"(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextOut of object: graphics.ABoundedBuffer@534dfc8a. Ignoring notification.¶0¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@42e99021]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@42e99021]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@42e99021]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@42e99021]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@72a60ecc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@72a60ecc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@72a60ecc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@72a60ecc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@67895508]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@67895508]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@67895508]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@67895508]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5eafb228]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5eafb228]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5eafb228]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5eafb228]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5c47ac9e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5c47ac9e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5c47ac9e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5c47ac9e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@52ad9b03]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@52ad9b03]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@52ad9b03]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@52ad9b03]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@5771c0f2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@5771c0f2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@5771c0f2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@5771c0f2]¶W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextIn of object: graphics.ABoundedBuffer@534dfc8a. Ignoring notification"), Diff(EQUAL,".¶")]]]></diff>
  </Command>
  <Command __id="2091" _type="PauseCommand" date="Sat Mar 19 19:26:46 EDT 2022" range="1m-2m" starttimestamp="1647716908162" timestamp="15498070">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[67248]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2090" _type="ConsoleOutput" date="Sat Mar 19 19:26:46 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15498070" type="ConsoleOutput">
    <outputString><![CDATA[1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@370a702b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@370a702b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=240; newValue=225; propagationId=null; source=graphics.ALine@370a702b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=240; newValue=225; propagationId=null; source=graphics.ALine@370a702b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@1ebfa373]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@1ebfa373]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=240; newValue=225; propagationId=null; source=graphics.ALine@1ebfa373]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=240; newValue=225; propagationId=null; source=graphics.ALine@1ebfa373]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@3d9f5d81]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@3d9f5d81]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@3d9f5d81]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@3d9f5d81]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@280d8a47]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@280d8a47]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@280d8a47]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@280d8a47]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@3f9fa33]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@3f9fa33]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@3f9fa33]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=185; propagationId=null; source=graphics.ALine@3f9fa33]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@3d4c2c4d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=630; propagationId=null; source=graphics.ALine@3d4c2c4d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=190; newValue=175; propagationId=null; source=graphics.ALine@3d4c2c4d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=190; newValue=175; propagationId=null; source=graphics.ALine@3d4c2c4d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=593; propagationId=null; source=graphics.AHead@57995258]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=593; propagationId=null; source=graphics.AHead@57995258]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=101; newValue=86; propagationId=null; source=graphics.AHead@57995258]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=101; newValue=86; propagationId=null; source=graphics.AHead@57995258]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextOut of object: graphics.ABoundedBuffer@534dfc8a. Ignoring notification.¶0"), Diff(INSERT,"1"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"42e99"), Diff(INSERT,"370a7"), Diff(EQUAL,"02"), Diff(DELETE,"1"), Diff(INSERT,"b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"42e99"), Diff(INSERT,"370a7"), Diff(EQUAL,"02"), Diff(DELETE,"1"), Diff(INSERT,"b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"160"), Diff(INSERT,"225"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"42e99"), Diff(INSERT,"370a7"), Diff(EQUAL,"02"), Diff(DELETE,"1"), Diff(INSERT,"b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"160"), Diff(INSERT,"225"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"42e99"), Diff(INSERT,"370a7"), Diff(EQUAL,"02"), Diff(DELETE,"1"), Diff(INSERT,"b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"72a60ecc"), Diff(INSERT,"1ebfa373"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"72a60ecc"), Diff(INSERT,"1ebfa373"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"160"), Diff(INSERT,"225"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"72a60ecc"), Diff(INSERT,"1ebfa373"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"160"), Diff(INSERT,"225"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"72a60ecc"), Diff(INSERT,"1ebfa373"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"67895508"), Diff(INSERT,"3d9f5d81"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"67895508"), Diff(INSERT,"3d9f5d81"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue=1"), Diff(DELETE,"20"), Diff(INSERT,"85"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"67895508"), Diff(INSERT,"3d9f5d81"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue=1"), Diff(DELETE,"20"), Diff(INSERT,"85"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"67895508"), Diff(INSERT,"3d9f5d81"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5eafb228"), Diff(INSERT,"280d8a47"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5eafb228"), Diff(INSERT,"280d8a47"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue=1"), Diff(DELETE,"20"), Diff(INSERT,"85"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5eafb228"), Diff(INSERT,"280d8a47"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue=1"), Diff(DELETE,"20"), Diff(INSERT,"85"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5eafb228"), Diff(INSERT,"280d8a47"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5c47ac9e"), Diff(INSERT,"3f9fa33"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5c47ac9e"), Diff(INSERT,"3f9fa33"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue=1"), Diff(DELETE,"20"), Diff(INSERT,"85"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5c47ac9e"), Diff(INSERT,"3f9fa33"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue=1"), Diff(DELETE,"20"), Diff(INSERT,"85"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5c47ac9e"), Diff(INSERT,"3f9fa33"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"52ad9b03"), Diff(INSERT,"3d4c2c4d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"5"), Diff(EQUAL,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"52ad9b03"), Diff(INSERT,"3d4c2c4d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"90; newValue=1"), Diff(DELETE,"10"), Diff(INSERT,"75"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"52ad9b03"), Diff(INSERT,"3d4c2c4d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"90; newValue=1"), Diff(DELETE,"10"), Diff(INSERT,"75"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"52ad9b03"), Diff(INSERT,"3d4c2c4d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(EQUAL,"63; newValue=5"), Diff(DELETE,"2"), Diff(INSERT,"9"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@57"), Diff(DELETE,"71c0f2"), Diff(INSERT,"995258"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(EQUAL,"63; newValue=5"), Diff(DELETE,"2"), Diff(INSERT,"9"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@57"), Diff(DELETE,"71c0f2"), Diff(INSERT,"995258"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(INSERT,"01"), Diff(EQUAL,"; newValue="), Diff(DELETE,"21"), Diff(INSERT,"86"), Diff(EQUAL,"; propagationId=null; source=graphics.AHead@57"), Diff(DELETE,"71c0f2"), Diff(INSERT,"995258"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(INSERT,"01"), Diff(EQUAL,"; newValue="), Diff(DELETE,"21"), Diff(INSERT,"86"), Diff(EQUAL,"; propagationId=null; source=graphics.AHead@57"), Diff(DELETE,"71c0f2]¶W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: nextIn of object: graphics.ABoundedBuffer@534dfc8a. Ignoring notification."), Diff(INSERT,"995258]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2093" _type="PauseCommand" date="Sat Mar 19 19:26:54 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15506278">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8208]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2092" _type="ConsoleOutput" date="Sat Mar 19 19:26:54 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15506278" type="ConsoleOutput">
    <outputString><![CDATA[2
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@123701b2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@123701b2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@123701b2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@123701b2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@21cc5a84]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@21cc5a84]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@21cc5a84]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=240; propagationId=null; source=graphics.ALine@21cc5a84]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@6a8c5520]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@6a8c5520]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@6a8c5520]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@6a8c5520]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@21b05ba6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@21b05ba6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@21b05ba6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@21b05ba6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@b20e4b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@b20e4b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@b20e4b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=200; propagationId=null; source=graphics.ALine@b20e4b3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@487b8729]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=130; newValue=710; propagationId=null; source=graphics.ALine@487b8729]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=190; propagationId=null; source=graphics.ALine@487b8729]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=190; propagationId=null; source=graphics.ALine@487b8729]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=93; newValue=673; propagationId=null; source=graphics.AHead@40d6fe53]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=93; newValue=673; propagationId=null; source=graphics.AHead@40d6fe53]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=101; propagationId=null; source=graphics.AHead@40d6fe53]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=101; propagationId=null; source=graphics.AHead@40d6fe53]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(INSERT,"12"), Diff(EQUAL,"370"), Diff(DELETE,"a702b"), Diff(INSERT,"1b2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(INSERT,"12"), Diff(EQUAL,"370"), Diff(DELETE,"a702b"), Diff(INSERT,"1b2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"40; newValue=2"), Diff(DELETE,"25"), Diff(INSERT,"40"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(INSERT,"12"), Diff(EQUAL,"370"), Diff(DELETE,"a702b"), Diff(INSERT,"1b2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"40; newValue=2"), Diff(DELETE,"25"), Diff(INSERT,"40"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(INSERT,"12"), Diff(EQUAL,"370"), Diff(DELETE,"a702b"), Diff(INSERT,"1b2"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"1ebfa373"), Diff(INSERT,"21cc5a84"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"1ebfa373"), Diff(INSERT,"21cc5a84"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"40; newValue=2"), Diff(DELETE,"25"), Diff(INSERT,"40"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"1ebfa373"), Diff(INSERT,"21cc5a84"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"40; newValue=2"), Diff(DELETE,"25"), Diff(INSERT,"40"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"1ebfa373"), Diff(INSERT,"21cc5a84"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3d9f5d81"), Diff(INSERT,"6a8c5520"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3d9f5d81"), Diff(INSERT,"6a8c5520"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"185"), Diff(INSERT,"200"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3d9f5d81"), Diff(INSERT,"6a8c5520"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"185"), Diff(INSERT,"200"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3d9f5d81"), Diff(INSERT,"6a8c5520"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@2"), Diff(DELETE,"80d8a47"), Diff(INSERT,"1b05ba6"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@2"), Diff(DELETE,"80d8a47"), Diff(INSERT,"1b05ba6"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"185"), Diff(INSERT,"200"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@2"), Diff(DELETE,"80d8a47"), Diff(INSERT,"1b05ba6"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"185"), Diff(INSERT,"200"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@2"), Diff(DELETE,"80d8a47"), Diff(INSERT,"1b05ba6"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3f9fa3"), Diff(INSERT,"b20e4b"), Diff(EQUAL,"3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3f9fa3"), Diff(INSERT,"b20e4b"), Diff(EQUAL,"3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"185"), Diff(INSERT,"200"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3f9fa3"), Diff(INSERT,"b20e4b"), Diff(EQUAL,"3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"2"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"185"), Diff(INSERT,"200"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3f9fa3"), Diff(INSERT,"b20e4b"), Diff(EQUAL,"3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3d4c2c4d"), Diff(INSERT,"487b8729"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1"), Diff(DELETE,"0"), Diff(INSERT,"3"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"63"), Diff(INSERT,"71"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3d4c2c4d"), Diff(INSERT,"487b8729"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"90; newValue=1"), Diff(DELETE,"75"), Diff(INSERT,"90"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3d4c2c4d"), Diff(INSERT,"487b8729"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"90; newValue=1"), Diff(DELETE,"75"), Diff(INSERT,"90"), Diff(EQUAL,"; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3d4c2c4d"), Diff(INSERT,"487b8729"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"9"), Diff(EQUAL,"3; newValue="), Diff(DELETE,"59"), Diff(INSERT,"67"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"57995258"), Diff(INSERT,"40d6fe53"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"6"), Diff(INSERT,"9"), Diff(EQUAL,"3; newValue="), Diff(DELETE,"59"), Diff(INSERT,"67"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"57995258"), Diff(INSERT,"40d6fe53"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"01; newValue="), Diff(DELETE,"86"), Diff(INSERT,"101"), Diff(EQUAL,"; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"57995258"), Diff(INSERT,"40d6fe53"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"3"), Diff(EQUAL,"01; newValue="), Diff(DELETE,"86"), Diff(INSERT,"101"), Diff(EQUAL,"; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"57995258"), Diff(INSERT,"40d6fe53"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="2095" _type="PauseCommand" date="Sat Mar 19 19:26:58 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15510184">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3906]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2094" _type="ConsoleOutput" date="Sat Mar 19 19:26:58 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="15510184" type="ConsoleOutput">
    <outputString><![CDATA[3
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@3ca5066a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@3ca5066a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=540; newValue=340; propagationId=null; source=graphics.ALine@3ca5066a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=540; newValue=340; propagationId=null; source=graphics.ALine@3ca5066a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@4745740f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@4745740f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=540; newValue=340; propagationId=null; source=graphics.ALine@4745740f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=540; newValue=340; propagationId=null; source=graphics.ALine@4745740f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@56300832]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@56300832]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=500; newValue=300; propagationId=null; source=graphics.ALine@56300832]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=500; newValue=300; propagationId=null; source=graphics.ALine@56300832]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@c0b9611]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@c0b9611]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=500; newValue=300; propagationId=null; source=graphics.ALine@c0b9611]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=500; newValue=300; propagationId=null; source=graphics.ALine@c0b9611]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@3fe7e591]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@3fe7e591]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=500; newValue=300; propagationId=null; source=graphics.ALine@3fe7e591]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=500; newValue=300; propagationId=null; source=graphics.ALine@3fe7e591]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@27087577]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@27087577]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=490; newValue=290; propagationId=null; source=graphics.ALine@27087577]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=490; newValue=290; propagationId=null; source=graphics.ALine@27087577]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=673; propagationId=null; source=graphics.AHead@1677b8c0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=673; propagationId=null; source=graphics.AHead@1677b8c0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=401; newValue=201; propagationId=null; source=graphics.AHead@1677b8c0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=401; newValue=201; propagationId=null; source=graphics.AHead@1677b8c0]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"13"), Diff(INSERT,"20"), Diff(EQUAL,"0; newValue=710; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"123701b2"), Diff(INSERT,"3ca5066a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"13"), Diff(INSERT,"20"), Diff(EQUAL,"0; newValue=710; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"123701b2"), Diff(INSERT,"3ca5066a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"40; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"123701b2"), Diff(INSERT,"3ca5066a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"40; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"123701b2"), Diff(INSERT,"3ca5066a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"13"), Diff(INSERT,"20"), Diff(EQUAL,"0; newValue=710; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"21cc5a84"), Diff(INSERT,"4745740f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"13"), Diff(INSERT,"20"), Diff(EQUAL,"0; newValue=710; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"21cc5a84"), Diff(INSERT,"4745740f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"40; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"21cc5a84"), Diff(INSERT,"4745740f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"40; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"21cc5a84"), Diff(INSERT,"4745740f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"13"), Diff(INSERT,"20"), Diff(EQUAL,"0; newValue=710; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6a8c5520"), Diff(INSERT,"56300832"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"13"), Diff(INSERT,"20"), Diff(EQUAL,"0; newValue=710; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6a8c5520"), Diff(INSERT,"56300832"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"00; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6a8c5520"), Diff(INSERT,"56300832"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"00; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6a8c5520"), Diff(INSERT,"56300832"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"13"), Diff(INSERT,"20"), Diff(EQUAL,"0; newValue=710; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"21b05ba6"), Diff(INSERT,"c0b9611"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"13"), Diff(INSERT,"20"), Diff(EQUAL,"0; newValue=710; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"21b05ba6"), Diff(INSERT,"c0b9611"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"00; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"21b05ba6"), Diff(INSERT,"c0b9611"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"00; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"21b05ba6"), Diff(INSERT,"c0b9611"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"13"), Diff(INSERT,"20"), Diff(EQUAL,"0; newValue=710; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"b20e4b3"), Diff(INSERT,"3fe7e591"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"13"), Diff(INSERT,"20"), Diff(EQUAL,"0; newValue=710; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"b20e4b3"), Diff(INSERT,"3fe7e591"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"00; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"b20e4b3"), Diff(INSERT,"3fe7e591"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"00; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"b20e4b3"), Diff(INSERT,"3fe7e591"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"13"), Diff(INSERT,"20"), Diff(EQUAL,"0; newValue=710; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"487b8729"), Diff(INSERT,"27087577"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"13"), Diff(INSERT,"20"), Diff(EQUAL,"0; newValue=710; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"487b8729"), Diff(INSERT,"27087577"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,"90; newValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"90; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"487b8729"), Diff(INSERT,"27087577"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,"90; newValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"90; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"487b8729"), Diff(INSERT,"27087577"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"9"), Diff(INSERT,"16"), Diff(EQUAL,"3; newValue=673; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"40d6fe53"), Diff(INSERT,"1677b8c0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"9"), Diff(INSERT,"16"), Diff(EQUAL,"3; newValue=673; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"40d6fe53"), Diff(INSERT,"1677b8c0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,"01; newValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"01; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"40d6fe53"), Diff(INSERT,"1677b8c0"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL,"01; newValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"01; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"40d6fe53"), Diff(INSERT,"1677b8c0"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="2097" _type="PauseCommand" date="Sat Mar 19 19:27:01 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15513365">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3181]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2096" _type="ShellCommand" date="Sat Mar 19 19:27:01 EDT 2022" starttimestamp="1647716908162" timestamp="15513365" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2099" _type="PauseCommand" date="Sat Mar 19 19:27:18 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="15529859">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[16494]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2098" _type="ShellCommand" date="Sat Mar 19 19:27:18 EDT 2022" starttimestamp="1647716908162" timestamp="15529859" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2101" _type="PauseCommand" date="Sat Mar 19 19:31:11 EDT 2022" range="2m-5m" starttimestamp="1647716908162" timestamp="15762925">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[233066]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2100" _type="ShellCommand" date="Sat Mar 19 19:31:11 EDT 2022" starttimestamp="1647716908162" timestamp="15762925" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2057" _type="Replace" date="Sat Mar 19 19:25:11 EDT 2022" docASTNodeCount="851" docActiveCodeLength="4627" docExpressionCount="578" docLength="4627" endLine="75" insertionLength="1" int_docASTNodeCount="850" int_docActiveCodeLength="4626" int_docExpressionCount="577" int_docLength="4626" length="2" offset="1630" startLine="75" starttimestamp="1647716908162" timestamp="15403740">
    <deletedText><![CDATA[30]]></deletedText>
    <insertedText><![CDATA[0]]></insertedText>
  </DocumentChange>
  <Command __id="2103" _type="PauseCommand" date="Sat Mar 19 19:31:15 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15767582">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4657]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2104" _type="SelectTextCommand" caretOffset="1650" date="Sat Mar 19 19:31:16 EDT 2022" end="1650" start="1595" starttimestamp="1647716908162" timestamp="15768047" />
  <Command __id="2105" _type="MoveCaretCommand" caretOffset="1886" date="Sat Mar 19 19:31:17 EDT 2022" docOffset="2516" starttimestamp="1647716908162" timestamp="15768992" />
  <Command __id="2107" _type="PauseCommand" date="Sat Mar 19 19:31:37 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="15789359">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[20367]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2106" _type="MoveCaretCommand" caretOffset="1096" date="Sat Mar 19 19:31:37 EDT 2022" docOffset="1726" starttimestamp="1647716908162" timestamp="15789359" />
  <Command __id="2109" _type="PauseCommand" date="Sat Mar 19 19:31:47 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15799000">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9641]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2110" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sat Mar 19 19:32:05 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="15816983" />
  <Command __id="2112" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Sat Mar 19 19:32:05 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="15816984" />
  <Command __id="2113" _type="ShellCommand" date="Sat Mar 19 19:32:05 EDT 2022" starttimestamp="1647716908162" timestamp="15817639" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2114" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Sat Mar 19 19:32:05 EDT 2022" starttimestamp="1647716908162" timestamp="15817717" />
  <Command __id="2115" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:32:05 EDT 2022" starttimestamp="1647716908162" timestamp="15817751" />
  <Command __id="2116" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:32:06 EDT 2022" starttimestamp="1647716908162" timestamp="15817925" />
  <Command __id="2102" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:31:15 EDT 2022" docASTNodeCount="1901" docActiveCodeLength="10557" docExpressionCount="1463" docLength="11635" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15767582">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AnArrayBasedScene.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
public class AnArrayBasedScene implements ArrayBasedScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AnArrayBasedScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AnArrayBasedScene() {
		
	}
	
	public void initScene(int patronAmount, int chefAmount) {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		chefList = new ArrayList<AChef>();
		
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	@Override
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	public Circle getBuffer() {
		return bufferView;
	}
	
	@Override
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="2118" _type="PauseCommand" date="Sat Mar 19 19:32:14 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15826422">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8497]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2119" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:32:15 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="15826882" />
  <Command __id="2121" _type="PauseCommand" date="Sat Mar 19 19:32:18 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15830160">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3278]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2122" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sat Mar 19 19:32:31 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="15843056" />
  <Command __id="2124" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Sat Mar 19 19:32:31 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="15843057" />
  <Command __id="2125" _type="ShellCommand" date="Sat Mar 19 19:32:31 EDT 2022" starttimestamp="1647716908162" timestamp="15843457" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2126" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Sat Mar 19 19:32:31 EDT 2022" starttimestamp="1647716908162" timestamp="15843498" />
  <Command __id="2127" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:32:31 EDT 2022" starttimestamp="1647716908162" timestamp="15843499" />
  <Command __id="2128" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:32:31 EDT 2022" starttimestamp="1647716908162" timestamp="15843684" />
  <Command __id="2117" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:32:14 EDT 2022" docASTNodeCount="56" docActiveCodeLength="375" docExpressionCount="31" docLength="672" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15826422">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ArrayBasedScene.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeListener;
import java.util.List;

import util.models.PropertyListenerRegisterer;

public interface ArrayBasedScene {
	List<APatron> getPatronList();
	List<AChef> getChefList();
	Circle getBuffer();
	void addPropertyChangeListener(PropertyChangeListener arg0);
	//void approachBuffer(int bufferNumber);
	//void approachBuffer(Avatar avatar, int bufferNumber);
//	void chefApproachBuffer(Chef chef, int bufferNumber);
	//void moveToBuffer(Avatar avatar, int bufferNumber);
	//void chefApproachBuffer(int chef, int bufferNumber);
	//public void processHeads(Head aHead);
	void chefToTable(Head aHead);
}
]]></snapshot>
  </Command>
  <Command __id="2130" _type="PauseCommand" date="Sat Mar 19 19:32:34 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15846749">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3065]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2132" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:32:44 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15856410" type="Run" />
  <Command __id="2134" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:32:44 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15856411" type="Run" />
  <Command __id="2129" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:32:34 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15846749">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶"), Diff(INSERT,"import java.lang.reflect.Method;¶"), Diff(EQUAL,"import java.util.ArrayList;¶"), Diff(DELETE,""), Diff(EQUAL,"import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶"), Diff(INSERT,"import bus.uigen.test.AFunctionTester;¶"), Diff(EQUAL,"import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.A"), Diff(DELETE,"nArrayBased"), Diff(INSERT,"ProducerConsumer"), Diff(EQUAL,"Scene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics."), Diff(DELETE,"ArrayBased"), Diff(INSERT,"ProducerConsumer"), Diff(EQUAL,"Scene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static "), Diff(DELETE,"ArrayBased"), Diff(INSERT,"ProducerConsumer"), Diff(EQUAL,"Scene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static "), Diff(DELETE,"ArrayBased"), Diff(INSERT,"ProducerConsumer"), Diff(EQUAL,"Scene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(A"), Diff(DELETE,"nArrayBased"), Diff(INSERT,"ProducerConsumer"), Diff(EQUAL,"Scene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(A"), Diff(DELETE,"nArrayBasedScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);"), Diff(INSERT,"ProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶"), Diff(EQUAL,"¶		OEFrame editor = ObjectEditor.edit(scene);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package main;

import java.awt.BorderLayout;
import java.awt.Component;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import bus.uigen.attributes.AttributeNames;
import bus.uigen.test.AFunctionTester;
import bus.uigen.widgets.VirtualComponent;
import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import controls.Painter;
import factories.AFactory;
import graphics.ACircle;
import graphics.AButtonArrayScene;
import graphics.AChef;
import graphics.ALine;
import graphics.APatron;
import graphics.AScene;
import graphics.AnAngle;
import graphics.AProducerConsumerScene;
import graphics.AnAvatar;
import graphics.Angle;
import graphics.ProducerConsumerScene;
import graphics.Avatar;
import graphics.Line;
import graphics.Scene;
import util.misc.Console;

public class MainClass {
	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();
	static ProducerConsumerScene scene1 = new AButtonArrayScene();

	public static void main(String[] args) {
		
//		animateGraphics();
//		animateArrayUse();
		animateArrayUseInteractive();
	}
	
	public static void animateGraphics() {
		Scene Restaurant = new AScene();
		OEFrame editor = ObjectEditor.edit(Restaurant);
		editor.showDrawPanel();
		editor.showTreePanel();
//		Component c = editor.getDrawComponent();
//		VirtualComponent v = editor.getDrawVirtualComponent();
//		c.addMouseListener(null);

		
	}

	public static void animateArrayUseInteractive() {

		ObjectEditor.confirmSelectedMethodParameters(false);
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");


		try {
			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};
			Object[] initSceneDefaultArgs = {1, 4};
			String[] initSceneArgNames = {"number of patrons", "number of chefs"};

			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);
			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);
			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);

		} catch (NoSuchMethodException e) {
			e.printStackTrace();
		} catch (SecurityException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		OEFrame editor = ObjectEditor.edit(scene);
		//editor.hideMainPanel();
		editor.showDrawPanel();
		editor.showToolBar();
		
//		JFrame frame = new JFrame();
//		//frame.add((Component) console, BorderLayout.CENTER);
//		frame.setSize(1000, 1000);
//		frame.setVisible(true);
		
	
		
//		JPanel panel = new JPanel();
//		JButton button1 = control.getChefToBuffer();
//		panel.add(button1);
//		frame.add(panel);
	}
	
	public static void animatePainterTwo(Painter view) {
		JFrame aFrame = new JFrame();
		aFrame.add((Component) view, BorderLayout.CENTER);
		aFrame.setSize(1000, 1000);
		aFrame.setVisible(true);
		JPanel panel = new JPanel();
		aFrame.add(panel, BorderLayout.NORTH);
	}
	
	public static void moveAvatar() {
		System.out.println("test1");
		scene.getChefList().get(2).getChef().move(30, 0);
		scene.getChefList().get(2).getStove().move(10, 0);
		System.out.println("Moving the stove: \n");
		scene.getChefList().get(3).getStove().move(30, 30);
	}

}
]]></snapshot>
  </Command>
  <Command __id="2136" _type="PauseCommand" date="Sat Mar 19 19:32:48 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15860696">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[4285]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2137" _type="MoveCaretCommand" caretOffset="1107" date="Sat Mar 19 19:32:49 EDT 2022" docOffset="1737" starttimestamp="1647716908162" timestamp="15861002" />
  <Command __id="2139" _type="PauseCommand" date="Sat Mar 19 19:32:56 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15868778">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7776]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2138" _type="MoveCaretCommand" caretOffset="230" date="Sat Mar 19 19:32:56 EDT 2022" docOffset="860" starttimestamp="1647716908162" timestamp="15868778" />
  <Command __id="2141" _type="PauseCommand" date="Sat Mar 19 19:33:00 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15872141">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3363]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2140" _type="MoveCaretCommand" caretOffset="200" date="Sat Mar 19 19:33:00 EDT 2022" docOffset="830" starttimestamp="1647716908162" timestamp="15872141" />
  <Command __id="2135" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:32:48 EDT 2022" docASTNodeCount="1901" docActiveCodeLength="10578" docExpressionCount="1463" docLength="11656" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15860696">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
public class AProducerConsumerScene implements ProducerConsumerScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AProducerConsumerScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AProducerConsumerScene() {
		
	}
	
	public void initScene(int patronAmount, int chefAmount) {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		chefList = new ArrayList<AChef>();
		
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	@Override
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	public Circle getBuffer() {
		return bufferView;
	}
	
	@Override
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="2143" _type="PauseCommand" date="Sat Mar 19 19:33:02 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15873906">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1764]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2144" _type="InsertStringCommand" date="Sat Mar 19 19:33:02 EDT 2022" starttimestamp="1647716908162" timestamp="15873954" timestamp2="15873954">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="2142" _type="Insert" date="Sat Mar 19 19:33:02 EDT 2022" docASTNodeCount="1901" docActiveCodeLength="10580" docExpressionCount="1463" docLength="11658" length="2" offset="830" starttimestamp="1647716908162" timestamp="15873905">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="2146" _type="PauseCommand" date="Sat Mar 19 19:33:06 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15878175">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4221]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2147" _type="InsertStringCommand" date="Sat Mar 19 19:33:06 EDT 2022" starttimestamp="1647716908162" timestamp="15878201" timestamp2="15878201">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="2149" _type="InsertStringCommand" date="Sat Mar 19 19:33:06 EDT 2022" starttimestamp="1647716908162" timestamp="15878249" timestamp2="15878249">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="2151" _type="InsertStringCommand" date="Sat Mar 19 19:33:06 EDT 2022" starttimestamp="1647716908162" timestamp="15878301" timestamp2="15878301">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="2153" _type="InsertStringCommand" date="Sat Mar 19 19:33:06 EDT 2022" starttimestamp="1647716908162" timestamp="15878349" timestamp2="15878349">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="2155" _type="InsertStringCommand" date="Sat Mar 19 19:33:06 EDT 2022" starttimestamp="1647716908162" timestamp="15878487" timestamp2="15878487">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2157" _type="InsertStringCommand" date="Sat Mar 19 19:33:07 EDT 2022" starttimestamp="1647716908162" timestamp="15878866" timestamp2="15878866">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="2159" _type="PauseCommand" date="Sat Mar 19 19:33:09 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15880859">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1993]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2158" _type="MoveCaretCommand" caretOffset="205" date="Sat Mar 19 19:33:09 EDT 2022" docOffset="835" starttimestamp="1647716908162" timestamp="15880859" />
  <Command __id="2160" _type="SelectTextCommand" caretOffset="208" date="Sat Mar 19 19:33:09 EDT 2022" end="208" start="202" starttimestamp="1647716908162" timestamp="15880998" />
  <Command __id="2161" _type="MoveCaretCommand" caretOffset="205" date="Sat Mar 19 19:33:10 EDT 2022" docOffset="835" starttimestamp="1647716908162" timestamp="15881969" />
  <Command __id="2163" _type="PauseCommand" date="Sat Mar 19 19:33:11 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15883427">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1458]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2162" _type="SelectTextCommand" caretOffset="208" date="Sat Mar 19 19:33:11 EDT 2022" end="208" start="204" starttimestamp="1647716908162" timestamp="15883427" />
  <DocumentChange __id="2145" _type="Insert" date="Sat Mar 19 19:33:06 EDT 2022" docASTNodeCount="1903" docActiveCodeLength="10586" docExpressionCount="1465" docLength="11664" length="6" offset="832" repeat="6" starttimestamp="1647716908162" timestamp="15878175" timestamp2="15878820">
    <text><![CDATA[@LABEL]]></text>
  </DocumentChange>
  <Command __id="2165" _type="PauseCommand" date="Sat Mar 19 19:33:12 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15884766">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1339]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="2164" _type="Replace" date="Sat Mar 19 19:33:12 EDT 2022" docASTNodeCount="1903" docActiveCodeLength="10583" docExpressionCount="1465" docLength="11661" endLine="32" insertionLength="1" int_docASTNodeCount="1903" int_docActiveCodeLength="10582" int_docExpressionCount="1465" int_docLength="11660" length="4" offset="834" startLine="32" starttimestamp="1647716908162" timestamp="15884766">
    <deletedText><![CDATA[ABEL]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <Command __id="2166" _type="InsertStringCommand" date="Sat Mar 19 19:33:12 EDT 2022" starttimestamp="1647716908162" timestamp="15884812" timestamp2="15884812">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2168" _type="InsertStringCommand" date="Sat Mar 19 19:33:13 EDT 2022" starttimestamp="1647716908162" timestamp="15885794" timestamp2="15885794">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2170" _type="InsertStringCommand" date="Sat Mar 19 19:33:13 EDT 2022" starttimestamp="1647716908162" timestamp="15885826" timestamp2="15885826">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2172" _type="InsertStringCommand" date="Sat Mar 19 19:33:14 EDT 2022" starttimestamp="1647716908162" timestamp="15885868" timestamp2="15885868">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2174" _type="PauseCommand" date="Sat Mar 19 19:33:20 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15891954">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[6086]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2173" _type="ShellCommand" date="Sat Mar 19 19:33:20 EDT 2022" starttimestamp="1647716908162" timestamp="15891954" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2175" _type="ShellCommand" date="Sat Mar 19 19:33:20 EDT 2022" starttimestamp="1647716908162" timestamp="15892072" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2167" _type="Insert" date="Sat Mar 19 19:33:13 EDT 2022" docASTNodeCount="1903" docActiveCodeLength="10586" docExpressionCount="1465" docLength="11664" length="3" offset="835" repeat="3" starttimestamp="1647716908162" timestamp="15885772" timestamp2="15885830">
    <text><![CDATA[bel]]></text>
  </DocumentChange>
  <DocumentChange __id="2176" _type="Insert" date="Sat Mar 19 19:33:20 EDT 2022" docASTNodeCount="1909" docActiveCodeLength="10618" docExpressionCount="1470" docLength="11696" length="32" offset="504" repeat="2" starttimestamp="1647716908162" timestamp="15892105" timestamp2="15892108">
    <text><![CDATA[
import util.annotations.Label;]]></text>
  </DocumentChange>
  <Command __id="2179" _type="PauseCommand" date="Sat Mar 19 19:33:29 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15901610">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[9505]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="2178" _type="Insert" date="Sat Mar 19 19:33:29 EDT 2022" docASTNodeCount="1909" docActiveCodeLength="10620" docExpressionCount="1470" docLength="11698" length="2" offset="870" starttimestamp="1647716908162" timestamp="15901610">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <Command __id="2180" _type="InsertStringCommand" date="Sat Mar 19 19:33:29 EDT 2022" starttimestamp="1647716908162" timestamp="15901626" timestamp2="15901626">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2183" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:33:30 EDT 2022" starttimestamp="1647716908162" timestamp="15902492" />
  <DocumentChange __id="2181" _type="Delete" date="Sat Mar 19 19:33:30 EDT 2022" docASTNodeCount="1909" docActiveCodeLength="10618" docExpressionCount="1470" docLength="11696" endLine="33" length="2" offset="870" repeat="2" startLine="33" starttimestamp="1647716908162" timestamp="15902446" timestamp2="15902472">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <Command __id="2185" _type="PauseCommand" date="Sat Mar 19 19:33:39 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15910851">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8359]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2186" _type="InsertStringCommand" date="Sat Mar 19 19:33:39 EDT 2022" starttimestamp="1647716908162" timestamp="15910869" timestamp2="15910869">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="2184" _type="Insert" date="Sat Mar 19 19:33:39 EDT 2022" docASTNodeCount="1909" docActiveCodeLength="10620" docExpressionCount="1470" docLength="11698" length="2" offset="870" starttimestamp="1647716908162" timestamp="15910851">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <Command __id="2188" _type="PauseCommand" date="Sat Mar 19 19:33:46 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15918541">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[7672]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="2187" _type="Insert" date="Sat Mar 19 19:33:46 EDT 2022" docASTNodeCount="1910" docActiveCodeLength="10624" docExpressionCount="1471" docLength="11702" length="4" offset="871" repeat="4" starttimestamp="1647716908162" timestamp="15918541" timestamp2="15918649">
    <text><![CDATA[Code]]></text>
  </DocumentChange>
  <Command __id="2189" _type="InsertStringCommand" date="Sat Mar 19 19:33:46 EDT 2022" starttimestamp="1647716908162" timestamp="15918569" timestamp2="15918569">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="2191" _type="InsertStringCommand" date="Sat Mar 19 19:33:46 EDT 2022" starttimestamp="1647716908162" timestamp="15918597" timestamp2="15918597">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2193" _type="InsertStringCommand" date="Sat Mar 19 19:33:46 EDT 2022" starttimestamp="1647716908162" timestamp="15918633" timestamp2="15918633">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2195" _type="InsertStringCommand" date="Sat Mar 19 19:33:46 EDT 2022" starttimestamp="1647716908162" timestamp="15918661" timestamp2="15918661">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="2196" _type="Delete" date="Sat Mar 19 19:33:47 EDT 2022" docASTNodeCount="1909" docActiveCodeLength="10620" docExpressionCount="1470" docLength="11698" endLine="33" length="4" offset="871" repeat="4" startLine="33" starttimestamp="1647716908162" timestamp="15919252" timestamp2="15920011">
    <text><![CDATA[Code]]></text>
  </DocumentChange>
  <Command __id="2197" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:33:47 EDT 2022" starttimestamp="1647716908162" timestamp="15919275" />
  <Command __id="2199" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:33:47 EDT 2022" starttimestamp="1647716908162" timestamp="15919452" />
  <Command __id="2201" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:33:47 EDT 2022" starttimestamp="1647716908162" timestamp="15919599" />
  <Command __id="2203" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:33:48 EDT 2022" starttimestamp="1647716908162" timestamp="15920043" />
  <Command __id="2205" _type="InsertStringCommand" date="Sat Mar 19 19:33:48 EDT 2022" starttimestamp="1647716908162" timestamp="15920513" timestamp2="15920513">
    <data><![CDATA["]]></data>
  </Command>
  <DocumentChange __id="2204" _type="Insert" date="Sat Mar 19 19:33:48 EDT 2022" docASTNodeCount="1910" docActiveCodeLength="10622" docExpressionCount="1471" docLength="11700" length="2" offset="871" starttimestamp="1647716908162" timestamp="15920479">
    <text><![CDATA[""]]></text>
  </DocumentChange>
  <Command __id="2207" _type="PauseCommand" date="Sat Mar 19 19:33:53 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15925153">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4640]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2208" _type="InsertStringCommand" date="Sat Mar 19 19:33:53 EDT 2022" starttimestamp="1647716908162" timestamp="15925166" timestamp2="15925166">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="2211" _type="PauseCommand" date="Sat Mar 19 19:33:54 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15926201">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1035]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2210" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926201" timestamp2="15926201">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2213" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926231" timestamp2="15926231">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2215" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926269" timestamp2="15926269">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2217" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926297" timestamp2="15926297">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2219" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926323" timestamp2="15926323">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2221" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926360" timestamp2="15926360">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2223" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926402" timestamp2="15926402">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2225" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926436" timestamp2="15926436">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2227" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926470" timestamp2="15926470">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="2229" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926512" timestamp2="15926512">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2231" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926560" timestamp2="15926560">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2233" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926598" timestamp2="15926598">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2235" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926632" timestamp2="15926632">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2237" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926667" timestamp2="15926667">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2239" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926708" timestamp2="15926708">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2241" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926743" timestamp2="15926743">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2243" _type="InsertStringCommand" date="Sat Mar 19 19:33:54 EDT 2022" starttimestamp="1647716908162" timestamp="15926786" timestamp2="15926786">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2245" _type="InsertStringCommand" date="Sat Mar 19 19:33:55 EDT 2022" starttimestamp="1647716908162" timestamp="15926854" timestamp2="15926854">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="2247" _type="InsertStringCommand" date="Sat Mar 19 19:33:55 EDT 2022" starttimestamp="1647716908162" timestamp="15926902" timestamp2="15926902">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2249" _type="InsertStringCommand" date="Sat Mar 19 19:33:55 EDT 2022" starttimestamp="1647716908162" timestamp="15926946" timestamp2="15926946">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2251" _type="InsertStringCommand" date="Sat Mar 19 19:33:55 EDT 2022" starttimestamp="1647716908162" timestamp="15926983" timestamp2="15926983">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2253" _type="InsertStringCommand" date="Sat Mar 19 19:33:55 EDT 2022" starttimestamp="1647716908162" timestamp="15927030" timestamp2="15927030">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2255" _type="PauseCommand" date="Sat Mar 19 19:33:56 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15928527">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1497]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2254" _type="MoveCaretCommand" caretOffset="200" date="Sat Mar 19 19:33:56 EDT 2022" docOffset="862" starttimestamp="1647716908162" timestamp="15928527" />
  <Command __id="2257" _type="PauseCommand" date="Sat Mar 19 19:33:59 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15931695">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3168]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2256" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 19:33:59 EDT 2022" starttimestamp="1647716908162" timestamp="15931695" />
  <Command __id="2258" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:33:59 EDT 2022" starttimestamp="1647716908162" timestamp="15931833" />
  <Command __id="2259" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:34:00 EDT 2022" starttimestamp="1647716908162" timestamp="15931997" />
  <Command __id="2261" _type="PauseCommand" date="Sat Mar 19 19:34:08 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15939958">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7961]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2260" _type="MoveCaretCommand" caretOffset="1648" date="Sat Mar 19 19:34:08 EDT 2022" docOffset="2310" starttimestamp="1647716908162" timestamp="15939958" />
  <DocumentChange __id="2206" _type="Insert" date="Sat Mar 19 19:33:53 EDT 2022" docASTNodeCount="1910" docActiveCodeLength="10645" docExpressionCount="1471" docLength="11723" length="23" offset="872" repeat="23" starttimestamp="1647716908162" timestamp="15925153" timestamp2="15927009">
    <text><![CDATA[Producer Consumer Scene]]></text>
  </DocumentChange>
  <Command __id="2263" _type="PauseCommand" date="Sat Mar 19 19:34:09 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15941306">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1348]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2264" _type="InsertStringCommand" date="Sat Mar 19 19:34:09 EDT 2022" starttimestamp="1647716908162" timestamp="15941341" timestamp2="15941341">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2267" _type="PauseCommand" date="Sat Mar 19 19:34:10 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15942348">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1007]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2266" _type="InsertStringCommand" date="Sat Mar 19 19:34:10 EDT 2022" starttimestamp="1647716908162" timestamp="15942348" timestamp2="15942348">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="2269" _type="InsertStringCommand" date="Sat Mar 19 19:34:10 EDT 2022" starttimestamp="1647716908162" timestamp="15942395" timestamp2="15942395">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="2271" _type="InsertStringCommand" date="Sat Mar 19 19:34:10 EDT 2022" starttimestamp="1647716908162" timestamp="15942552" timestamp2="15942552">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2273" _type="InsertStringCommand" date="Sat Mar 19 19:34:10 EDT 2022" starttimestamp="1647716908162" timestamp="15942668" timestamp2="15942668">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2275" _type="InsertStringCommand" date="Sat Mar 19 19:34:10 EDT 2022" starttimestamp="1647716908162" timestamp="15942771" timestamp2="15942771">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2277" _type="InsertStringCommand" date="Sat Mar 19 19:34:11 EDT 2022" starttimestamp="1647716908162" timestamp="15942874" timestamp2="15942874">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2279" _type="InsertStringCommand" date="Sat Mar 19 19:34:11 EDT 2022" starttimestamp="1647716908162" timestamp="15943315" timestamp2="15943315">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2281" _type="PauseCommand" date="Sat Mar 19 19:34:14 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15946313">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2998]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2280" _type="MoveCaretCommand" caretOffset="1655" date="Sat Mar 19 19:34:14 EDT 2022" docOffset="2317" starttimestamp="1647716908162" timestamp="15946313" />
  <DocumentChange __id="2262" _type="Insert" date="Sat Mar 19 19:34:09 EDT 2022" docASTNodeCount="1912" docActiveCodeLength="10656" docExpressionCount="1473" docLength="11734" length="11" offset="2310" repeat="8" starttimestamp="1647716908162" timestamp="15941306" timestamp2="15943292">
    <text><![CDATA[
	@Lable()]]></text>
  </DocumentChange>
  <Command __id="2283" _type="PauseCommand" date="Sat Mar 19 19:34:15 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15947602">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1289]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2284" _type="InsertStringCommand" date="Sat Mar 19 19:34:15 EDT 2022" starttimestamp="1647716908162" timestamp="15947636" timestamp2="15947636">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2285" _type="MoveCaretCommand" caretOffset="1658" date="Sat Mar 19 19:34:16 EDT 2022" docOffset="2320" starttimestamp="1647716908162" timestamp="15948526" />
  <DocumentChange __id="2282" _type="Insert" date="Sat Mar 19 19:34:15 EDT 2022" docASTNodeCount="1912" docActiveCodeLength="10657" docExpressionCount="1473" docLength="11735" length="1" offset="2317" starttimestamp="1647716908162" timestamp="15947602">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <Command __id="2287" _type="PauseCommand" date="Sat Mar 19 19:34:17 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15949825">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1299]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="2286" _type="Delete" date="Sat Mar 19 19:34:17 EDT 2022" docASTNodeCount="1912" docActiveCodeLength="10656" docExpressionCount="1473" docLength="11734" endLine="81" length="1" offset="2319" startLine="81" starttimestamp="1647716908162" timestamp="15949825">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <Command __id="2288" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:34:18 EDT 2022" starttimestamp="1647716908162" timestamp="15949856" />
  <Command __id="2289" _type="MoveCaretCommand" caretOffset="1658" date="Sat Mar 19 19:34:18 EDT 2022" docOffset="2320" starttimestamp="1647716908162" timestamp="15950602" />
  <DocumentChange __id="2290" _type="Insert" date="Sat Mar 19 19:34:19 EDT 2022" docASTNodeCount="1912" docActiveCodeLength="10659" docExpressionCount="1473" docLength="11737" length="3" offset="2321" starttimestamp="1647716908162" timestamp="15951471">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <Command __id="2291" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.smartEnter" date="Sat Mar 19 19:34:19 EDT 2022" starttimestamp="1647716908162" timestamp="15951490" />
  <Command __id="2293" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:34:20 EDT 2022" starttimestamp="1647716908162" timestamp="15952434" />
  <Command __id="2296" _type="PauseCommand" date="Sat Mar 19 19:34:22 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15953904">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1470]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2295" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:34:22 EDT 2022" starttimestamp="1647716908162" timestamp="15953904" />
  <Command __id="2297" _type="MoveCaretCommand" caretOffset="1657" date="Sat Mar 19 19:34:23 EDT 2022" docOffset="2319" starttimestamp="1647716908162" timestamp="15954870" />
  <Command __id="2299" _type="PauseCommand" date="Sat Mar 19 19:34:24 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15956624">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1754]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2298" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sat Mar 19 19:34:24 EDT 2022" starttimestamp="1647716908162" timestamp="15956624" />
  <DocumentChange __id="2292" _type="Delete" date="Sat Mar 19 19:34:20 EDT 2022" docASTNodeCount="1912" docActiveCodeLength="10656" docExpressionCount="1473" docLength="11734" endLine="82" length="3" offset="2321" repeat="2" startLine="81" starttimestamp="1647716908162" timestamp="15952417" timestamp2="15953840">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <Command __id="2301" _type="PauseCommand" date="Sat Mar 19 19:34:26 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15958662">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2038]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2302" _type="InsertStringCommand" date="Sat Mar 19 19:34:26 EDT 2022" starttimestamp="1647716908162" timestamp="15958677" timestamp2="15958677">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="2305" _type="PauseCommand" date="Sat Mar 19 19:34:28 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15960042">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1365]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2304" _type="InsertStringCommand" date="Sat Mar 19 19:34:28 EDT 2022" starttimestamp="1647716908162" timestamp="15960042" timestamp2="15960042">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="2307" _type="InsertStringCommand" date="Sat Mar 19 19:34:28 EDT 2022" starttimestamp="1647716908162" timestamp="15960225" timestamp2="15960225">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2309" _type="InsertStringCommand" date="Sat Mar 19 19:34:28 EDT 2022" starttimestamp="1647716908162" timestamp="15960311" timestamp2="15960311">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2311" _type="InsertStringCommand" date="Sat Mar 19 19:34:28 EDT 2022" starttimestamp="1647716908162" timestamp="15960435" timestamp2="15960435">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2313" _type="InsertStringCommand" date="Sat Mar 19 19:34:28 EDT 2022" starttimestamp="1647716908162" timestamp="15960537" timestamp2="15960537">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2315" _type="InsertStringCommand" date="Sat Mar 19 19:34:29 EDT 2022" starttimestamp="1647716908162" timestamp="15960849" timestamp2="15960849">
    <data><![CDATA[S]]></data>
  </Command>
  <DocumentChange __id="2300" _type="Insert" date="Sat Mar 19 19:34:26 EDT 2022" docASTNodeCount="1913" docActiveCodeLength="10664" docExpressionCount="1474" docLength="11742" length="8" offset="2320" repeat="7" starttimestamp="1647716908162" timestamp="15958662" timestamp2="15960829">
    <text><![CDATA["Init S"]]></text>
  </DocumentChange>
  <Command __id="2317" _type="PauseCommand" date="Sat Mar 19 19:34:32 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15963915">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3066]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2318" _type="InsertStringCommand" date="Sat Mar 19 19:34:32 EDT 2022" starttimestamp="1647716908162" timestamp="15963930" timestamp2="15963930">
    <data><![CDATA[c]]></data>
  </Command>
  <DocumentChange __id="2316" _type="Insert" date="Sat Mar 19 19:34:32 EDT 2022" docASTNodeCount="1913" docActiveCodeLength="10665" docExpressionCount="1474" docLength="11743" length="1" offset="2327" starttimestamp="1647716908162" timestamp="15963915">
    <text><![CDATA[c]]></text>
  </DocumentChange>
  <Command __id="2320" _type="PauseCommand" date="Sat Mar 19 19:34:34 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15965961">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2031]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2321" _type="InsertStringCommand" date="Sat Mar 19 19:34:34 EDT 2022" starttimestamp="1647716908162" timestamp="15965975" timestamp2="15965975">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2323" _type="InsertStringCommand" date="Sat Mar 19 19:34:34 EDT 2022" starttimestamp="1647716908162" timestamp="15966007" timestamp2="15966007">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2325" _type="InsertStringCommand" date="Sat Mar 19 19:34:34 EDT 2022" starttimestamp="1647716908162" timestamp="15966044" timestamp2="15966044">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2327" _type="PauseCommand" date="Sat Mar 19 19:34:35 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15967270">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1226]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2326" _type="MoveCaretCommand" caretOffset="1671" date="Sat Mar 19 19:34:35 EDT 2022" docOffset="2333" starttimestamp="1647716908162" timestamp="15967270" />
  <Command __id="2329" _type="PauseCommand" date="Sat Mar 19 19:34:40 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15971921">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4651]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2328" _type="MoveCaretCommand" caretOffset="3895" date="Sat Mar 19 19:34:40 EDT 2022" docOffset="4557" starttimestamp="1647716908162" timestamp="15971921" />
  <DocumentChange __id="2319" _type="Insert" date="Sat Mar 19 19:34:34 EDT 2022" docASTNodeCount="1913" docActiveCodeLength="10668" docExpressionCount="1474" docLength="11746" length="3" offset="2328" repeat="3" starttimestamp="1647716908162" timestamp="15965961" timestamp2="15966027">
    <text><![CDATA[ene]]></text>
  </DocumentChange>
  <Command __id="2331" _type="PauseCommand" date="Sat Mar 19 19:34:42 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15974226">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2305]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2332" _type="InsertStringCommand" date="Sat Mar 19 19:34:42 EDT 2022" starttimestamp="1647716908162" timestamp="15974267" timestamp2="15974267">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2334" _type="InsertStringCommand" date="Sat Mar 19 19:34:42 EDT 2022" starttimestamp="1647716908162" timestamp="15974306" timestamp2="15974306">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="2336" _type="InsertStringCommand" date="Sat Mar 19 19:34:42 EDT 2022" starttimestamp="1647716908162" timestamp="15974341" timestamp2="15974341">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="2338" _type="InsertStringCommand" date="Sat Mar 19 19:34:42 EDT 2022" starttimestamp="1647716908162" timestamp="15974373" timestamp2="15974373">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2340" _type="InsertStringCommand" date="Sat Mar 19 19:34:42 EDT 2022" starttimestamp="1647716908162" timestamp="15974459" timestamp2="15974459">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2342" _type="InsertStringCommand" date="Sat Mar 19 19:34:43 EDT 2022" starttimestamp="1647716908162" timestamp="15974904" timestamp2="15974904">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2344" _type="InsertStringCommand" date="Sat Mar 19 19:34:43 EDT 2022" starttimestamp="1647716908162" timestamp="15975039" timestamp2="15975039">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2346" _type="InsertStringCommand" date="Sat Mar 19 19:34:43 EDT 2022" starttimestamp="1647716908162" timestamp="15975495" timestamp2="15975495">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2348" _type="InsertStringCommand" date="Sat Mar 19 19:34:44 EDT 2022" starttimestamp="1647716908162" timestamp="15976312" timestamp2="15976312">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="2351" _type="PauseCommand" date="Sat Mar 19 19:34:46 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15977975">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1663]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2350" _type="InsertStringCommand" date="Sat Mar 19 19:34:46 EDT 2022" starttimestamp="1647716908162" timestamp="15977975" timestamp2="15977975">
    <data><![CDATA[C]]></data>
  </Command>
  <DocumentChange __id="2330" _type="Insert" date="Sat Mar 19 19:34:42 EDT 2022" docASTNodeCount="1916" docActiveCodeLength="10682" docExpressionCount="1477" docLength="11760" length="14" offset="4557" repeat="10" starttimestamp="1647716908162" timestamp="15974226" timestamp2="15977954">
    <text><![CDATA[
	@Label("C")]]></text>
  </DocumentChange>
  <Command __id="2353" _type="PauseCommand" date="Sat Mar 19 19:34:49 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15980971">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2996]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2354" _type="InsertStringCommand" date="Sat Mar 19 19:34:49 EDT 2022" starttimestamp="1647716908162" timestamp="15980996" timestamp2="15980996">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="2357" _type="PauseCommand" date="Sat Mar 19 19:34:50 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15982025">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1029]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2356" _type="InsertStringCommand" date="Sat Mar 19 19:34:50 EDT 2022" starttimestamp="1647716908162" timestamp="15982025" timestamp2="15982025">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2359" _type="InsertStringCommand" date="Sat Mar 19 19:34:50 EDT 2022" starttimestamp="1647716908162" timestamp="15982056" timestamp2="15982056">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2361" _type="InsertStringCommand" date="Sat Mar 19 19:34:50 EDT 2022" starttimestamp="1647716908162" timestamp="15982099" timestamp2="15982099">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2363" _type="InsertStringCommand" date="Sat Mar 19 19:34:50 EDT 2022" starttimestamp="1647716908162" timestamp="15982135" timestamp2="15982135">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2365" _type="InsertStringCommand" date="Sat Mar 19 19:34:50 EDT 2022" starttimestamp="1647716908162" timestamp="15982167" timestamp2="15982167">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2367" _type="InsertStringCommand" date="Sat Mar 19 19:34:50 EDT 2022" starttimestamp="1647716908162" timestamp="15982197" timestamp2="15982197">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2369" _type="InsertStringCommand" date="Sat Mar 19 19:34:50 EDT 2022" starttimestamp="1647716908162" timestamp="15982233" timestamp2="15982233">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2371" _type="InsertStringCommand" date="Sat Mar 19 19:34:50 EDT 2022" starttimestamp="1647716908162" timestamp="15982277" timestamp2="15982277">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="2373" _type="InsertStringCommand" date="Sat Mar 19 19:34:50 EDT 2022" starttimestamp="1647716908162" timestamp="15982326" timestamp2="15982326">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2375" _type="InsertStringCommand" date="Sat Mar 19 19:34:50 EDT 2022" starttimestamp="1647716908162" timestamp="15982368" timestamp2="15982368">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2377" _type="InsertStringCommand" date="Sat Mar 19 19:34:50 EDT 2022" starttimestamp="1647716908162" timestamp="15982400" timestamp2="15982400">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2379" _type="InsertStringCommand" date="Sat Mar 19 19:34:50 EDT 2022" starttimestamp="1647716908162" timestamp="15982443" timestamp2="15982443">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2381" _type="InsertStringCommand" date="Sat Mar 19 19:34:50 EDT 2022" starttimestamp="1647716908162" timestamp="15982482" timestamp2="15982482">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2383" _type="InsertStringCommand" date="Sat Mar 19 19:34:50 EDT 2022" starttimestamp="1647716908162" timestamp="15982524" timestamp2="15982524">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2385" _type="InsertStringCommand" date="Sat Mar 19 19:34:50 EDT 2022" starttimestamp="1647716908162" timestamp="15982559" timestamp2="15982559">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2386" _type="MoveCaretCommand" caretOffset="3925" date="Sat Mar 19 19:34:51 EDT 2022" docOffset="4587" starttimestamp="1647716908162" timestamp="15983506" />
  <Command __id="2388" _type="PauseCommand" date="Sat Mar 19 19:34:53 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="15984972">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1466]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2387" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 19:34:53 EDT 2022" starttimestamp="1647716908162" timestamp="15984972" />
  <Command __id="2389" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:34:53 EDT 2022" starttimestamp="1647716908162" timestamp="15985054" />
  <Command __id="2390" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:34:53 EDT 2022" starttimestamp="1647716908162" timestamp="15985252" />
  <DocumentChange __id="2352" _type="Insert" date="Sat Mar 19 19:34:49 EDT 2022" docASTNodeCount="1916" docActiveCodeLength="10698" docExpressionCount="1477" docLength="11776" length="16" offset="4569" repeat="16" starttimestamp="1647716908162" timestamp="15980971" timestamp2="15982542">
    <text><![CDATA[hef to the table]]></text>
  </DocumentChange>
  <Command __id="2392" _type="PauseCommand" date="Sat Mar 19 19:34:55 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15987289">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2037]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2393" _type="MoveCaretCommand" caretOffset="1261" date="Sat Mar 19 19:34:55 EDT 2022" docOffset="2222" starttimestamp="1647716908162" timestamp="15987458" />
  <Command __id="2395" _type="PauseCommand" date="Sat Mar 19 19:35:02 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="15994114">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6656]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2394" _type="MoveCaretCommand" caretOffset="801" date="Sat Mar 19 19:35:02 EDT 2022" docOffset="1762" starttimestamp="1647716908162" timestamp="15994114" />
  <Command __id="2396" _type="MoveCaretCommand" caretOffset="801" date="Sat Mar 19 19:35:02 EDT 2022" docOffset="1762" starttimestamp="1647716908162" timestamp="15994115" />
  <Command __id="2398" _type="PauseCommand" date="Sat Mar 19 19:35:06 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="15998681">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4566]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2397" _type="MoveCaretCommand" caretOffset="917" date="Sat Mar 19 19:35:06 EDT 2022" docOffset="1878" starttimestamp="1647716908162" timestamp="15998681" />
  <Command __id="2399" _type="MoveCaretCommand" caretOffset="917" date="Sat Mar 19 19:35:06 EDT 2022" docOffset="1878" starttimestamp="1647716908162" timestamp="15998681" />
  <Command __id="2401" _type="InsertStringCommand" date="Sat Mar 19 19:35:07 EDT 2022" starttimestamp="1647716908162" timestamp="15999343" timestamp2="15999343">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2402" _type="InsertStringCommand" date="Sat Mar 19 19:35:07 EDT 2022" starttimestamp="1647716908162" timestamp="15999343" timestamp2="15999343">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2404" _type="InsertStringCommand" date="Sat Mar 19 19:35:07 EDT 2022" starttimestamp="1647716908162" timestamp="15999456" timestamp2="15999456">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2405" _type="InsertStringCommand" date="Sat Mar 19 19:35:07 EDT 2022" starttimestamp="1647716908162" timestamp="15999456" timestamp2="15999456">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2407" _type="PauseCommand" date="Sat Mar 19 19:35:08 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16000799">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1343]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2406" _type="MoveCaretCommand" caretOffset="1152" date="Sat Mar 19 19:35:08 EDT 2022" docOffset="2113" starttimestamp="1647716908162" timestamp="16000799" />
  <Command __id="2408" _type="MoveCaretCommand" caretOffset="1152" date="Sat Mar 19 19:35:08 EDT 2022" docOffset="2113" starttimestamp="1647716908162" timestamp="16000799" />
  <Command __id="2391" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:34:55 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="15987289">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2400" _type="Insert" date="Sat Mar 19 19:35:07 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3255" docExpressionCount="347" docLength="3873" length="2" offset="1878" repeat="2" starttimestamp="1647716908162" timestamp="15999317" timestamp2="15999434">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="2410" _type="PauseCommand" date="Sat Mar 19 19:35:10 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16002368">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1569]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2411" _type="InsertStringCommand" date="Sat Mar 19 19:35:10 EDT 2022" starttimestamp="1647716908162" timestamp="16002398" timestamp2="16002398">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2412" _type="InsertStringCommand" date="Sat Mar 19 19:35:10 EDT 2022" starttimestamp="1647716908162" timestamp="16002399" timestamp2="16002399">
    <data><![CDATA[/]]></data>
  </Command>
  <DocumentChange __id="2409" _type="Insert" date="Sat Mar 19 19:35:10 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3256" docExpressionCount="347" docLength="3874" length="1" offset="2113" starttimestamp="1647716908162" timestamp="16002368">
    <text><![CDATA[/]]></text>
  </DocumentChange>
  <Command __id="2414" _type="PauseCommand" date="Sat Mar 19 19:35:12 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16004383">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1984]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2415" _type="InsertStringCommand" date="Sat Mar 19 19:35:12 EDT 2022" starttimestamp="1647716908162" timestamp="16004408" timestamp2="16004408">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2416" _type="InsertStringCommand" date="Sat Mar 19 19:35:12 EDT 2022" starttimestamp="1647716908162" timestamp="16004408" timestamp2="16004408">
    <data><![CDATA[/]]></data>
  </Command>
  <DocumentChange __id="2413" _type="Insert" date="Sat Mar 19 19:35:12 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3135" docExpressionCount="337" docLength="3875" length="1" offset="2114" starttimestamp="1647716908162" timestamp="16004383">
    <text><![CDATA[/]]></text>
  </DocumentChange>
  <Command __id="2418" _type="PauseCommand" date="Sat Mar 19 19:35:18 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16009990">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5582]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2419" _type="MoveCaretCommand" caretOffset="3925" date="Sat Mar 19 19:35:18 EDT 2022" docOffset="4587" starttimestamp="1647716908162" timestamp="16010125" />
  <Command __id="2421" _type="PauseCommand" date="Sat Mar 19 19:35:24 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16016327">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6202]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2417" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:35:18 EDT 2022" docASTNodeCount="1916" docActiveCodeLength="10698" docExpressionCount="1477" docLength="11776" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16009990">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶"), Diff(INSERT,"import util.annotations.Label;¶"), Diff(EQUAL,"import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶"), Diff(INSERT,"@Label("Producer Consumer Scene")¶"), Diff(EQUAL,"public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		¶	}¶	¶	"), Diff(INSERT,"@Label("Init Scene")¶	"), Diff(EQUAL,"public void initScene(int patronAmount, int chefAmount) {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		chefList = new ArrayList<AChef>();¶		¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	public Circle getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	"), Diff(INSERT,"@Label("Chef to the table")¶	"), Diff(EQUAL,"public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
@Label("Producer Consumer Scene")
public class AProducerConsumerScene implements ProducerConsumerScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AProducerConsumerScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AProducerConsumerScene() {
		
	}
	
	@Label("Init Scene")
	public void initScene(int patronAmount, int chefAmount) {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		chefList = new ArrayList<AChef>();
		
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	@Override
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	public Circle getBuffer() {
		return bufferView;
	}
	
	@Override
	@Label("Chef to the table")
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="2420" _type="MoveCaretCommand" caretOffset="3895" date="Sat Mar 19 19:35:24 EDT 2022" docOffset="4557" starttimestamp="1647716908162" timestamp="16016327" />
  <Command __id="2423" _type="InsertStringCommand" date="Sat Mar 19 19:35:24 EDT 2022" starttimestamp="1647716908162" timestamp="16016622" timestamp2="16016622">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2426" _type="PauseCommand" date="Sat Mar 19 19:35:26 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16018251">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1629]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2425" _type="InsertStringCommand" date="Sat Mar 19 19:35:26 EDT 2022" starttimestamp="1647716908162" timestamp="16018251" timestamp2="16018251">
    <data><![CDATA[@]]></data>
  </Command>
  <DocumentChange __id="2422" _type="Insert" date="Sat Mar 19 19:35:24 EDT 2022" docASTNodeCount="1916" docActiveCodeLength="10702" docExpressionCount="1477" docLength="11780" length="4" offset="4557" repeat="2" starttimestamp="1647716908162" timestamp="16016596" timestamp2="16018212">
    <text><![CDATA[
	@]]></text>
  </DocumentChange>
  <Command __id="2428" _type="PauseCommand" date="Sat Mar 19 19:35:30 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16022254">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4002]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2429" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:35:30 EDT 2022" starttimestamp="1647716908162" timestamp="16022278" />
  <Command __id="2431" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:35:30 EDT 2022" starttimestamp="1647716908162" timestamp="16022783" />
  <Command __id="2433" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:35:31 EDT 2022" starttimestamp="1647716908162" timestamp="16023232" />
  <Command __id="2435" _type="PauseCommand" date="Sat Mar 19 19:35:32 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16024517">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1285]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2434" _type="MoveCaretCommand" caretOffset="3824" date="Sat Mar 19 19:35:32 EDT 2022" docOffset="4486" starttimestamp="1647716908162" timestamp="16024517" />
  <Command __id="2437" _type="InsertStringCommand" date="Sat Mar 19 19:35:33 EDT 2022" starttimestamp="1647716908162" timestamp="16024879" timestamp2="16024879">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="2427" _type="Delete" date="Sat Mar 19 19:35:30 EDT 2022" docASTNodeCount="1916" docActiveCodeLength="10698" docExpressionCount="1477" docLength="11776" endLine="160" length="4" offset="4557" repeat="3" startLine="159" starttimestamp="1647716908162" timestamp="16022253" timestamp2="16023198">
    <text><![CDATA[
	@]]></text>
  </DocumentChange>
  <DocumentChange __id="2436" _type="Insert" date="Sat Mar 19 19:35:33 EDT 2022" docASTNodeCount="1916" docActiveCodeLength="10701" docExpressionCount="1477" docLength="11779" length="3" offset="4486" starttimestamp="1647716908162" timestamp="16024842">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <Command __id="2439" _type="PauseCommand" date="Sat Mar 19 19:35:35 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16027193">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2314]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2440" _type="InsertStringCommand" date="Sat Mar 19 19:35:35 EDT 2022" starttimestamp="1647716908162" timestamp="16027215" timestamp2="16027215">
    <data><![CDATA[@]]></data>
  </Command>
  <DocumentChange __id="2438" _type="Insert" date="Sat Mar 19 19:35:35 EDT 2022" docASTNodeCount="1916" docActiveCodeLength="10702" docExpressionCount="1477" docLength="11780" length="1" offset="4489" starttimestamp="1647716908162" timestamp="16027193">
    <text><![CDATA[@]]></text>
  </DocumentChange>
  <Command __id="2442" _type="PauseCommand" date="Sat Mar 19 19:35:38 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16030230">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3015]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2443" _type="InsertStringCommand" date="Sat Mar 19 19:35:38 EDT 2022" starttimestamp="1647716908162" timestamp="16030270" timestamp2="16030270">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="2445" _type="InsertStringCommand" date="Sat Mar 19 19:35:38 EDT 2022" starttimestamp="1647716908162" timestamp="16030310" timestamp2="16030310">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2447" _type="InsertStringCommand" date="Sat Mar 19 19:35:38 EDT 2022" starttimestamp="1647716908162" timestamp="16030339" timestamp2="16030339">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2449" _type="InsertStringCommand" date="Sat Mar 19 19:35:38 EDT 2022" starttimestamp="1647716908162" timestamp="16030374" timestamp2="16030374">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2451" _type="InsertStringCommand" date="Sat Mar 19 19:35:38 EDT 2022" starttimestamp="1647716908162" timestamp="16030397" timestamp2="16030397">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2453" _type="InsertStringCommand" date="Sat Mar 19 19:35:38 EDT 2022" starttimestamp="1647716908162" timestamp="16030434" timestamp2="16030434">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2455" _type="InsertStringCommand" date="Sat Mar 19 19:35:38 EDT 2022" starttimestamp="1647716908162" timestamp="16030463" timestamp2="16030463">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2457" _type="InsertStringCommand" date="Sat Mar 19 19:35:38 EDT 2022" starttimestamp="1647716908162" timestamp="16030498" timestamp2="16030498">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2459" _type="InsertStringCommand" date="Sat Mar 19 19:35:38 EDT 2022" starttimestamp="1647716908162" timestamp="16030538" timestamp2="16030538">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2461" _type="InsertStringCommand" date="Sat Mar 19 19:35:38 EDT 2022" starttimestamp="1647716908162" timestamp="16030579" timestamp2="16030579">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2463" _type="InsertStringCommand" date="Sat Mar 19 19:35:38 EDT 2022" starttimestamp="1647716908162" timestamp="16030624" timestamp2="16030624">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2465" _type="InsertStringCommand" date="Sat Mar 19 19:35:38 EDT 2022" starttimestamp="1647716908162" timestamp="16030654" timestamp2="16030654">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2467" _type="InsertStringCommand" date="Sat Mar 19 19:35:38 EDT 2022" starttimestamp="1647716908162" timestamp="16030683" timestamp2="16030683">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2469" _type="PauseCommand" date="Sat Mar 19 19:35:40 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16031851">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1168]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2468" _type="MoveCaretCommand" caretOffset="3830" date="Sat Mar 19 19:35:40 EDT 2022" docOffset="4492" starttimestamp="1647716908162" timestamp="16031851" />
  <Command __id="2470" _type="SelectTextCommand" caretOffset="3835" date="Sat Mar 19 19:35:40 EDT 2022" end="3835" start="3827" starttimestamp="1647716908162" timestamp="16031988" />
  <DocumentChange __id="2441" _type="Insert" date="Sat Mar 19 19:35:38 EDT 2022" docASTNodeCount="1919" docActiveCodeLength="10716" docExpressionCount="1480" docLength="11794" length="14" offset="4490" repeat="13" starttimestamp="1647716908162" timestamp="16030230" timestamp2="16030669">
    <text><![CDATA[Vsisble(false)]]></text>
  </DocumentChange>
  <Command __id="2472" _type="PauseCommand" date="Sat Mar 19 19:35:42 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16034136">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2148]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2473" _type="InsertStringCommand" date="Sat Mar 19 19:35:42 EDT 2022" starttimestamp="1647716908162" timestamp="16034178" timestamp2="16034178">
    <data><![CDATA[@]]></data>
  </Command>
  <DocumentChange __id="2471" _type="Replace" date="Sat Mar 19 19:35:42 EDT 2022" docASTNodeCount="1916" docActiveCodeLength="10709" docExpressionCount="1477" docLength="11787" endLine="155" insertionLength="1" int_docASTNodeCount="1917" int_docActiveCodeLength="10708" int_docExpressionCount="1478" int_docLength="11786" length="8" offset="4489" startLine="155" starttimestamp="1647716908162" timestamp="16034136">
    <deletedText><![CDATA[@Vsisble]]></deletedText>
    <insertedText><![CDATA[@]]></insertedText>
  </DocumentChange>
  <Command __id="2475" _type="PauseCommand" date="Sat Mar 19 19:35:46 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16038167">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3989]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2476" _type="InsertStringCommand" date="Sat Mar 19 19:35:46 EDT 2022" starttimestamp="1647716908162" timestamp="16038208" timestamp2="16038208">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="2478" _type="InsertStringCommand" date="Sat Mar 19 19:35:46 EDT 2022" starttimestamp="1647716908162" timestamp="16038253" timestamp2="16038253">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2480" _type="InsertStringCommand" date="Sat Mar 19 19:35:46 EDT 2022" starttimestamp="1647716908162" timestamp="16038305" timestamp2="16038305">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2482" _type="InsertStringCommand" date="Sat Mar 19 19:35:46 EDT 2022" starttimestamp="1647716908162" timestamp="16038337" timestamp2="16038337">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2484" _type="InsertStringCommand" date="Sat Mar 19 19:35:46 EDT 2022" starttimestamp="1647716908162" timestamp="16038378" timestamp2="16038378">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2486" _type="InsertStringCommand" date="Sat Mar 19 19:35:46 EDT 2022" starttimestamp="1647716908162" timestamp="16038413" timestamp2="16038413">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2488" _type="InsertStringCommand" date="Sat Mar 19 19:35:46 EDT 2022" starttimestamp="1647716908162" timestamp="16038456" timestamp2="16038456">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2490" _type="PauseCommand" date="Sat Mar 19 19:35:49 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16041520">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3064]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2489" _type="ShellCommand" date="Sat Mar 19 19:35:49 EDT 2022" starttimestamp="1647716908162" timestamp="16041520" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2491" _type="ShellCommand" date="Sat Mar 19 19:35:49 EDT 2022" starttimestamp="1647716908162" timestamp="16041652" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2494" _type="MoveCaretCommand" caretOffset="3842" date="Sat Mar 19 19:35:50 EDT 2022" docOffset="4538" starttimestamp="1647716908162" timestamp="16042576" />
  <Command __id="2496" _type="PauseCommand" date="Sat Mar 19 19:35:54 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16046061">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3485]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2495" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 19:35:54 EDT 2022" starttimestamp="1647716908162" timestamp="16046061" />
  <Command __id="2497" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:35:54 EDT 2022" starttimestamp="1647716908162" timestamp="16046147" />
  <Command __id="2498" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:35:54 EDT 2022" starttimestamp="1647716908162" timestamp="16046338" />
  <Command __id="2500" _type="MoveCaretCommand" caretOffset="1154" date="Sat Mar 19 19:35:55 EDT 2022" docOffset="2115" starttimestamp="1647716908162" timestamp="16047214" />
  <Command __id="2502" _type="PauseCommand" date="Sat Mar 19 19:35:56 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16048343">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1129]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2501" _type="MoveCaretCommand" caretOffset="1287" date="Sat Mar 19 19:35:56 EDT 2022" docOffset="2248" starttimestamp="1647716908162" timestamp="16048343" />
  <Command __id="2503" _type="MoveCaretCommand" caretOffset="1287" date="Sat Mar 19 19:35:56 EDT 2022" docOffset="2248" starttimestamp="1647716908162" timestamp="16048343" />
  <Command __id="2505" _type="PauseCommand" date="Sat Mar 19 19:35:59 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16051468">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3125]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2508" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:36:03 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16055700" type="Run" />
  <Command __id="2510" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:36:03 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16055703" type="Run" />
  <Command __id="2512" _type="PauseCommand" date="Sat Mar 19 19:36:04 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16056771">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1068]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2511" _type="ConsoleOutput" date="Sat Mar 19 19:36:04 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16056771" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"3¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@3ca5066a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@3ca5066a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=540; newValue=340; propagationId=null; source=graphics.ALine@3ca5066a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=540; newValue=340; propagationId=null; source=graphics.ALine@3ca5066a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@4745740f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@4745740f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=540; newValue=340; propagationId=null; source=graphics.ALine@4745740f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=540; newValue=340; propagationId=null; source=graphics.ALine@4745740f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@56300832]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@56300832]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=500; newValue=300; propagationId=null; source=graphics.ALine@56300832]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=500; newValue=300; propagationId=null; source=graphics.ALine@56300832]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@c0b9611]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@c0b9611]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=500; newValue=300; propagationId=null; source=graphics.ALine@c0b9611]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=500; newValue=300; propagationId=null; source=graphics.ALine@c0b9611]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@3fe7e591]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@3fe7e591]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=500; newValue=300; propagationId=null; source=graphics.ALine@3fe7e591]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=500; newValue=300; propagationId=null; source=graphics.ALine@3fe7e591]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@27087577]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=710; propagationId=null; source=graphics.ALine@27087577]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=490; newValue=290; propagationId=null; source=graphics.ALine@27087577]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=490; newValue=290; propagationId=null; source=graphics.ALine@27087577]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=673; propagationId=null; source=graphics.AHead@1677b8c0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=673; propagationId=null; source=graphics.AHead@1677b8c0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=401; newValue=201; propagationId=null; source=graphics.AHead@1677b8c0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=401; newValue=201; propagationId=null; source=graphics.AHead@1677b8c0]"), Diff(INSERT,"W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2513" _type="ShellCommand" date="Sat Mar 19 19:36:05 EDT 2022" starttimestamp="1647716908162" timestamp="16057123" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2514" _type="ConsoleOutput" date="Sat Mar 19 19:36:05 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16057501" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AProducerConsumerScene@7bd7d6d6
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AProducerConsumerScene@7bd7d6d6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2515" _type="ConsoleOutput" date="Sat Mar 19 19:36:05 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16057722" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Producer Consumer Scene.Patron List not in range.
W*** Value: null of Producer Consumer Scene.Chef List not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.A"), Diff(INSERT,"Value: null of Producer Consumer Scene.Patron List not in range.¶W*** Value: null of "), Diff(EQUAL,"Producer"), Diff(INSERT," "), Diff(EQUAL,"Consumer"), Diff(INSERT," "), Diff(EQUAL,"Scene"), Diff(DELETE,"@7bd7d6d6"), Diff(INSERT,".Chef List not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2517" _type="PauseCommand" date="Sat Mar 19 19:36:11 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16063066">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5344]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2516" _type="ConsoleOutput" date="Sat Mar 19 19:36:11 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16063066" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7e88efc5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7e88efc5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7e88efc5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7e88efc5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@29b6f1c7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@29b6f1c7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@29b6f1c7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@29b6f1c7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@613df2c7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@613df2c7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@613df2c7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@613df2c7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@62ca5415]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@62ca5415]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@62ca5415]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@62ca5415]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5b05694e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5b05694e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5b05694e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5b05694e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45a39320]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45a39320]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@45a39320]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@45a39320]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@4b06ea99]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@4b06ea99]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@4b06ea99]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@4b06ea99]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Producer Consumer Scene.Patron List not in range.¶W*** Value: null of Producer Consumer Scene.Chef List not in range."), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7e88efc5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7e88efc5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7e88efc5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7e88efc5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@29b6f1c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@29b6f1c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@29b6f1c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@29b6f1c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@613df2c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@613df2c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@613df2c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@613df2c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@62ca5415]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@62ca5415]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@62ca5415]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@62ca5415]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5b05694e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5b05694e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5b05694e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5b05694e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45a39320]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45a39320]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@45a39320]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@45a39320]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@4b06ea99]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@4b06ea99]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@4b06ea99]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@4b06ea99]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2518" _type="ConsoleOutput" date="Sat Mar 19 19:36:11 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16063268" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7e88efc5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7e88efc5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7e88efc5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7e88efc5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@29b6f1c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@29b6f1c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@29b6f1c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@29b6f1c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@613df2c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@613df2c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@613df2c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@613df2c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@62ca5415]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@62ca5415]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@62ca5415]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@62ca5415]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5b05694e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5b05694e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5b05694e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5b05694e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45a39320]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45a39320]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@45a39320]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@45a39320]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@4b06ea99]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@4b06ea99]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@4b06ea99]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@4b06ea99]¶Moving the stove:"), Diff(INSERT,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list."), Diff(EQUAL," ¶")]]]></diff>
  </Command>
  <Command __id="2519" _type="ConsoleOutput" date="Sat Mar 19 19:36:11 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16063350" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"Table"), Diff(EQUAL,".addPropertyChangeListener("), Diff(DELETE,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use"), Diff(INSERT," should be associated with"), Diff(EQUAL," annotation"), Diff(INSERT,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"interface java.beans."), Diff(EQUAL,"Property"), Diff(DELETE,"Change"), Diff(INSERT," "), Diff(EQUAL,"Listener)"), Diff(DELETE," for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Line"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="2520" _type="ConsoleOutput" date="Sat Mar 19 19:36:11 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16063781" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(INSERT," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Tab"), Diff(INSERT,"nAng"), Diff(EQUAL,"le.addPropertyChangeListener("), Diff(INSERT,"graphics.Angle,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with"), Diff(INSERT,"¶W*** Use"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"Property Listener)¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(INSERT,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2521" _type="ConsoleOutput" date="Sat Mar 19 19:36:12 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16063876" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2523" _type="PauseCommand" date="Sat Mar 19 19:36:13 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16064938">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1062]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2522" _type="ConsoleOutput" date="Sat Mar 19 19:36:13 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16064938" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2525" _type="PauseCommand" date="Sat Mar 19 19:36:15 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16067714">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2775]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2524" _type="ConsoleOutput" date="Sat Mar 19 19:36:15 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16067713" type="ConsoleOutput">
    <outputString><![CDATA[W*** Assuming implicit pattern: No Pattern
  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer
E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@20239135
W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef."), Diff(INSERT,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke "), Diff(EQUAL,"addPropertyChangeListener"), Diff(DELETE,"("), Diff(INSERT," on"), Diff(EQUAL,"graphics."), Diff(DELETE,"Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"ABoundedBuffer@20239135¶W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2527" _type="PauseCommand" date="Sat Mar 19 19:36:23 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16075673">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7960]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2526" _type="ShellCommand" date="Sat Mar 19 19:36:23 EDT 2022" starttimestamp="1647716908162" timestamp="16075673" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2528" _type="MoveCaretCommand" caretOffset="2344" date="Sat Mar 19 19:36:23 EDT 2022" docOffset="3305" starttimestamp="1647716908162" timestamp="16075760" />
  <Command __id="2529" _type="MoveCaretCommand" caretOffset="2344" date="Sat Mar 19 19:36:23 EDT 2022" docOffset="3305" starttimestamp="1647716908162" timestamp="16075760" />
  <Command __id="2531" _type="PauseCommand" date="Sat Mar 19 19:36:27 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16079471">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3711]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2530" _type="ShellCommand" date="Sat Mar 19 19:36:27 EDT 2022" starttimestamp="1647716908162" timestamp="16079471" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2533" _type="PauseCommand" date="Sat Mar 19 19:36:35 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16087237">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7766]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2532" _type="ShellCommand" date="Sat Mar 19 19:36:35 EDT 2022" starttimestamp="1647716908162" timestamp="16087237" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2534" _type="MoveCaretCommand" caretOffset="1901" date="Sat Mar 19 19:36:35 EDT 2022" docOffset="2862" starttimestamp="1647716908162" timestamp="16087334" />
  <Command __id="2535" _type="MoveCaretCommand" caretOffset="1901" date="Sat Mar 19 19:36:35 EDT 2022" docOffset="2862" starttimestamp="1647716908162" timestamp="16087334" />
  <DocumentChange __id="2474" _type="Insert" date="Sat Mar 19 19:35:46 EDT 2022" docASTNodeCount="1919" docActiveCodeLength="10716" docExpressionCount="1480" docLength="11794" length="7" offset="4490" repeat="7" starttimestamp="1647716908162" timestamp="16038167" timestamp2="16038416">
    <text><![CDATA[Visible]]></text>
  </DocumentChange>
  <DocumentChange __id="2492" _type="Insert" date="Sat Mar 19 19:35:49 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10750" docExpressionCount="1485" docLength="11828" length="34" offset="712" repeat="2" starttimestamp="1647716908162" timestamp="16041669" timestamp2="16041674">
    <text><![CDATA[
import util.annotations.Visible;]]></text>
  </DocumentChange>
  <Command __id="2499" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:35:54 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3135" docExpressionCount="337" docLength="3875" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16046631">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		"), Diff(INSERT,"//"), Diff(EQUAL,"ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		"), Diff(INSERT,"//"), Diff(EQUAL,"ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package main;

import java.awt.BorderLayout;
import java.awt.Component;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import bus.uigen.attributes.AttributeNames;
import bus.uigen.test.AFunctionTester;
import bus.uigen.widgets.VirtualComponent;
import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import controls.Painter;
import factories.AFactory;
import graphics.ACircle;
import graphics.AButtonArrayScene;
import graphics.AChef;
import graphics.ALine;
import graphics.APatron;
import graphics.AScene;
import graphics.AnAngle;
import graphics.AProducerConsumerScene;
import graphics.AnAvatar;
import graphics.Angle;
import graphics.ProducerConsumerScene;
import graphics.Avatar;
import graphics.Line;
import graphics.Scene;
import util.misc.Console;

public class MainClass {
	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();
	static ProducerConsumerScene scene1 = new AButtonArrayScene();

	public static void main(String[] args) {
		
//		animateGraphics();
//		animateArrayUse();
		animateArrayUseInteractive();
	}
	
	public static void animateGraphics() {
		Scene Restaurant = new AScene();
		OEFrame editor = ObjectEditor.edit(Restaurant);
		editor.showDrawPanel();
		editor.showTreePanel();
//		Component c = editor.getDrawComponent();
//		VirtualComponent v = editor.getDrawVirtualComponent();
//		c.addMouseListener(null);

		
	}

	public static void animateArrayUseInteractive() {

		ObjectEditor.confirmSelectedMethodParameters(false);
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);
		//ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);
		//ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");


		try {
			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};
			Object[] initSceneDefaultArgs = {1, 4};
			String[] initSceneArgNames = {"number of patrons", "number of chefs"};

			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);
			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);
			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);

		} catch (NoSuchMethodException e) {
			e.printStackTrace();
		} catch (SecurityException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		OEFrame editor = ObjectEditor.edit(scene);
		//editor.hideMainPanel();
		editor.showDrawPanel();
		editor.showToolBar();
		
//		JFrame frame = new JFrame();
//		//frame.add((Component) console, BorderLayout.CENTER);
//		frame.setSize(1000, 1000);
//		frame.setVisible(true);
		
	
		
//		JPanel panel = new JPanel();
//		JButton button1 = control.getChefToBuffer();
//		panel.add(button1);
//		frame.add(panel);
	}
	
	public static void animatePainterTwo(Painter view) {
		JFrame aFrame = new JFrame();
		aFrame.add((Component) view, BorderLayout.CENTER);
		aFrame.setSize(1000, 1000);
		aFrame.setVisible(true);
		JPanel panel = new JPanel();
		aFrame.add(panel, BorderLayout.NORTH);
	}
	
	public static void moveAvatar() {
		System.out.println("test1");
		scene.getChefList().get(2).getChef().move(30, 0);
		scene.getChefList().get(2).getStove().move(10, 0);
		System.out.println("Moving the stove: \n");
		scene.getChefList().get(3).getStove().move(30, 30);
	}

}
]]></snapshot>
  </Command>
  <Command __id="2537" _type="PauseCommand" date="Sat Mar 19 19:36:38 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16089904">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2570]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2538" _type="MoveCaretCommand" caretOffset="3842" date="Sat Mar 19 19:36:38 EDT 2022" docOffset="4538" starttimestamp="1647716908162" timestamp="16090091" />
  <Command __id="2536" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:36:38 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10750" docExpressionCount="1485" docLength="11828" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16089904">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;"), Diff(INSERT,"¶import util.annotations.Visible;"), Diff(EQUAL,"¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		chefList = new ArrayList<AChef>();¶		¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	"), Diff(INSERT,"@Visible(false)¶	"), Diff(EQUAL,"public Circle getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
@Label("Producer Consumer Scene")
public class AProducerConsumerScene implements ProducerConsumerScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AProducerConsumerScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AProducerConsumerScene() {
		
	}
	
	@Label("Init Scene")
	public void initScene(int patronAmount, int chefAmount) {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		chefList = new ArrayList<AChef>();
		
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	@Override
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	@Visible(false)
	public Circle getBuffer() {
		return bufferView;
	}
	
	@Override
	@Label("Chef to the table")
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="2540" _type="PauseCommand" date="Sat Mar 19 19:36:43 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16094876">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4785]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2541" _type="MoveCaretCommand" caretOffset="1901" date="Sat Mar 19 19:36:43 EDT 2022" docOffset="2862" starttimestamp="1647716908162" timestamp="16095058" />
  <Command __id="2543" _type="PauseCommand" date="Sat Mar 19 19:36:47 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16099252">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4194]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2542" _type="ShellCommand" date="Sat Mar 19 19:36:47 EDT 2022" starttimestamp="1647716908162" timestamp="16099252" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2545" _type="PauseCommand" date="Sat Mar 19 19:36:58 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16110530">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11278]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2544" _type="ShellCommand" date="Sat Mar 19 19:36:58 EDT 2022" starttimestamp="1647716908162" timestamp="16110530" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2547" _type="MoveCaretCommand" caretOffset="3842" date="Sat Mar 19 19:36:59 EDT 2022" docOffset="4538" starttimestamp="1647716908162" timestamp="16111482" />
  <Command __id="2549" _type="PauseCommand" date="Sat Mar 19 19:37:07 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16119200">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7718]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2548" _type="MoveCaretCommand" caretOffset="219" date="Sat Mar 19 19:37:07 EDT 2022" docOffset="915" starttimestamp="1647716908162" timestamp="16119200" />
  <Command __id="2551" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:37:07 EDT 2022" starttimestamp="1647716908162" timestamp="16119751" />
  <Command __id="2553" _type="InsertStringCommand" date="Sat Mar 19 19:37:08 EDT 2022" starttimestamp="1647716908162" timestamp="16119934" timestamp2="16119934">
    <data><![CDATA[-]]></data>
  </Command>
  <Command __id="2539" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:36:43 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3135" docExpressionCount="337" docLength="3875" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16094876">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		//ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		//ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2546" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:36:59 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10750" docExpressionCount="1485" docLength="11828" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16111300">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		chefList = new ArrayList<AChef>();¶		¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	@Visible(false)¶	public Circle getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2550" _type="Delete" date="Sat Mar 19 19:37:07 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10749" docExpressionCount="1485" docLength="11827" endLine="34" length="1" offset="914" startLine="34" starttimestamp="1647716908162" timestamp="16119725">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="2552" _type="Insert" date="Sat Mar 19 19:37:08 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10750" docExpressionCount="1485" docLength="11828" length="1" offset="914" starttimestamp="1647716908162" timestamp="16119893">
    <text><![CDATA[-]]></text>
  </DocumentChange>
  <Command __id="2555" _type="PauseCommand" date="Sat Mar 19 19:37:11 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16123305">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3371]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2556" _type="MoveCaretCommand" caretOffset="1901" date="Sat Mar 19 19:37:11 EDT 2022" docOffset="2862" starttimestamp="1647716908162" timestamp="16123488" />
  <Command __id="2558" _type="PauseCommand" date="Sat Mar 19 19:37:14 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16125851">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2363]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2557" _type="MoveCaretCommand" caretOffset="919" date="Sat Mar 19 19:37:14 EDT 2022" docOffset="1880" starttimestamp="1647716908162" timestamp="16125851" />
  <Command __id="2559" _type="MoveCaretCommand" caretOffset="919" date="Sat Mar 19 19:37:14 EDT 2022" docOffset="1880" starttimestamp="1647716908162" timestamp="16125851" />
  <Command __id="2554" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:37:11 EDT 2022" docASTNodeCount="481" docActiveCodeLength="3135" docExpressionCount="337" docLength="3875" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16123305">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		//ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		//ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2561" _type="PauseCommand" date="Sat Mar 19 19:37:15 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16127145">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1294]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="2560" _type="Delete" date="Sat Mar 19 19:37:15 EDT 2022" docASTNodeCount="493" docActiveCodeLength="3246" docExpressionCount="347" docLength="3873" endLine="65" length="2" offset="1878" repeat="2" startLine="65" starttimestamp="1647716908162" timestamp="16127145" timestamp2="16127177">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="2562" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:37:15 EDT 2022" starttimestamp="1647716908162" timestamp="16127169" />
  <Command __id="2563" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:37:15 EDT 2022" starttimestamp="1647716908162" timestamp="16127170" />
  <Command __id="2565" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:37:15 EDT 2022" starttimestamp="1647716908162" timestamp="16127194" />
  <Command __id="2566" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:37:15 EDT 2022" starttimestamp="1647716908162" timestamp="16127194" />
  <Command __id="2567" _type="MoveCaretCommand" caretOffset="1152" date="Sat Mar 19 19:37:16 EDT 2022" docOffset="2113" starttimestamp="1647716908162" timestamp="16127858" />
  <Command __id="2568" _type="MoveCaretCommand" caretOffset="1152" date="Sat Mar 19 19:37:16 EDT 2022" docOffset="2113" starttimestamp="1647716908162" timestamp="16127858" />
  <Command __id="2578" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:37:20 EDT 2022" starttimestamp="1647716908162" timestamp="16132619" />
  <Command __id="2580" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:37:20 EDT 2022" starttimestamp="1647716908162" timestamp="16132769" />
  <Command __id="2581" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:37:21 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16133329" type="Run" />
  <Command __id="2582" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:37:21 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16133329" type="Run" />
  <Command __id="2584" _type="PauseCommand" date="Sat Mar 19 19:37:23 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16134988">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1659]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2583" _type="ConsoleOutput" date="Sat Mar 19 19:37:23 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16134988" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@20239135¶W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(INSERT,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2585" _type="ShellCommand" date="Sat Mar 19 19:37:23 EDT 2022" starttimestamp="1647716908162" timestamp="16135445" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2586" _type="ConsoleOutput" date="Sat Mar 19 19:37:23 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16135741" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AProducerConsumerScene@239a307b
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AProducerConsumerScene@239a307b"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2587" _type="ConsoleOutput" date="Sat Mar 19 19:37:24 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16136039" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Producer-Consumer Scene.Patron List not in range.
W*** Value: null of Producer-Consumer Scene.Chef List not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.A"), Diff(INSERT,"Value: null of Producer-Consumer Scene.Patron List not in range.¶W*** Value: null of "), Diff(EQUAL,"Producer"), Diff(INSERT,"-"), Diff(EQUAL,"Consumer"), Diff(INSERT," "), Diff(EQUAL,"Scene"), Diff(DELETE,"@239a307b"), Diff(INSERT,".Chef List not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2589" _type="PauseCommand" date="Sat Mar 19 19:37:35 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16147672">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[11633]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2588" _type="ShellCommand" date="Sat Mar 19 19:37:35 EDT 2022" starttimestamp="1647716908162" timestamp="16147672" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2569" _type="Delete" date="Sat Mar 19 19:37:16 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" endLine="67" length="2" offset="2111" repeat="2" startLine="67" starttimestamp="1647716908162" timestamp="16128108" timestamp2="16128233">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="2591" _type="PauseCommand" date="Sat Mar 19 19:37:36 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16148809">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1137]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2592" _type="MoveCaretCommand" caretOffset="219" date="Sat Mar 19 19:37:37 EDT 2022" docOffset="915" starttimestamp="1647716908162" timestamp="16149064" />
  <Command __id="2594" _type="PauseCommand" date="Sat Mar 19 19:37:47 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16159689">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10625]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2593" _type="MoveCaretCommand" caretOffset="3666" date="Sat Mar 19 19:37:47 EDT 2022" docOffset="4362" starttimestamp="1647716908162" timestamp="16159689" />
  <Command __id="2590" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:37:36 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10750" docExpressionCount="1485" docLength="11828" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16148809">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer"), Diff(DELETE," "), Diff(INSERT,"-"), Diff(EQUAL,"Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		chefList = new ArrayList<AChef>();¶		¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	@Visible(false)¶	public Circle getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
@Label("Producer-Consumer Scene")
public class AProducerConsumerScene implements ProducerConsumerScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AProducerConsumerScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AProducerConsumerScene() {
		
	}
	
	@Label("Init Scene")
	public void initScene(int patronAmount, int chefAmount) {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		chefList = new ArrayList<AChef>();
		
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	@Override
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	@Visible(false)
	public Circle getBuffer() {
		return bufferView;
	}
	
	@Override
	@Label("Chef to the table")
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="2596" _type="PauseCommand" date="Sat Mar 19 19:37:48 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16160767">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1078]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2597" _type="InsertStringCommand" date="Sat Mar 19 19:37:48 EDT 2022" starttimestamp="1647716908162" timestamp="16160802" timestamp2="16160802">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2599" _type="InsertStringCommand" date="Sat Mar 19 19:37:49 EDT 2022" starttimestamp="1647716908162" timestamp="16161354" timestamp2="16161354">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="2601" _type="PauseCommand" date="Sat Mar 19 19:37:51 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16163823">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2469]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2600" _type="MoveCaretCommand" caretOffset="3835" date="Sat Mar 19 19:37:51 EDT 2022" docOffset="4531" starttimestamp="1647716908162" timestamp="16163823" />
  <Command __id="2602" _type="SelectTextCommand" caretOffset="3839" date="Sat Mar 19 19:37:52 EDT 2022" end="3839" start="3831" starttimestamp="1647716908162" timestamp="16163989" />
  <Command __id="2603" _type="MoveCaretCommand" caretOffset="3835" date="Sat Mar 19 19:37:52 EDT 2022" docOffset="4531" starttimestamp="1647716908162" timestamp="16164762" />
  <Command __id="2604" _type="SelectTextCommand" caretOffset="3839" date="Sat Mar 19 19:37:53 EDT 2022" end="3839" start="3831" starttimestamp="1647716908162" timestamp="16164896" />
  <Command __id="2605" _type="SelectTextCommand" caretOffset="3848" date="Sat Mar 19 19:37:53 EDT 2022" end="3848" start="3830" starttimestamp="1647716908162" timestamp="16165116" />
  <Command __id="2607" _type="PauseCommand" date="Sat Mar 19 19:37:54 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16166701">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1585]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2606" _type="MoveCaretCommand" caretOffset="3670" date="Sat Mar 19 19:37:54 EDT 2022" docOffset="4366" starttimestamp="1647716908162" timestamp="16166701" />
  <DocumentChange __id="2595" _type="Insert" date="Sat Mar 19 19:37:48 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10754" docExpressionCount="1485" docLength="11832" length="4" offset="4362" repeat="2" starttimestamp="1647716908162" timestamp="16160767" timestamp2="16161344">
    <text><![CDATA[
	@]]></text>
  </DocumentChange>
  <Command __id="2609" _type="PauseCommand" date="Sat Mar 19 19:37:55 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16167715">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1014]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="2608" _type="Delete" date="Sat Mar 19 19:37:55 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10753" docExpressionCount="1485" docLength="11831" endLine="145" length="1" offset="4365" startLine="145" starttimestamp="1647716908162" timestamp="16167715">
    <text><![CDATA[@]]></text>
  </DocumentChange>
  <Command __id="2610" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:37:55 EDT 2022" starttimestamp="1647716908162" timestamp="16167736" />
  <Command __id="2618" _type="PasteCommand" date="Sat Mar 19 19:37:56 EDT 2022" starttimestamp="1647716908162" timestamp="16168015" />
  <DocumentChange __id="2611" _type="Replace" date="Sat Mar 19 19:37:55 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10862" docExpressionCount="1485" docLength="11940" endLine="145" insertionLength="110" int_docASTNodeCount="1925" int_docActiveCodeLength="10752" int_docExpressionCount="1485" int_docLength="11830" length="1" offset="4364" startLine="145" starttimestamp="1647716908162" timestamp="16167772">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	ObjectEditor.setMethodAttribute(AnArrayBasedScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);
]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2612" _type="Delete" date="Sat Mar 19 19:37:56 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10858" docExpressionCount="1485" docLength="11936" endLine="14" length="4" offset="332" startLine="12" starttimestamp="1647716908162" timestamp="16167874">
    <text><![CDATA[

]]></text>
  </DocumentChange>
  <DocumentChange __id="2613" _type="Insert" date="Sat Mar 19 19:37:56 EDT 2022" docASTNodeCount="1939" docActiveCodeLength="10939" docExpressionCount="1497" docLength="12017" length="81" offset="332" repeat="5" starttimestamp="1647716908162" timestamp="16167881" timestamp2="16167922">
    <text><![CDATA[

import bus.uigen.ObjectEditor;
import bus.uigen.attributes.AttributeNames;
]]></text>
  </DocumentChange>
  <Command __id="2620" _type="PauseCommand" date="Sat Mar 19 19:37:57 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16169685">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1670]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2630" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:38:00 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="16172095" />
  <Command __id="2628" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:37:59 EDT 2022" projectName="null" starttimestamp="1647716908162" timestamp="16171753">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="2632" _type="PauseCommand" date="Sat Mar 19 19:38:02 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16174018">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1923]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2633" _type="MoveCaretCommand" caretOffset="3835" date="Sat Mar 19 19:38:02 EDT 2022" docOffset="4531" starttimestamp="1647716908162" timestamp="16174226" />
  <Command __id="2635" _type="PauseCommand" date="Sat Mar 19 19:38:04 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16176452">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2226]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2634" _type="SelectTextCommand" caretOffset="3830" date="Sat Mar 19 19:38:04 EDT 2022" end="3845" start="3830" starttimestamp="1647716908162" timestamp="16176452" />
  <Command __id="2637" _type="PauseCommand" date="Sat Mar 19 19:38:06 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16178682">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2230]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2636" _type="MoveCaretCommand" caretOffset="3669" date="Sat Mar 19 19:38:06 EDT 2022" docOffset="4365" starttimestamp="1647716908162" timestamp="16178682" />
  <Command __id="2639" _type="PauseCommand" date="Sat Mar 19 19:38:15 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16187638">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8956]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2638" _type="MoveCaretCommand" caretOffset="3767" date="Sat Mar 19 19:38:15 EDT 2022" docOffset="4463" starttimestamp="1647716908162" timestamp="16187638" />
  <Command __id="2641" _type="PauseCommand" date="Sat Mar 19 19:38:17 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16188977">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1339]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2642" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:38:20 EDT 2022" starttimestamp="1647716908162" timestamp="16192671" />
  <Command __id="2644" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:38:20 EDT 2022" starttimestamp="1647716908162" timestamp="16192815" />
  <Command __id="2646" _type="PauseCommand" date="Sat Mar 19 19:38:35 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16207639">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[14824]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2645" _type="MoveCaretCommand" caretOffset="3654" date="Sat Mar 19 19:38:35 EDT 2022" docOffset="4350" starttimestamp="1647716908162" timestamp="16207639" />
  <Command __id="2647" _type="InsertStringCommand" date="Sat Mar 19 19:38:36 EDT 2022" starttimestamp="1647716908162" timestamp="16208011" timestamp2="16208011">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2649" _type="PauseCommand" date="Sat Mar 19 19:38:37 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16209355">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1344]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2654" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:38:42 EDT 2022" starttimestamp="1647716908162" timestamp="16214317" />
  <Command __id="2656" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:38:42 EDT 2022" starttimestamp="1647716908162" timestamp="16214460" />
  <Command __id="2657" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:38:43 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16214841" type="Run" />
  <Command __id="2658" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:38:43 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16214841" type="Run" />
  <Command __id="2660" _type="PauseCommand" date="Sat Mar 19 19:38:44 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16216295">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1454]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2659" _type="ConsoleOutput" date="Sat Mar 19 19:38:44 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16216295" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of "), Diff(INSERT,"public void graphics.A"), Diff(EQUAL,"Producer"), Diff(DELETE,"-"), Diff(EQUAL,"Consumer"), Diff(DELETE," "), Diff(EQUAL,"Scene."), Diff(DELETE,"Patron List not in range.¶W*** Value: null of Producer-Consumer Scene.Chef List not in range."), Diff(INSERT,"addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2661" _type="ShellCommand" date="Sat Mar 19 19:38:44 EDT 2022" starttimestamp="1647716908162" timestamp="16216351" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2662" _type="ConsoleOutput" date="Sat Mar 19 19:38:44 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16216604" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AProducerConsumerScene@43f02ef2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AProducerConsumerScene@43f02ef2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2664" _type="PauseCommand" date="Sat Mar 19 19:38:53 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16225133">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8529]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2663" _type="ConsoleOutput" date="Sat Mar 19 19:38:53 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16225133" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6539f413]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6539f413]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6539f413]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6539f413]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7bda24ae]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7bda24ae]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7bda24ae]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7bda24ae]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@20087ca]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@20087ca]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@20087ca]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@20087ca]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@f324a27]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@f324a27]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E** Could not invoke addPropertyChangeListener ongraphics.AProducerConsumerScene@43f02ef2"), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6539f413]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6539f413]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6539f413]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6539f413]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7bda24ae]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7bda24ae]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7bda24ae]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7bda24ae]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@20087ca]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@20087ca]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@20087ca]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@20087ca]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@f324a27]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@f324a27]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2665" _type="ConsoleOutput" date="Sat Mar 19 19:38:53 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16225151" type="ConsoleOutput">
    <outputString><![CDATA[java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@f324a27]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@f324a27]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2501bebe]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2501bebe]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2501bebe]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2501bebe]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@f5401e4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@f5401e4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@f5401e4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@f5401e4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@9ece913]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@9ece913]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@9ece913]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@9ece913]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1¶"), Diff(EQUAL,"java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"40"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6539f413"), Diff(INSERT,"f324a27"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"40"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6539f413"), Diff(INSERT,"f324a27"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"44"), Diff(INSERT,"10"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"44"), Diff(INSERT,"13"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6539f413"), Diff(INSERT,"2501bebe"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"44"), Diff(INSERT,"10"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"44"), Diff(INSERT,"13"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6539f413"), Diff(INSERT,"2501bebe"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"40"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"7bda24a"), Diff(INSERT,"2501beb"), Diff(EQUAL,"e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"40"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"7bda24a"), Diff(INSERT,"2501beb"), Diff(EQUAL,"e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"44"), Diff(INSERT,"10"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"44"), Diff(INSERT,"13"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"7bda24ae"), Diff(INSERT,"f5401e4"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"44"), Diff(INSERT,"10"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"44"), Diff(INSERT,"13"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"7bda24ae"), Diff(INSERT,"f5401e4"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"10"), Diff(INSERT,"39"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"1"), Diff(EQUAL,"3"), Diff(INSERT,"9"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"20087ca"), Diff(INSERT,"f5401e4"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"10"), Diff(INSERT,"39"), Diff(EQUAL,"0; newValue="), Diff(DELETE,"1"), Diff(EQUAL,"3"), Diff(INSERT,"9"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"20087ca"), Diff(INSERT,"f5401e4"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"400"), Diff(INSERT,"63"), Diff(EQUAL,"; newValue="), Diff(DELETE,"400"), Diff(INSERT,"93"), Diff(EQUAL,"; propagationId=null; source=graphics.A"), Diff(DELETE,"Line@20087ca"), Diff(INSERT,"Head@9ece913"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"400"), Diff(INSERT,"63"), Diff(EQUAL,"; newValue="), Diff(DELETE,"400"), Diff(INSERT,"93"), Diff(EQUAL,"; propagationId=null; source=graphics.A"), Diff(DELETE,"Line@20087ca"), Diff(INSERT,"Head@9ece913"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"100"), Diff(INSERT,"301"), Diff(EQUAL,"; newValue="), Diff(DELETE,"1"), Diff(EQUAL,"30"), Diff(INSERT,"1"), Diff(EQUAL,"; propagationId=null; source=graphics.A"), Diff(DELETE,"Line@f324a27"), Diff(INSERT,"Head@9ece913"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"100"), Diff(INSERT,"301"), Diff(EQUAL,"; newValue="), Diff(DELETE,"1"), Diff(EQUAL,"30"), Diff(INSERT,"1"), Diff(EQUAL,"; propagationId=null; source=graphics.A"), Diff(DELETE,"Line@f324a27]"), Diff(INSERT,"Head@9ece913]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2666" _type="ConsoleOutput" date="Sat Mar 19 19:38:53 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16225389" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 

W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@f324a27]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@f324a27]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2501bebe]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2501bebe]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2501bebe]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2501bebe]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@f5401e4]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@f5401e4]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@f5401e4]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@f5401e4]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@9ece913]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@9ece913]¶java.beans.PropertyChangeEvent["), Diff(INSERT,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable "), Diff(EQUAL,"property"), Diff(DELETE,"N"), Diff(INSERT," n"), Diff(EQUAL,"ame"), Diff(DELETE,"=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@9ece913]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@9ece913]¶Moving the stove: "), Diff(INSERT,"s list. ¶¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2667" _type="ConsoleOutput" date="Sat Mar 19 19:38:53 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16225489" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Line"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(DELETE,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶")]]]></diff>
  </Command>
  <Command __id="2668" _type="ConsoleOutput" date="Sat Mar 19 19:38:54 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16225903" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶"), Diff(EQUAL,"W*** Implicit property ZIndex of  A"), Diff(DELETE,"Line"), Diff(INSERT,"Head"), Diff(EQUAL," ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"Head"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="2669" _type="ConsoleOutput" date="Sat Mar 19 19:38:54 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16226227" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.A"), Diff(DELETE,"nAngle"), Diff(INSERT,"Chef"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶"), Diff(DELETE,"W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="2670" _type="ConsoleOutput" date="Sat Mar 19 19:38:54 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16226734" type="ConsoleOutput">
    <outputString><![CDATA[W*** Assuming implicit pattern: No Pattern
  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer
E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@2a360bbb
W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef."), Diff(INSERT,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke "), Diff(EQUAL,"addPropertyChangeListener"), Diff(DELETE,"("), Diff(INSERT," on"), Diff(EQUAL,"graphics."), Diff(DELETE,"Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"ABoundedBuffer@2a360bbb¶W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2672" _type="PauseCommand" date="Sat Mar 19 19:39:01 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16233072">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6338]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2671" _type="ConsoleOutput" date="Sat Mar 19 19:39:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16233072" type="ConsoleOutput">
    <outputString><![CDATA[test1
Moving the stove: 

W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@2a360bbb"), Diff(INSERT,"test1¶Moving the stove: ¶"), Diff(EQUAL,"¶W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.¶")]]]></diff>
  </Command>
  <Command __id="2674" _type="PauseCommand" date="Sat Mar 19 19:39:12 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16244117">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[11045]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2673" _type="ConsoleOutput" date="Sat Mar 19 19:39:12 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16244117" type="ConsoleOutput">
    <outputString><![CDATA[test1
Moving the stove: 

W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"test1¶Moving the stove: ¶¶W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.¶")]]]></diff>
  </Command>
  <Command __id="2676" _type="PauseCommand" date="Sat Mar 19 19:39:19 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16251643">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7526]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2675" _type="ConsoleOutput" date="Sat Mar 19 19:39:19 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16251643" type="ConsoleOutput">
    <outputString><![CDATA[test1
Moving the stove: 

W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"test1¶Moving the stove: ¶¶W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.¶")]]]></diff>
  </Command>
  <Command __id="2678" _type="PauseCommand" date="Sat Mar 19 19:39:30 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16262167">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10524]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2677" _type="ShellCommand" date="Sat Mar 19 19:39:30 EDT 2022" starttimestamp="1647716908162" timestamp="16262167" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2680" _type="MoveCaretCommand" caretOffset="1150" date="Sat Mar 19 19:39:30 EDT 2022" docOffset="2111" starttimestamp="1647716908162" timestamp="16262517" />
  <Command __id="2682" _type="PauseCommand" date="Sat Mar 19 19:39:34 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16265991">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3474]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2681" _type="MoveCaretCommand" caretOffset="1956" date="Sat Mar 19 19:39:34 EDT 2022" docOffset="2917" starttimestamp="1647716908162" timestamp="16265991" />
  <Command __id="2683" _type="MoveCaretCommand" caretOffset="1956" date="Sat Mar 19 19:39:34 EDT 2022" docOffset="2917" starttimestamp="1647716908162" timestamp="16265991" />
  <Command __id="2685" _type="PauseCommand" date="Sat Mar 19 19:39:38 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16270177">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4186]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2684" _type="MoveCaretCommand" caretOffset="1983" date="Sat Mar 19 19:39:38 EDT 2022" docOffset="2944" starttimestamp="1647716908162" timestamp="16270177" />
  <Command __id="2686" _type="MoveCaretCommand" caretOffset="1983" date="Sat Mar 19 19:39:38 EDT 2022" docOffset="2944" starttimestamp="1647716908162" timestamp="16270177" />
  <Command __id="2687" _type="MoveCaretCommand" caretOffset="2006" date="Sat Mar 19 19:39:39 EDT 2022" docOffset="2967" starttimestamp="1647716908162" timestamp="16270995" />
  <Command __id="2688" _type="MoveCaretCommand" caretOffset="2006" date="Sat Mar 19 19:39:39 EDT 2022" docOffset="2967" starttimestamp="1647716908162" timestamp="16270995" />
  <Command __id="2690" _type="PauseCommand" date="Sat Mar 19 19:39:44 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16276249">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5254]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2689" _type="MoveCaretCommand" caretOffset="1956" date="Sat Mar 19 19:39:44 EDT 2022" docOffset="2917" starttimestamp="1647716908162" timestamp="16276249" />
  <Command __id="2691" _type="MoveCaretCommand" caretOffset="1956" date="Sat Mar 19 19:39:44 EDT 2022" docOffset="2917" starttimestamp="1647716908162" timestamp="16276249" />
  <Command __id="2631" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:38:02 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10753" docExpressionCount="1485" docLength="11831" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16174018">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer-Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		chefList = new ArrayList<AChef>();¶		¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	@Override¶	"), Diff(INSERT,"¶	"), Diff(EQUAL,"public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	@Visible(false)¶	public Circle getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
@Label("Producer-Consumer Scene")
public class AProducerConsumerScene implements ProducerConsumerScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AProducerConsumerScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AProducerConsumerScene() {
		
	}
	
	@Label("Init Scene")
	public void initScene(int patronAmount, int chefAmount) {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		chefList = new ArrayList<AChef>();
		
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	@Override
	
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	@Visible(false)
	public Circle getBuffer() {
		return bufferView;
	}
	
	@Override
	@Label("Chef to the table")
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="2679" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:39:30 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16262312">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		"), Diff(DELETE,"//"), Diff(EQUAL,"ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		"), Diff(DELETE,"//"), Diff(EQUAL,"ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package main;

import java.awt.BorderLayout;
import java.awt.Component;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import bus.uigen.attributes.AttributeNames;
import bus.uigen.test.AFunctionTester;
import bus.uigen.widgets.VirtualComponent;
import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import controls.Painter;
import factories.AFactory;
import graphics.ACircle;
import graphics.AButtonArrayScene;
import graphics.AChef;
import graphics.ALine;
import graphics.APatron;
import graphics.AScene;
import graphics.AnAngle;
import graphics.AProducerConsumerScene;
import graphics.AnAvatar;
import graphics.Angle;
import graphics.ProducerConsumerScene;
import graphics.Avatar;
import graphics.Line;
import graphics.Scene;
import util.misc.Console;

public class MainClass {
	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();
	static ProducerConsumerScene scene1 = new AButtonArrayScene();

	public static void main(String[] args) {
		
//		animateGraphics();
//		animateArrayUse();
		animateArrayUseInteractive();
	}
	
	public static void animateGraphics() {
		Scene Restaurant = new AScene();
		OEFrame editor = ObjectEditor.edit(Restaurant);
		editor.showDrawPanel();
		editor.showTreePanel();
//		Component c = editor.getDrawComponent();
//		VirtualComponent v = editor.getDrawVirtualComponent();
//		c.addMouseListener(null);

		
	}

	public static void animateArrayUseInteractive() {

		ObjectEditor.confirmSelectedMethodParameters(false);
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");


		try {
			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};
			Object[] initSceneDefaultArgs = {1, 4};
			String[] initSceneArgNames = {"number of patrons", "number of chefs"};

			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);
			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);
			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);

		} catch (NoSuchMethodException e) {
			e.printStackTrace();
		} catch (SecurityException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		OEFrame editor = ObjectEditor.edit(scene);
		//editor.hideMainPanel();
		editor.showDrawPanel();
		editor.showToolBar();
		
//		JFrame frame = new JFrame();
//		//frame.add((Component) console, BorderLayout.CENTER);
//		frame.setSize(1000, 1000);
//		frame.setVisible(true);
		
	
		
//		JPanel panel = new JPanel();
//		JButton button1 = control.getChefToBuffer();
//		panel.add(button1);
//		frame.add(panel);
	}
	
	public static void animatePainterTwo(Painter view) {
		JFrame aFrame = new JFrame();
		aFrame.add((Component) view, BorderLayout.CENTER);
		aFrame.setSize(1000, 1000);
		aFrame.setVisible(true);
		JPanel panel = new JPanel();
		aFrame.add(panel, BorderLayout.NORTH);
	}
	
	public static void moveAvatar() {
		System.out.println("test1");
		scene.getChefList().get(2).getChef().move(30, 0);
		scene.getChefList().get(2).getStove().move(10, 0);
		System.out.println("Moving the stove: \n");
		scene.getChefList().get(3).getStove().move(30, 30);
	}

}
]]></snapshot>
  </Command>
  <Command __id="2693" _type="PauseCommand" date="Sat Mar 19 19:39:46 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16278003">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1754]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2694" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:39:46 EDT 2022" starttimestamp="1647716908162" timestamp="16278037" />
  <Command __id="2695" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:39:46 EDT 2022" starttimestamp="1647716908162" timestamp="16278037" />
  <DocumentChange __id="2692" _type="Delete" date="Sat Mar 19 19:39:46 EDT 2022" docASTNodeCount="509" docActiveCodeLength="3390" docExpressionCount="360" docLength="3870" endLine="87" length="1" offset="2916" startLine="87" starttimestamp="1647716908162" timestamp="16278003">
    <text><![CDATA[/]]></text>
  </DocumentChange>
  <Command __id="2697" _type="PauseCommand" date="Sat Mar 19 19:39:48 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16280017">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1980]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2703" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:39:52 EDT 2022" starttimestamp="1647716908162" timestamp="16284354" />
  <Command __id="2705" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:39:52 EDT 2022" starttimestamp="1647716908162" timestamp="16284449" />
  <Command __id="2706" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:39:53 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16284966" type="Run" />
  <Command __id="2707" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:39:53 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16284966" type="Run" />
  <Command __id="2709" _type="PauseCommand" date="Sat Mar 19 19:39:54 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16286329">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1363]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2708" _type="ConsoleOutput" date="Sat Mar 19 19:39:54 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16286329" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1¶Moving the stove: ¶¶W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(INSERT,"W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2710" _type="ShellCommand" date="Sat Mar 19 19:39:54 EDT 2022" starttimestamp="1647716908162" timestamp="16286685" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2711" _type="ConsoleOutput" date="Sat Mar 19 19:39:55 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16287003" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AProducerConsumerScene@43f02ef2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AProducerConsumerScene@43f02ef2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2713" _type="PauseCommand" date="Sat Mar 19 19:40:01 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16293580">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6577]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2712" _type="ConsoleOutput" date="Sat Mar 19 19:40:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16293580" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5e18a7ea]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5e18a7ea]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5e18a7ea]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5e18a7ea]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1124d54c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1124d54c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@1124d54c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@1124d54c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2d9cc743]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2d9cc743]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2d9cc743]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2d9cc743]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@14188aef]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@14188aef]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@14188aef]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@14188aef]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@fa44871]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@fa44871]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@fa44871]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@fa44871]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@381d727c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@381d727c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@381d727c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@381d727c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@73700ce3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@73700ce3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@73700ce3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@73700ce3]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E** Could not invoke addPropertyChangeListener ongraphics.AProducerConsumerScene@43f02ef2"), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5e18a7ea]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5e18a7ea]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5e18a7ea]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5e18a7ea]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1124d54c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1124d54c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@1124d54c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@1124d54c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2d9cc743]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2d9cc743]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2d9cc743]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2d9cc743]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@14188aef]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@14188aef]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@14188aef]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@14188aef]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@fa44871]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@fa44871]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@fa44871]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@fa44871]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@381d727c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@381d727c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@381d727c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@381d727c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@73700ce3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@73700ce3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@73700ce3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@73700ce3]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2714" _type="ConsoleOutput" date="Sat Mar 19 19:40:02 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16293843" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5e18a7ea]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5e18a7ea]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5e18a7ea]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5e18a7ea]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1124d54c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1124d54c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@1124d54c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@1124d54c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2d9cc743]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2d9cc743]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2d9cc743]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2d9cc743]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@14188aef]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@14188aef]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@14188aef]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@14188aef]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@fa44871]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@fa44871]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@fa44871]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@fa44871]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@381d727c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@381d727c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@381d727c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@381d727c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@73700ce3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@73700ce3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@73700ce3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@73700ce3]¶Moving the stove:"), Diff(INSERT,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list."), Diff(EQUAL," ¶")]]]></diff>
  </Command>
  <Command __id="2715" _type="ConsoleOutput" date="Sat Mar 19 19:40:02 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16293906" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"Table"), Diff(EQUAL,".addPropertyChangeListener("), Diff(DELETE,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use"), Diff(INSERT," should be associated with"), Diff(EQUAL," annotation"), Diff(INSERT,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"interface java.beans."), Diff(EQUAL,"Property"), Diff(DELETE,"Change"), Diff(INSERT," "), Diff(EQUAL,"Listener)"), Diff(DELETE," for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Line"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="2716" _type="ConsoleOutput" date="Sat Mar 19 19:40:02 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16294315" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(INSERT," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Tab"), Diff(INSERT,"nAng"), Diff(EQUAL,"le.addPropertyChangeListener("), Diff(INSERT,"graphics.Angle,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with"), Diff(INSERT,"¶W*** Use"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"Property Listener)¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(INSERT,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2717" _type="ConsoleOutput" date="Sat Mar 19 19:40:02 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16294387" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2718" _type="ConsoleOutput" date="Sat Mar 19 19:40:02 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16294793" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2719" _type="ConsoleOutput" date="Sat Mar 19 19:40:03 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16295268" type="ConsoleOutput">
    <outputString><![CDATA[W*** Assuming implicit pattern: No Pattern
  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer
E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@16db361a
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef."), Diff(INSERT,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke "), Diff(EQUAL,"addPropertyChangeListener"), Diff(DELETE,"("), Diff(INSERT," on"), Diff(EQUAL,"graphics."), Diff(DELETE,"Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"ABoundedBuffer@16db361a"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2720" _type="ConsoleOutput" date="Sat Mar 19 19:40:03 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16295405" type="ConsoleOutput">
    <outputString><![CDATA[W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@16db361a"), Diff(INSERT,"Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2722" _type="PauseCommand" date="Sat Mar 19 19:40:09 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16301607">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6202]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2721" _type="ShellCommand" date="Sat Mar 19 19:40:09 EDT 2022" starttimestamp="1647716908162" timestamp="16301607" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2724" _type="PauseCommand" date="Sat Mar 19 19:40:11 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16303385">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1778]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2723" _type="MoveCaretCommand" caretOffset="1954" date="Sat Mar 19 19:40:11 EDT 2022" docOffset="2915" starttimestamp="1647716908162" timestamp="16303385" />
  <Command __id="2725" _type="MoveCaretCommand" caretOffset="1954" date="Sat Mar 19 19:40:11 EDT 2022" docOffset="2915" starttimestamp="1647716908162" timestamp="16303385" />
  <Command __id="2727" _type="InsertStringCommand" date="Sat Mar 19 19:40:12 EDT 2022" starttimestamp="1647716908162" timestamp="16303969" timestamp2="16303969">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2728" _type="InsertStringCommand" date="Sat Mar 19 19:40:12 EDT 2022" starttimestamp="1647716908162" timestamp="16303969" timestamp2="16303969">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2730" _type="InsertStringCommand" date="Sat Mar 19 19:40:12 EDT 2022" starttimestamp="1647716908162" timestamp="16304095" timestamp2="16304095">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="2731" _type="InsertStringCommand" date="Sat Mar 19 19:40:12 EDT 2022" starttimestamp="1647716908162" timestamp="16304095" timestamp2="16304095">
    <data><![CDATA[/]]></data>
  </Command>
  <DocumentChange __id="2696" _type="Delete" date="Sat Mar 19 19:39:48 EDT 2022" docASTNodeCount="509" docActiveCodeLength="3389" docExpressionCount="360" docLength="3869" endLine="87" length="1" offset="2915" startLine="87" starttimestamp="1647716908162" timestamp="16280017">
    <text><![CDATA[/]]></text>
  </DocumentChange>
  <DocumentChange __id="2726" _type="Insert" date="Sat Mar 19 19:40:12 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" length="2" offset="2915" repeat="2" starttimestamp="1647716908162" timestamp="16303950" timestamp2="16304073">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="2733" _type="PauseCommand" date="Sat Mar 19 19:40:15 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16307308">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3213]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2734" _type="MoveCaretCommand" caretOffset="3657" date="Sat Mar 19 19:40:15 EDT 2022" docOffset="4353" starttimestamp="1647716908162" timestamp="16307502" />
  <Command __id="2736" _type="PauseCommand" date="Sat Mar 19 19:40:43 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="16334929">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[27427]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2735" _type="MoveCaretCommand" caretOffset="3791" date="Sat Mar 19 19:40:43 EDT 2022" docOffset="4487" starttimestamp="1647716908162" timestamp="16334929" />
  <Command __id="2737" _type="MoveCaretCommand" caretOffset="3791" date="Sat Mar 19 19:40:43 EDT 2022" docOffset="4487" starttimestamp="1647716908162" timestamp="16334929" />
  <Command __id="2739" _type="PauseCommand" date="Sat Mar 19 19:40:45 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16336854">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1925]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2732" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:40:15 EDT 2022" docASTNodeCount="1931" docActiveCodeLength="10792" docExpressionCount="1491" docLength="11870" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16307308">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer-Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		chefList = new ArrayList<AChef>();¶		¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	"), Diff(INSERT,"¶	¶	"), Diff(EQUAL,"@Override¶	"), Diff(INSERT,"@Visible(false)"), Diff(EQUAL,"¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	"), Diff(INSERT,"@Visible(false)¶	"), Diff(EQUAL,"public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	@Visible(false)¶	public Circle getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
@Label("Producer-Consumer Scene")
public class AProducerConsumerScene implements ProducerConsumerScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AProducerConsumerScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AProducerConsumerScene() {
		
	}
	
	@Label("Init Scene")
	public void initScene(int patronAmount, int chefAmount) {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		chefList = new ArrayList<AChef>();
		
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	
	
	@Override
	@Visible(false)
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	@Visible(false)
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	@Visible(false)
	public Circle getBuffer() {
		return bufferView;
	}
	
	@Override
	@Label("Chef to the table")
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="2738" _type="SelectTextCommand" caretOffset="3791" date="Sat Mar 19 19:40:45 EDT 2022" end="3791" start="3776" starttimestamp="1647716908162" timestamp="16336854" />
  <Command __id="2740" _type="SelectTextCommand" caretOffset="3791" date="Sat Mar 19 19:40:45 EDT 2022" end="3791" start="3776" starttimestamp="1647716908162" timestamp="16336854" />
  <Command __id="2742" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:40:45 EDT 2022" starttimestamp="1647716908162" timestamp="16337318" />
  <Command __id="2743" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:40:45 EDT 2022" starttimestamp="1647716908162" timestamp="16337318" />
  <Command __id="2745" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:40:46 EDT 2022" starttimestamp="1647716908162" timestamp="16338311" />
  <Command __id="2746" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:40:46 EDT 2022" starttimestamp="1647716908162" timestamp="16338311" />
  <Command __id="2749" _type="PauseCommand" date="Sat Mar 19 19:40:47 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16339705">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1394]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2748" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:40:47 EDT 2022" starttimestamp="1647716908162" timestamp="16339705" />
  <Command __id="2750" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:40:47 EDT 2022" starttimestamp="1647716908162" timestamp="16339706" />
  <Command __id="2752" _type="PauseCommand" date="Sat Mar 19 19:40:49 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16341512">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1806]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2751" _type="SelectTextCommand" caretOffset="3690" date="Sat Mar 19 19:40:49 EDT 2022" end="3690" start="3675" starttimestamp="1647716908162" timestamp="16341512" />
  <Command __id="2753" _type="SelectTextCommand" caretOffset="3690" date="Sat Mar 19 19:40:49 EDT 2022" end="3690" start="3675" starttimestamp="1647716908162" timestamp="16341513" />
  <DocumentChange __id="2741" _type="Delete" date="Sat Mar 19 19:40:45 EDT 2022" docASTNodeCount="1928" docActiveCodeLength="10774" docExpressionCount="1488" docLength="11852" endLine="154" length="18" offset="4469" repeat="3" startLine="153" starttimestamp="1647716908162" timestamp="16337302" timestamp2="16339669">
    <text><![CDATA[
	@Visible(false)]]></text>
  </DocumentChange>
  <Command __id="2755" _type="PauseCommand" date="Sat Mar 19 19:40:50 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16342796">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1283]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2756" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:40:50 EDT 2022" starttimestamp="1647716908162" timestamp="16342823" />
  <Command __id="2757" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:40:50 EDT 2022" starttimestamp="1647716908162" timestamp="16342823" />
  <Command __id="2759" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:40:51 EDT 2022" starttimestamp="1647716908162" timestamp="16343818" />
  <Command __id="2760" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:40:51 EDT 2022" starttimestamp="1647716908162" timestamp="16343818" />
  <Command __id="2762" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:40:52 EDT 2022" starttimestamp="1647716908162" timestamp="16344160" />
  <Command __id="2763" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:40:52 EDT 2022" starttimestamp="1647716908162" timestamp="16344160" />
  <Command __id="2765" _type="PauseCommand" date="Sat Mar 19 19:40:53 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16345387">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1227]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2764" _type="MoveCaretCommand" caretOffset="3741" date="Sat Mar 19 19:40:53 EDT 2022" docOffset="4437" starttimestamp="1647716908162" timestamp="16345387" />
  <Command __id="2766" _type="MoveCaretCommand" caretOffset="3741" date="Sat Mar 19 19:40:53 EDT 2022" docOffset="4437" starttimestamp="1647716908162" timestamp="16345388" />
  <DocumentChange __id="2754" _type="Delete" date="Sat Mar 19 19:40:50 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10756" docExpressionCount="1485" docLength="11834" endLine="147" length="18" offset="4368" repeat="3" startLine="146" starttimestamp="1647716908162" timestamp="16342796" timestamp2="16344139">
    <text><![CDATA[
	@Visible(false)]]></text>
  </DocumentChange>
  <Command __id="2768" _type="PauseCommand" date="Sat Mar 19 19:41:04 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16356337">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10949]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2769" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:41:04 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="16356798" />
  <Command __id="2767" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:41:04 EDT 2022" docASTNodeCount="171" docActiveCodeLength="1035" docExpressionCount="102" docLength="1035" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16356337">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\APatron.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeListener;

import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
public class APatron implements Patron {
	Avatar patron;
	Table table;
	
	public APatron() {
		patron = new AnAvatar();
		table = new ATable();
	}

	@Override
	public Avatar getPatron() {
		return patron;
	}

	@Override
	public Table getTable() {
		return table;
	}

	@Override
	public void setPatron(int X, int Y) {
		patron.move(X, Y);
	}

	@Override
	public void setTable(int X, int Y) {
		table.move(X, Y);
	}
	
	@Override
	public void move(int X, int Y) {
		patron.move(X, Y);
		table.move(X, Y);
	}
	
	@Override
	public void addPropertyChangeListener(Patron patronParameter, PropertyChangeListener aListener) {
		patronParameter.getPatron().addPropertyChangeListener(getPatron(), aListener);
		patronParameter.getTable().addPropertyChangeListener(aListener);
	}

	
	

}
]]></snapshot>
  </Command>
  <Command __id="2771" _type="PauseCommand" date="Sat Mar 19 19:41:06 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16358003">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1205]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2772" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:41:06 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="16358403" />
  <Command __id="2770" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:41:06 EDT 2022" docASTNodeCount="63" docActiveCodeLength="355" docExpressionCount="25" docLength="355" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16358003">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\Patron.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeListener;

public interface Patron {
	public Avatar getPatron();
	public Table getTable();
	public void setPatron(int X, int Y);
	public void setTable(int X, int Y);
	public void move(int X, int Y);
	void addPropertyChangeListener(Patron patronParameter, PropertyChangeListener aListener);
}
]]></snapshot>
  </Command>
  <Command __id="2774" _type="PauseCommand" date="Sat Mar 19 19:41:19 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16370865">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12462]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2775" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:41:19 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="16371250" />
  <Command __id="2777" _type="PauseCommand" date="Sat Mar 19 19:41:32 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16384036">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12786]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2776" _type="MoveCaretCommand" caretOffset="270" date="Sat Mar 19 19:41:32 EDT 2022" docOffset="363" starttimestamp="1647716908162" timestamp="16384036" />
  <Command __id="2778" _type="MoveCaretCommand" caretOffset="274" date="Sat Mar 19 19:41:32 EDT 2022" docOffset="367" starttimestamp="1647716908162" timestamp="16384787" />
  <Command __id="2780" _type="PauseCommand" date="Sat Mar 19 19:41:45 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16397554">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12767]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2779" _type="MoveCaretCommand" caretOffset="193" date="Sat Mar 19 19:41:45 EDT 2022" docOffset="286" starttimestamp="1647716908162" timestamp="16397554" />
  <Command __id="2773" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:41:19 EDT 2022" docASTNodeCount="171" docActiveCodeLength="1035" docExpressionCount="102" docLength="1035" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16370865">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\APatron.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeListener;¶¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶public class APatron implements Patron {¶	Avatar patron;¶	Table table;¶	¶	public APatron() {¶		patron = new AnAvatar();¶		table = new ATable();¶	}¶¶	@Override¶	public Avatar getPatron() {¶		return patron;¶	}¶¶	@Override¶	public Table getTable() {¶		return table;¶	}¶¶	@Override¶	public void setPatron(int X, int Y) {¶		patron.move(X, Y);¶	}¶¶	@Override¶	public void setTable(int X, int Y) {¶		table.move(X, Y);¶	}¶	¶	@Override¶	public void move(int X, int Y) {¶		patron.move(X, Y);¶		table.move(X, Y);¶	}¶	¶	@Override¶	public void addPropertyChangeListener(Patron patronParameter, PropertyChangeListener aListener) {¶		patronParameter.getPatron().addPropertyChangeListener(getPatron(), aListener);¶		patronParameter.getTable().addPropertyChangeListener(aListener);¶	}¶¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2782" _type="PauseCommand" date="Sat Mar 19 19:41:57 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16409749">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12195]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2784" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:42:03 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16414889" type="Run" />
  <Command __id="2786" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:42:03 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16414889" type="Run" />
  <Command __id="2788" _type="PauseCommand" date="Sat Mar 19 19:42:04 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16416000">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1111]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2787" _type="ShellCommand" date="Sat Mar 19 19:42:04 EDT 2022" starttimestamp="1647716908162" timestamp="16416000" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2790" _type="PauseCommand" date="Sat Mar 19 19:42:06 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16418811">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2811]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2789" _type="ShellCommand" date="Sat Mar 19 19:42:06 EDT 2022" starttimestamp="1647716908162" timestamp="16418811" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2791" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:42:07 EDT 2022" starttimestamp="1647716908162" timestamp="16419383" />
  <Command __id="2792" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:42:07 EDT 2022" starttimestamp="1647716908162" timestamp="16419519" />
  <Command __id="2793" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:42:08 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16419895" type="Run" />
  <Command __id="2794" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:42:08 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16419895" type="Run" />
  <Command __id="2796" _type="PauseCommand" date="Sat Mar 19 19:42:09 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16421483">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1588]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2795" _type="ConsoleOutput" date="Sat Mar 19 19:42:09 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16421483" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE,"Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(INSERT," public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2797" _type="ShellCommand" date="Sat Mar 19 19:42:09 EDT 2022" starttimestamp="1647716908162" timestamp="16421823" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2798" _type="ConsoleOutput" date="Sat Mar 19 19:42:10 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16422032" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AProducerConsumerScene@740fb309
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AProducerConsumerScene@740fb309"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2799" _type="ConsoleOutput" date="Sat Mar 19 19:42:10 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16422314" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Producer-Consumer Scene.Patron List not in range.
W*** Value: null of Producer-Consumer Scene.Chef List not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.A"), Diff(INSERT,"Value: null of Producer-Consumer Scene.Patron List not in range.¶W*** Value: null of "), Diff(EQUAL,"Producer"), Diff(INSERT,"-"), Diff(EQUAL,"Consumer"), Diff(INSERT," "), Diff(EQUAL,"Scene"), Diff(DELETE,"@740fb309"), Diff(INSERT,".Chef List not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2801" _type="PauseCommand" date="Sat Mar 19 19:42:16 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16428552">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6238]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2800" _type="ConsoleOutput" date="Sat Mar 19 19:42:16 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16428552" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1ab5b7c6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1ab5b7c6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@1ab5b7c6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@1ab5b7c6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4aa9a02a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4aa9a02a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4aa9a02a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4aa9a02a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@c07a6f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@c07a6f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@c07a6f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@c07a6f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3ce70b73]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3ce70b73]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3ce70b73]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3ce70b73]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@b5b90ae]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@b5b90ae]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@b5b90ae]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@b5b90ae]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@c74c91f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@c74c91f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@c74c91f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@c74c91f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@f64c9fc]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@f64c9fc]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@f64c9fc]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@f64c9fc]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Producer-Consumer Scene.Patron List not in range.¶W*** Value: null of Producer-Consumer Scene.Chef List not in range."), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1ab5b7c6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1ab5b7c6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@1ab5b7c6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@1ab5b7c6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4aa9a02a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4aa9a02a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4aa9a02a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4aa9a02a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@c07a6f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@c07a6f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@c07a6f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@c07a6f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3ce70b73]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3ce70b73]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3ce70b73]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3ce70b73]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@b5b90ae]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@b5b90ae]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@b5b90ae]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@b5b90ae]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@c74c91f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@c74c91f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@c74c91f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@c74c91f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@f64c9fc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@f64c9fc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@f64c9fc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@f64c9fc]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2802" _type="ConsoleOutput" date="Sat Mar 19 19:42:16 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16428771" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1ab5b7c6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1ab5b7c6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@1ab5b7c6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@1ab5b7c6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4aa9a02a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4aa9a02a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4aa9a02a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4aa9a02a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@c07a6f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@c07a6f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@c07a6f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@c07a6f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3ce70b73]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3ce70b73]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3ce70b73]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3ce70b73]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@b5b90ae]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@b5b90ae]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@b5b90ae]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@b5b90ae]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@c74c91f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@c74c91f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@c74c91f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@c74c91f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@f64c9fc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@f64c9fc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@f64c9fc]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@f64c9fc]¶Moving the stove:"), Diff(INSERT,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list."), Diff(EQUAL," ¶")]]]></diff>
  </Command>
  <Command __id="2803" _type="ConsoleOutput" date="Sat Mar 19 19:42:17 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16428842" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"Table"), Diff(EQUAL,".addPropertyChangeListener("), Diff(DELETE,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use"), Diff(INSERT," should be associated with"), Diff(EQUAL," annotation"), Diff(INSERT,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"interface java.beans."), Diff(EQUAL,"Property"), Diff(DELETE,"Change"), Diff(INSERT," "), Diff(EQUAL,"Listener)"), Diff(DELETE," for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Line"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="2804" _type="ConsoleOutput" date="Sat Mar 19 19:42:17 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16429343" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(INSERT," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Tab"), Diff(INSERT,"nAng"), Diff(EQUAL,"le.addPropertyChangeListener("), Diff(INSERT,"graphics.Angle,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with"), Diff(INSERT,"¶W*** Use"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"Property Listener)¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(INSERT,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2805" _type="ConsoleOutput" date="Sat Mar 19 19:42:17 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16429411" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2807" _type="PauseCommand" date="Sat Mar 19 19:42:18 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16430721">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1310]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2806" _type="ConsoleOutput" date="Sat Mar 19 19:42:18 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16430721" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2809" _type="PauseCommand" date="Sat Mar 19 19:42:21 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16433425">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2704]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2808" _type="ConsoleOutput" date="Sat Mar 19 19:42:21 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16433425" type="ConsoleOutput">
    <outputString><![CDATA[W*** Assuming implicit pattern: No Pattern
  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer
E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@4a3d9492
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef."), Diff(INSERT,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke "), Diff(EQUAL,"addPropertyChangeListener"), Diff(DELETE,"("), Diff(INSERT," on"), Diff(EQUAL,"graphics."), Diff(DELETE,"Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"ABoundedBuffer@4a3d9492"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2810" _type="ConsoleOutput" date="Sat Mar 19 19:42:21 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16433526" type="ConsoleOutput">
    <outputString><![CDATA[W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@4a3d9492"), Diff(INSERT,"Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2812" _type="PauseCommand" date="Sat Mar 19 19:42:31 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16443737">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10211]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2811" _type="ShellCommand" date="Sat Mar 19 19:42:31 EDT 2022" starttimestamp="1647716908162" timestamp="16443737" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2814" _type="PauseCommand" date="Sat Mar 19 19:42:33 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16445234">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1497]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2813" _type="MoveCaretCommand" caretOffset="1979" date="Sat Mar 19 19:42:33 EDT 2022" docOffset="2940" starttimestamp="1647716908162" timestamp="16445234" />
  <Command __id="2815" _type="MoveCaretCommand" caretOffset="1979" date="Sat Mar 19 19:42:33 EDT 2022" docOffset="2940" starttimestamp="1647716908162" timestamp="16445234" />
  <Command __id="2817" _type="PauseCommand" date="Sat Mar 19 19:42:48 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16460063">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[14829]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2816" _type="MoveCaretCommand" caretOffset="2031" date="Sat Mar 19 19:42:48 EDT 2022" docOffset="2992" starttimestamp="1647716908162" timestamp="16460063" />
  <Command __id="2818" _type="MoveCaretCommand" caretOffset="2031" date="Sat Mar 19 19:42:48 EDT 2022" docOffset="2992" starttimestamp="1647716908162" timestamp="16460063" />
  <Command __id="2781" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:41:57 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16409749">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2820" _type="PauseCommand" date="Sat Mar 19 19:42:59 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16471657">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11594]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2830" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:43:06 EDT 2022" starttimestamp="1647716908162" timestamp="16478158" />
  <Command __id="2832" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:43:06 EDT 2022" starttimestamp="1647716908162" timestamp="16478219" />
  <Command __id="2833" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:43:06 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16478775" type="Run" />
  <Command __id="2834" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:43:06 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16478775" type="Run" />
  <Command __id="2836" _type="PauseCommand" date="Sat Mar 19 19:43:08 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16480453">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1678]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2835" _type="ConsoleOutput" date="Sat Mar 19 19:43:08 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16480453" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE,"Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(INSERT," public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2837" _type="ShellCommand" date="Sat Mar 19 19:43:08 EDT 2022" starttimestamp="1647716908162" timestamp="16480752" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2838" _type="ConsoleOutput" date="Sat Mar 19 19:43:09 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16481088" type="ConsoleOutput">
    <outputString><![CDATA[E** Could not invoke addPropertyChangeListener ongraphics.AProducerConsumerScene@43f02ef2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*"), Diff(INSERT,"E"), Diff(EQUAL,"** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Could not invoke addPropertyChangeListener ongraphics.AProducerConsumerScene@43f02ef2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2839" _type="ConsoleOutput" date="Sat Mar 19 19:43:09 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16481311" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Producer-Consumer Scene.Patron List not in range.
W*** Value: null of Producer-Consumer Scene.Chef List not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W*"), Diff(EQUAL,"** "), Diff(DELETE,"Could not invoke addPropertyChangeListener ongraphics.A"), Diff(INSERT,"Value: null of Producer-Consumer Scene.Patron List not in range.¶W*** Value: null of "), Diff(EQUAL,"Producer"), Diff(INSERT,"-"), Diff(EQUAL,"Consumer"), Diff(INSERT," "), Diff(EQUAL,"Scene"), Diff(DELETE,"@43f02ef2"), Diff(INSERT,".Chef List not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2841" _type="PauseCommand" date="Sat Mar 19 19:43:17 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16489072">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7761]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2840" _type="ConsoleOutput" date="Sat Mar 19 19:43:17 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16489072" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7d70a36f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7d70a36f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7d70a36f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7d70a36f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@79208367]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@79208367]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@79208367]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@79208367]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@503e3aa0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@503e3aa0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@503e3aa0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@503e3aa0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@25ffb470]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@25ffb470]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@25ffb470]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@25ffb470]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5dec007b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5dec007b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5dec007b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5dec007b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@20aa8b1a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@20aa8b1a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@20aa8b1a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@20aa8b1a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1e05e95]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1e05e95]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1e05e95]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1e05e95]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Producer-Consumer Scene.Patron List not in range.¶W*** Value: null of Producer-Consumer Scene.Chef List not in range."), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7d70a36f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7d70a36f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7d70a36f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7d70a36f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@79208367]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@79208367]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@79208367]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@79208367]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@503e3aa0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@503e3aa0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@503e3aa0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@503e3aa0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@25ffb470]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@25ffb470]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@25ffb470]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@25ffb470]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5dec007b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5dec007b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5dec007b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5dec007b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@20aa8b1a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@20aa8b1a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@20aa8b1a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@20aa8b1a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1e05e95]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1e05e95]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1e05e95]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1e05e95]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2842" _type="ConsoleOutput" date="Sat Mar 19 19:43:17 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16489354" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7d70a36f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7d70a36f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7d70a36f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7d70a36f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@79208367]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@79208367]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@79208367]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@79208367]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@503e3aa0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@503e3aa0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@503e3aa0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@503e3aa0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@25ffb470]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@25ffb470]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@25ffb470]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@25ffb470]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5dec007b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5dec007b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5dec007b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5dec007b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@20aa8b1a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@20aa8b1a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@20aa8b1a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@20aa8b1a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1e05e95]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1e05e95]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1e05e95]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1e05e95]¶Moving the stove:"), Diff(INSERT,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list."), Diff(EQUAL," ¶")]]]></diff>
  </Command>
  <Command __id="2843" _type="ConsoleOutput" date="Sat Mar 19 19:43:17 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16489468" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"Table"), Diff(EQUAL,".addPropertyChangeListener("), Diff(DELETE,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use"), Diff(INSERT," should be associated with"), Diff(EQUAL," annotation"), Diff(INSERT,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"interface java.beans."), Diff(EQUAL,"Property"), Diff(DELETE,"Change"), Diff(INSERT," "), Diff(EQUAL,"Listener)"), Diff(DELETE," for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Line"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="2844" _type="ConsoleOutput" date="Sat Mar 19 19:43:18 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16489916" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(INSERT," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Tab"), Diff(INSERT,"nAng"), Diff(EQUAL,"le.addPropertyChangeListener("), Diff(INSERT,"graphics.Angle,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with"), Diff(INSERT,"¶W*** Use"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"Property Listener)¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(INSERT,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2845" _type="ConsoleOutput" date="Sat Mar 19 19:43:18 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16490003" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2847" _type="PauseCommand" date="Sat Mar 19 19:43:19 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16491379">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1376]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2846" _type="ConsoleOutput" date="Sat Mar 19 19:43:19 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16491379" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2849" _type="PauseCommand" date="Sat Mar 19 19:43:22 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16494036">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2657]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2848" _type="ConsoleOutput" date="Sat Mar 19 19:43:22 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16494036" type="ConsoleOutput">
    <outputString><![CDATA[W*** Assuming implicit pattern: No Pattern
  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer
E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@73a44b92
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef."), Diff(INSERT,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke "), Diff(EQUAL,"addPropertyChangeListener"), Diff(DELETE,"("), Diff(INSERT," on"), Diff(EQUAL,"graphics."), Diff(DELETE,"Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"ABoundedBuffer@73a44b92"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2850" _type="ConsoleOutput" date="Sat Mar 19 19:43:22 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16494097" type="ConsoleOutput">
    <outputString><![CDATA[W***Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@73a44b92"), Diff(INSERT,"Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2852" _type="PauseCommand" date="Sat Mar 19 19:43:29 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16500894">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6797]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2851" _type="ShellCommand" date="Sat Mar 19 19:43:29 EDT 2022" starttimestamp="1647716908162" timestamp="16500894" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2854" _type="PauseCommand" date="Sat Mar 19 19:43:31 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16503097">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2203]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2853" _type="MoveCaretCommand" caretOffset="1954" date="Sat Mar 19 19:43:31 EDT 2022" docOffset="2915" starttimestamp="1647716908162" timestamp="16503097" />
  <Command __id="2855" _type="MoveCaretCommand" caretOffset="1954" date="Sat Mar 19 19:43:31 EDT 2022" docOffset="2915" starttimestamp="1647716908162" timestamp="16503097" />
  <DocumentChange __id="2819" _type="Delete" date="Sat Mar 19 19:42:59 EDT 2022" docASTNodeCount="509" docActiveCodeLength="3389" docExpressionCount="360" docLength="3869" endLine="87" length="2" offset="2915" repeat="2" startLine="87" starttimestamp="1647716908162" timestamp="16471657" timestamp2="16472667">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="2857" _type="PauseCommand" date="Sat Mar 19 19:43:37 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16508887">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5790]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2858" _type="MoveCaretCommand" caretOffset="3741" date="Sat Mar 19 19:43:37 EDT 2022" docOffset="4437" starttimestamp="1647716908162" timestamp="16509251" />
  <Command __id="2860" _type="PauseCommand" date="Sat Mar 19 19:44:05 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="16536871">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[27620]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2859" _type="SelectTextCommand" caretOffset="1853" date="Sat Mar 19 19:44:05 EDT 2022" end="1853" start="1735" starttimestamp="1647716908162" timestamp="16536871" />
  <Command __id="2861" _type="SelectTextCommand" caretOffset="1853" date="Sat Mar 19 19:44:05 EDT 2022" end="1853" start="1735" starttimestamp="1647716908162" timestamp="16536872" />
  <Command __id="2862" _type="CopyCommand" date="Sat Mar 19 19:44:05 EDT 2022" starttimestamp="1647716908162" timestamp="16537758" />
  <Command __id="2864" _type="PauseCommand" date="Sat Mar 19 19:44:07 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16539363">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1604]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2863" _type="MoveCaretCommand" caretOffset="1853" date="Sat Mar 19 19:44:07 EDT 2022" docOffset="2549" starttimestamp="1647716908162" timestamp="16539362" />
  <Command __id="2865" _type="MoveCaretCommand" caretOffset="1853" date="Sat Mar 19 19:44:07 EDT 2022" docOffset="2549" starttimestamp="1647716908162" timestamp="16539363" />
  <Command __id="2867" _type="PauseCommand" date="Sat Mar 19 19:44:11 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16543022">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3658]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2866" _type="SelectTextCommand" caretOffset="1853" date="Sat Mar 19 19:44:11 EDT 2022" end="1853" start="1735" starttimestamp="1647716908162" timestamp="16543021" />
  <Command __id="2868" _type="SelectTextCommand" caretOffset="1853" date="Sat Mar 19 19:44:11 EDT 2022" end="1853" start="1735" starttimestamp="1647716908162" timestamp="16543022" />
  <Command __id="2869" _type="SelectTextCommand" caretOffset="1853" date="Sat Mar 19 19:44:11 EDT 2022" end="1853" start="1735" starttimestamp="1647716908162" timestamp="16543707" />
  <Command __id="2870" _type="SelectTextCommand" caretOffset="1853" date="Sat Mar 19 19:44:11 EDT 2022" end="1853" start="1735" starttimestamp="1647716908162" timestamp="16543707" />
  <Command __id="2872" _type="PauseCommand" date="Sat Mar 19 19:44:12 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16544810">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1103]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="2871" _type="CopyCommand" date="Sat Mar 19 19:44:12 EDT 2022" starttimestamp="1647716908162" timestamp="16544810" />
  <Command __id="2856" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:43:37 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10756" docExpressionCount="1485" docLength="11834" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16508887">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer-Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		chefList = new ArrayList<AChef>();¶		¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	¶	¶	@Override¶	"), Diff(DELETE,"@Visible(false)¶	"), Diff(EQUAL,"public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	"), Diff(DELETE,"@Visible(false)¶	"), Diff(EQUAL,"public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	@Visible(false)¶	public Circle getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
@Label("Producer-Consumer Scene")
public class AProducerConsumerScene implements ProducerConsumerScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AProducerConsumerScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AProducerConsumerScene() {
		
	}
	
	@Label("Init Scene")
	public void initScene(int patronAmount, int chefAmount) {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		chefList = new ArrayList<AChef>();
		
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	
	
	@Override
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	@Visible(false)
	public Circle getBuffer() {
		return bufferView;
	}
	
	@Override
	@Label("Chef to the table")
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="2874" _type="PauseCommand" date="Sat Mar 19 19:44:14 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16546186">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1376]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2877" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Sat Mar 19 19:44:14 EDT 2022" starttimestamp="1647716908162" timestamp="16546236" />
  <Command __id="2878" _type="MoveCaretCommand" caretOffset="1859" date="Sat Mar 19 19:44:15 EDT 2022" docOffset="2555" starttimestamp="1647716908162" timestamp="16547167" />
  <Command __id="2879" _type="MoveCaretCommand" caretOffset="1859" date="Sat Mar 19 19:44:15 EDT 2022" docOffset="2555" starttimestamp="1647716908162" timestamp="16547167" />
  <Command __id="2881" _type="PauseCommand" date="Sat Mar 19 19:44:28 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16559994">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12827]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2880" _type="MoveCaretCommand" caretOffset="1641" date="Sat Mar 19 19:44:28 EDT 2022" docOffset="2337" starttimestamp="1647716908162" timestamp="16559994" />
  <Command __id="2882" _type="MoveCaretCommand" caretOffset="1641" date="Sat Mar 19 19:44:28 EDT 2022" docOffset="2337" starttimestamp="1647716908162" timestamp="16559995" />
  <DocumentChange __id="2873" _type="Insert" date="Sat Mar 19 19:44:14 EDT 2022" docASTNodeCount="1919" docActiveCodeLength="10716" docExpressionCount="1481" docLength="11836" length="2" offset="2429" starttimestamp="1647716908162" timestamp="16546186">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2875" _type="Insert" date="Sat Mar 19 19:44:14 EDT 2022" docASTNodeCount="1910" docActiveCodeLength="10676" docExpressionCount="1476" docLength="11838" length="2" offset="2473" starttimestamp="1647716908162" timestamp="16546191">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2876" _type="Insert" date="Sat Mar 19 19:44:14 EDT 2022" docASTNodeCount="1901" docActiveCodeLength="10640" docExpressionCount="1471" docLength="11840" length="2" offset="2517" starttimestamp="1647716908162" timestamp="16546195">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="2884" _type="PauseCommand" date="Sat Mar 19 19:44:30 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16562489">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2494]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2885" _type="PasteCommand" date="Sat Mar 19 19:44:30 EDT 2022" starttimestamp="1647716908162" timestamp="16562533" />
  <Command __id="2887" _type="PauseCommand" date="Sat Mar 19 19:44:34 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16566655">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[4122]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2895" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:44:40 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16571930" type="Run" />
  <Command __id="2897" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:44:40 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16571931" type="Run" />
  <Command __id="2899" _type="PauseCommand" date="Sat Mar 19 19:44:41 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16573172">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1241]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2898" _type="ConsoleOutput" date="Sat Mar 19 19:44:41 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16573172" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE,"Received notification about change to composite property: result .It is usually more efficient to notify about changes to atomic properties."), Diff(INSERT," public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2900" _type="ShellCommand" date="Sat Mar 19 19:44:41 EDT 2022" starttimestamp="1647716908162" timestamp="16573512" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2901" _type="ConsoleOutput" date="Sat Mar 19 19:44:42 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16574396" type="ConsoleOutput">
    <outputString><![CDATA[W*** Assuming implicit pattern: No Pattern
  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer
E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@2a62b5bc
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverReg"), Diff(INSERT,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeL"), Diff(EQUAL,"iste"), Diff(DELETE,"r"), Diff(INSERT,"n"), Diff(EQUAL,"er"), Diff(DELETE,"(Property Listener)"), Diff(INSERT," ongraphics.ABoundedBuffer@2a62b5bc"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2902" _type="ConsoleOutput" date="Sat Mar 19 19:44:43 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16574985" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@2a62b5bc"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2904" _type="PauseCommand" date="Sat Mar 19 19:44:50 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16582220">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7235]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2905" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:44:52 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16584518" type="Run" />
  <Command __id="2907" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:44:52 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16584518" type="Run" />
  <DocumentChange __id="2883" _type="Replace" date="Sat Mar 19 19:44:30 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10758" docExpressionCount="1485" docLength="11958" endLine="79" insertionLength="120" int_docASTNodeCount="1901" int_docActiveCodeLength="10638" int_docExpressionCount="1471" int_docLength="11838" length="2" offset="2335" startLine="79" starttimestamp="1647716908162" timestamp="16562489">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		chefList = new ArrayList<AChef>();]]></insertedText>
  </DocumentChange>
  <Command __id="2890" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:44:35 EDT 2022" docASTNodeCount="509" docActiveCodeLength="3389" docExpressionCount="360" docLength="3869" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16567689">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		"), Diff(DELETE,"//"), Diff(EQUAL,"editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package main;

import java.awt.BorderLayout;
import java.awt.Component;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import bus.uigen.attributes.AttributeNames;
import bus.uigen.test.AFunctionTester;
import bus.uigen.widgets.VirtualComponent;
import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import controls.Painter;
import factories.AFactory;
import graphics.ACircle;
import graphics.AButtonArrayScene;
import graphics.AChef;
import graphics.ALine;
import graphics.APatron;
import graphics.AScene;
import graphics.AnAngle;
import graphics.AProducerConsumerScene;
import graphics.AnAvatar;
import graphics.Angle;
import graphics.ProducerConsumerScene;
import graphics.Avatar;
import graphics.Line;
import graphics.Scene;
import util.misc.Console;

public class MainClass {
	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();
	static ProducerConsumerScene scene1 = new AButtonArrayScene();

	public static void main(String[] args) {
		
//		animateGraphics();
//		animateArrayUse();
		animateArrayUseInteractive();
	}
	
	public static void animateGraphics() {
		Scene Restaurant = new AScene();
		OEFrame editor = ObjectEditor.edit(Restaurant);
		editor.showDrawPanel();
		editor.showTreePanel();
//		Component c = editor.getDrawComponent();
//		VirtualComponent v = editor.getDrawVirtualComponent();
//		c.addMouseListener(null);

		
	}

	public static void animateArrayUseInteractive() {

		ObjectEditor.confirmSelectedMethodParameters(false);
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");


		try {
			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};
			Object[] initSceneDefaultArgs = {1, 4};
			String[] initSceneArgNames = {"number of patrons", "number of chefs"};

			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);
			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);
			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);

		} catch (NoSuchMethodException e) {
			e.printStackTrace();
		} catch (SecurityException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		OEFrame editor = ObjectEditor.edit(scene);
		editor.hideMainPanel();
		editor.showDrawPanel();
		editor.showToolBar();
		
//		JFrame frame = new JFrame();
//		//frame.add((Component) console, BorderLayout.CENTER);
//		frame.setSize(1000, 1000);
//		frame.setVisible(true);
		
	
		
//		JPanel panel = new JPanel();
//		JButton button1 = control.getChefToBuffer();
//		panel.add(button1);
//		frame.add(panel);
	}
	
	public static void animatePainterTwo(Painter view) {
		JFrame aFrame = new JFrame();
		aFrame.add((Component) view, BorderLayout.CENTER);
		aFrame.setSize(1000, 1000);
		aFrame.setVisible(true);
		JPanel panel = new JPanel();
		aFrame.add(panel, BorderLayout.NORTH);
	}
	
	public static void moveAvatar() {
		System.out.println("test1");
		scene.getChefList().get(2).getChef().move(30, 0);
		scene.getChefList().get(2).getStove().move(10, 0);
		System.out.println("Moving the stove: \n");
		scene.getChefList().get(3).getStove().move(30, 30);
	}

}
]]></snapshot>
  </Command>
  <Command __id="2909" _type="PauseCommand" date="Sat Mar 19 19:44:54 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16586436">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1918]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2915" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:44:57 EDT 2022" starttimestamp="1647716908162" timestamp="16589684" />
  <Command __id="2917" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:44:57 EDT 2022" starttimestamp="1647716908162" timestamp="16589759" />
  <Command __id="2918" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:44:58 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16590352" type="Run" />
  <Command __id="2919" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:44:58 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16590352" type="Run" />
  <Command __id="2921" _type="PauseCommand" date="Sat Mar 19 19:44:59 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16591715">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1363]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2920" _type="ConsoleOutput" date="Sat Mar 19 19:44:59 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16591715" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(INSERT,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2922" _type="ShellCommand" date="Sat Mar 19 19:45:00 EDT 2022" starttimestamp="1647716908162" timestamp="16592142" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2923" _type="ConsoleOutput" date="Sat Mar 19 19:45:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16593074" type="ConsoleOutput">
    <outputString><![CDATA[W*** Assuming implicit pattern: No Pattern
  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer
E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@648c94da
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverReg"), Diff(INSERT,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeL"), Diff(EQUAL,"iste"), Diff(DELETE,"r"), Diff(INSERT,"n"), Diff(EQUAL,"er"), Diff(DELETE,"(Property Listener)"), Diff(INSERT," ongraphics.ABoundedBuffer@648c94da"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2924" _type="ConsoleOutput" date="Sat Mar 19 19:45:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16593687" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@648c94da"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2926" _type="PauseCommand" date="Sat Mar 19 19:45:09 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16601193">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7506]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2925" _type="ShellCommand" date="Sat Mar 19 19:45:09 EDT 2022" starttimestamp="1647716908162" timestamp="16601193" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="2908" _type="Insert" date="Sat Mar 19 19:44:54 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" length="2" offset="2915" repeat="2" starttimestamp="1647716908162" timestamp="16586436" timestamp2="16586567">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="2928" _type="PauseCommand" date="Sat Mar 19 19:45:10 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16602238">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1045]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2929" _type="MoveCaretCommand" caretOffset="1759" date="Sat Mar 19 19:45:10 EDT 2022" docOffset="2455" starttimestamp="1647716908162" timestamp="16602519" />
  <Command __id="2931" _type="PauseCommand" date="Sat Mar 19 19:45:21 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16613279">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10760]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2930" _type="MoveCaretCommand" caretOffset="1721" date="Sat Mar 19 19:45:21 EDT 2022" docOffset="2417" starttimestamp="1647716908162" timestamp="16613279" />
  <Command __id="2932" _type="MoveCaretCommand" caretOffset="1721" date="Sat Mar 19 19:45:21 EDT 2022" docOffset="2417" starttimestamp="1647716908162" timestamp="16613279" />
  <Command __id="2934" _type="PauseCommand" date="Sat Mar 19 19:45:23 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16615103">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1824]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="2933" _type="BalloonCommand" date="Sat Mar 19 19:45:23 EDT 2022" message="*******************************************
Worked 40 minutes(fixed)/56 minutes(context based) from
Sat Mar 19 18:47:38 EDT 2022 to Sat Mar 19 19:45:21 EDT 2022
Edited 1 Projects: 
	ProducersConsumer
Edited 7 Files: 
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ALocatable.java
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AnAvatar.java
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\Locatable.java
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ALine.java
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\Angle.java
Number of insert: 733
Number of delete: 651
" starttimestamp="1647716908162" timestamp="16615103">
    <fineGrainedWorkTime><![CDATA[56]]></fineGrainedWorkTime>
    <insert><![CDATA[733]]></insert>
    <startTime><![CDATA[1647730058948]]></startTime>
    <endTime><![CDATA[1647733521441]]></endTime>
    <workTime><![CDATA[40]]></workTime>
    <delete><![CDATA[651]]></delete>
  </Command>
  <Command __id="2936" _type="PauseCommand" date="Sat Mar 19 19:45:33 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16625557">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[10454]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2935" _type="MoveCaretCommand" caretOffset="1719" date="Sat Mar 19 19:45:33 EDT 2022" docOffset="2415" starttimestamp="1647716908162" timestamp="16625557" />
  <Command __id="2937" _type="MoveCaretCommand" caretOffset="1719" date="Sat Mar 19 19:45:33 EDT 2022" docOffset="2415" starttimestamp="1647716908162" timestamp="16625557" />
  <Command __id="2938" _type="MoveCaretCommand" caretOffset="1720" date="Sat Mar 19 19:45:34 EDT 2022" docOffset="2416" starttimestamp="1647716908162" timestamp="16626162" />
  <Command __id="2939" _type="MoveCaretCommand" caretOffset="1720" date="Sat Mar 19 19:45:34 EDT 2022" docOffset="2416" starttimestamp="1647716908162" timestamp="16626162" />
  <Command __id="2941" _type="PauseCommand" date="Sat Mar 19 19:45:38 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16630772">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4610]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2940" _type="MoveCaretCommand" caretOffset="1678" date="Sat Mar 19 19:45:38 EDT 2022" docOffset="2374" starttimestamp="1647716908162" timestamp="16630772" />
  <Command __id="2942" _type="MoveCaretCommand" caretOffset="1678" date="Sat Mar 19 19:45:38 EDT 2022" docOffset="2374" starttimestamp="1647716908162" timestamp="16630773" />
  <Command __id="2944" _type="PauseCommand" date="Sat Mar 19 19:45:40 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16632418">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1645]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2943" _type="MoveCaretCommand" caretOffset="1679" date="Sat Mar 19 19:45:40 EDT 2022" docOffset="2375" starttimestamp="1647716908162" timestamp="16632418" />
  <Command __id="2945" _type="MoveCaretCommand" caretOffset="1679" date="Sat Mar 19 19:45:40 EDT 2022" docOffset="2375" starttimestamp="1647716908162" timestamp="16632418" />
  <Command __id="2927" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:45:10 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10758" docExpressionCount="1485" docLength="11958" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16602238">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer-Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		"), Diff(INSERT,"bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		chefList = new ArrayList<AChef>();"), Diff(EQUAL,"¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶"), Diff(INSERT,"//"), Diff(EQUAL,"		bufferView = new ABoundedBufferView();¶"), Diff(INSERT,"//"), Diff(EQUAL,"		patronList = new ArrayList<APatron>();¶"), Diff(INSERT,"//"), Diff(EQUAL,"		chefList = new ArrayList<AChef>();¶		¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	@Visible(false)¶	public Circle getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
@Label("Producer-Consumer Scene")
public class AProducerConsumerScene implements ProducerConsumerScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AProducerConsumerScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AProducerConsumerScene() {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		chefList = new ArrayList<AChef>();
	}
	
	@Label("Init Scene")
	public void initScene(int patronAmount, int chefAmount) {
//		bufferView = new ABoundedBufferView();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
		
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	
	
	@Override
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	@Visible(false)
	public Circle getBuffer() {
		return bufferView;
	}
	
	@Override
	@Label("Chef to the table")
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="2947" _type="PauseCommand" date="Sat Mar 19 19:45:42 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16633872">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1454]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2948" _type="InsertStringCommand" date="Sat Mar 19 19:45:42 EDT 2022" starttimestamp="1647716908162" timestamp="16633908" timestamp2="16633908">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2949" _type="InsertStringCommand" date="Sat Mar 19 19:45:42 EDT 2022" starttimestamp="1647716908162" timestamp="16633908" timestamp2="16633908">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2951" _type="InsertStringCommand" date="Sat Mar 19 19:45:42 EDT 2022" starttimestamp="1647716908162" timestamp="16633943" timestamp2="16633943">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2952" _type="InsertStringCommand" date="Sat Mar 19 19:45:42 EDT 2022" starttimestamp="1647716908162" timestamp="16633943" timestamp2="16633943">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="2954" _type="InsertStringCommand" date="Sat Mar 19 19:45:42 EDT 2022" starttimestamp="1647716908162" timestamp="16633970" timestamp2="16633970">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2955" _type="InsertStringCommand" date="Sat Mar 19 19:45:42 EDT 2022" starttimestamp="1647716908162" timestamp="16633970" timestamp2="16633970">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2957" _type="InsertStringCommand" date="Sat Mar 19 19:45:42 EDT 2022" starttimestamp="1647716908162" timestamp="16634007" timestamp2="16634007">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2958" _type="InsertStringCommand" date="Sat Mar 19 19:45:42 EDT 2022" starttimestamp="1647716908162" timestamp="16634007" timestamp2="16634007">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2960" _type="InsertStringCommand" date="Sat Mar 19 19:45:42 EDT 2022" starttimestamp="1647716908162" timestamp="16634038" timestamp2="16634038">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2961" _type="InsertStringCommand" date="Sat Mar 19 19:45:42 EDT 2022" starttimestamp="1647716908162" timestamp="16634038" timestamp2="16634038">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2963" _type="InsertStringCommand" date="Sat Mar 19 19:45:42 EDT 2022" starttimestamp="1647716908162" timestamp="16634102" timestamp2="16634102">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2964" _type="InsertStringCommand" date="Sat Mar 19 19:45:42 EDT 2022" starttimestamp="1647716908162" timestamp="16634102" timestamp2="16634102">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2966" _type="InsertStringCommand" date="Sat Mar 19 19:45:42 EDT 2022" starttimestamp="1647716908162" timestamp="16634165" timestamp2="16634165">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2967" _type="InsertStringCommand" date="Sat Mar 19 19:45:42 EDT 2022" starttimestamp="1647716908162" timestamp="16634165" timestamp2="16634165">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2969" _type="InsertStringCommand" date="Sat Mar 19 19:45:43 EDT 2022" starttimestamp="1647716908162" timestamp="16635035" timestamp2="16635035">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="2970" _type="InsertStringCommand" date="Sat Mar 19 19:45:43 EDT 2022" starttimestamp="1647716908162" timestamp="16635035" timestamp2="16635035">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="2972" _type="InsertStringCommand" date="Sat Mar 19 19:45:43 EDT 2022" starttimestamp="1647716908162" timestamp="16635170" timestamp2="16635170">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2973" _type="InsertStringCommand" date="Sat Mar 19 19:45:43 EDT 2022" starttimestamp="1647716908162" timestamp="16635170" timestamp2="16635170">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2975" _type="InsertStringCommand" date="Sat Mar 19 19:45:43 EDT 2022" starttimestamp="1647716908162" timestamp="16635247" timestamp2="16635247">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2976" _type="InsertStringCommand" date="Sat Mar 19 19:45:43 EDT 2022" starttimestamp="1647716908162" timestamp="16635247" timestamp2="16635247">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2978" _type="InsertStringCommand" date="Sat Mar 19 19:45:43 EDT 2022" starttimestamp="1647716908162" timestamp="16635353" timestamp2="16635353">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="2979" _type="InsertStringCommand" date="Sat Mar 19 19:45:43 EDT 2022" starttimestamp="1647716908162" timestamp="16635353" timestamp2="16635353">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="2981" _type="InsertStringCommand" date="Sat Mar 19 19:45:43 EDT 2022" starttimestamp="1647716908162" timestamp="16635466" timestamp2="16635466">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2982" _type="InsertStringCommand" date="Sat Mar 19 19:45:43 EDT 2022" starttimestamp="1647716908162" timestamp="16635466" timestamp2="16635466">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2984" _type="InsertStringCommand" date="Sat Mar 19 19:45:43 EDT 2022" starttimestamp="1647716908162" timestamp="16635707" timestamp2="16635707">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2985" _type="InsertStringCommand" date="Sat Mar 19 19:45:43 EDT 2022" starttimestamp="1647716908162" timestamp="16635736" timestamp2="16635736">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2987" _type="InsertStringCommand" date="Sat Mar 19 19:45:43 EDT 2022" starttimestamp="1647716908162" timestamp="16635813" timestamp2="16635813">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2988" _type="InsertStringCommand" date="Sat Mar 19 19:45:43 EDT 2022" starttimestamp="1647716908162" timestamp="16635813" timestamp2="16635813">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="2946" _type="Insert" date="Sat Mar 19 19:45:42 EDT 2022" docASTNodeCount="1927" docActiveCodeLength="10775" docExpressionCount="1487" docLength="11975" length="17" offset="2375" repeat="14" starttimestamp="1647716908162" timestamp="16633872" timestamp2="16635795">
    <text><![CDATA[
		bufferView = ]]></text>
  </DocumentChange>
  <Command __id="2990" _type="PauseCommand" date="Sat Mar 19 19:45:46 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16638296">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2483]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2991" _type="InsertStringCommand" date="Sat Mar 19 19:45:46 EDT 2022" starttimestamp="1647716908162" timestamp="16638338" timestamp2="16638338">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2992" _type="InsertStringCommand" date="Sat Mar 19 19:45:46 EDT 2022" starttimestamp="1647716908162" timestamp="16638338" timestamp2="16638338">
    <data><![CDATA[{]]></data>
  </Command>
  <DocumentChange __id="2989" _type="Insert" date="Sat Mar 19 19:45:46 EDT 2022" docASTNodeCount="1912" docActiveCodeLength="10776" docExpressionCount="1478" docLength="11976" length="1" offset="2392" starttimestamp="1647716908162" timestamp="16638296">
    <text><![CDATA[{]]></text>
  </DocumentChange>
  <Command __id="2994" _type="PauseCommand" date="Sat Mar 19 19:45:49 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16641315">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2977]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2995" _type="InsertStringCommand" date="Sat Mar 19 19:45:49 EDT 2022" starttimestamp="1647716908162" timestamp="16641351" timestamp2="16641351">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="2996" _type="InsertStringCommand" date="Sat Mar 19 19:45:49 EDT 2022" starttimestamp="1647716908162" timestamp="16641351" timestamp2="16641351">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="2998" _type="PauseCommand" date="Sat Mar 19 19:45:51 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16643201">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1850]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2997" _type="MoveCaretCommand" caretOffset="1695" date="Sat Mar 19 19:45:51 EDT 2022" docOffset="2391" starttimestamp="1647716908162" timestamp="16643201" />
  <Command __id="2999" _type="MoveCaretCommand" caretOffset="1695" date="Sat Mar 19 19:45:51 EDT 2022" docOffset="2391" starttimestamp="1647716908162" timestamp="16643202" />
  <Command __id="3001" _type="PauseCommand" date="Sat Mar 19 19:45:56 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16648072">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4870]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3000" _type="SelectTextCommand" caretOffset="1683" date="Sat Mar 19 19:45:56 EDT 2022" end="1698" start="1683" starttimestamp="1647716908162" timestamp="16648072" />
  <Command __id="3002" _type="SelectTextCommand" caretOffset="1683" date="Sat Mar 19 19:45:56 EDT 2022" end="1698" start="1683" starttimestamp="1647716908162" timestamp="16648072" />
  <DocumentChange __id="2993" _type="Insert" date="Sat Mar 19 19:45:49 EDT 2022" docASTNodeCount="1927" docActiveCodeLength="10777" docExpressionCount="1487" docLength="11977" length="1" offset="2393" starttimestamp="1647716908162" timestamp="16641315">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <Command __id="3004" _type="PauseCommand" date="Sat Mar 19 19:45:57 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16649690">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1618]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3005" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="16649711" />
  <Command __id="3006" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="16649711" />
  <Command __id="3009" _type="PauseCommand" date="Sat Mar 19 19:45:59 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16651078">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1367]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3008" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="16651078" />
  <Command __id="3010" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="16651078" />
  <Command __id="3012" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="16651481" />
  <Command __id="3013" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="16651481" />
  <Command __id="3015" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:46:00 EDT 2022" starttimestamp="1647716908162" timestamp="16651900" />
  <Command __id="3016" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:46:00 EDT 2022" starttimestamp="1647716908162" timestamp="16651900" />
  <Command __id="3018" _type="PauseCommand" date="Sat Mar 19 19:46:02 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16654579">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2679]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3017" _type="MoveCaretCommand" caretOffset="1679" date="Sat Mar 19 19:46:02 EDT 2022" docOffset="2375" starttimestamp="1647716908162" timestamp="16654579" />
  <Command __id="3019" _type="MoveCaretCommand" caretOffset="1679" date="Sat Mar 19 19:46:02 EDT 2022" docOffset="2375" starttimestamp="1647716908162" timestamp="16654579" />
  <Command __id="3020" _type="MoveCaretCommand" caretOffset="1721" date="Sat Mar 19 19:46:03 EDT 2022" docOffset="2417" starttimestamp="1647716908162" timestamp="16655121" />
  <Command __id="3021" _type="MoveCaretCommand" caretOffset="1721" date="Sat Mar 19 19:46:03 EDT 2022" docOffset="2417" starttimestamp="1647716908162" timestamp="16655121" />
  <Command __id="3023" _type="PauseCommand" date="Sat Mar 19 19:46:05 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16657709">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2588]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3022" _type="MoveCaretCommand" caretOffset="1720" date="Sat Mar 19 19:46:05 EDT 2022" docOffset="2416" starttimestamp="1647716908162" timestamp="16657709" />
  <Command __id="3024" _type="MoveCaretCommand" caretOffset="1720" date="Sat Mar 19 19:46:05 EDT 2022" docOffset="2416" starttimestamp="1647716908162" timestamp="16657709" />
  <Command __id="3026" _type="PauseCommand" date="Sat Mar 19 19:46:21 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16673204">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[15495]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3025" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sat Mar 19 19:46:21 EDT 2022" starttimestamp="1647716908162" timestamp="16673204" />
  <Command __id="3027" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Sat Mar 19 19:46:21 EDT 2022" starttimestamp="1647716908162" timestamp="16673204" />
  <DocumentChange __id="3003" _type="Delete" date="Sat Mar 19 19:45:57 EDT 2022" docASTNodeCount="1925" docActiveCodeLength="10758" docExpressionCount="1485" docLength="11958" endLine="80" length="19" offset="2375" repeat="4" startLine="79" starttimestamp="1647716908162" timestamp="16649690" timestamp2="16651863">
    <text><![CDATA[
		bufferView = {1]]></text>
  </DocumentChange>
  <Command __id="3029" _type="PauseCommand" date="Sat Mar 19 19:46:22 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16674206">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1002]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3030" _type="InsertStringCommand" date="Sat Mar 19 19:46:22 EDT 2022" starttimestamp="1647716908162" timestamp="16674236" timestamp2="16674236">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3031" _type="InsertStringCommand" date="Sat Mar 19 19:46:22 EDT 2022" starttimestamp="1647716908162" timestamp="16674236" timestamp2="16674236">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3033" _type="InsertStringCommand" date="Sat Mar 19 19:46:23 EDT 2022" starttimestamp="1647716908162" timestamp="16674862" timestamp2="16674862">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3034" _type="InsertStringCommand" date="Sat Mar 19 19:46:23 EDT 2022" starttimestamp="1647716908162" timestamp="16674862" timestamp2="16674862">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3036" _type="InsertStringCommand" date="Sat Mar 19 19:46:23 EDT 2022" starttimestamp="1647716908162" timestamp="16674991" timestamp2="16674991">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3037" _type="InsertStringCommand" date="Sat Mar 19 19:46:23 EDT 2022" starttimestamp="1647716908162" timestamp="16674991" timestamp2="16674991">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3039" _type="InsertStringCommand" date="Sat Mar 19 19:46:23 EDT 2022" starttimestamp="1647716908162" timestamp="16675116" timestamp2="16675116">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3040" _type="InsertStringCommand" date="Sat Mar 19 19:46:23 EDT 2022" starttimestamp="1647716908162" timestamp="16675116" timestamp2="16675116">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3042" _type="InsertStringCommand" date="Sat Mar 19 19:46:23 EDT 2022" starttimestamp="1647716908162" timestamp="16675273" timestamp2="16675273">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3043" _type="InsertStringCommand" date="Sat Mar 19 19:46:23 EDT 2022" starttimestamp="1647716908162" timestamp="16675273" timestamp2="16675273">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3045" _type="InsertStringCommand" date="Sat Mar 19 19:46:23 EDT 2022" starttimestamp="1647716908162" timestamp="16675404" timestamp2="16675404">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3046" _type="InsertStringCommand" date="Sat Mar 19 19:46:23 EDT 2022" starttimestamp="1647716908162" timestamp="16675404" timestamp2="16675404">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3048" _type="InsertStringCommand" date="Sat Mar 19 19:46:23 EDT 2022" starttimestamp="1647716908162" timestamp="16675493" timestamp2="16675493">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3049" _type="InsertStringCommand" date="Sat Mar 19 19:46:23 EDT 2022" starttimestamp="1647716908162" timestamp="16675493" timestamp2="16675493">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3051" _type="InsertStringCommand" date="Sat Mar 19 19:46:24 EDT 2022" starttimestamp="1647716908162" timestamp="16675878" timestamp2="16675878">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="3052" _type="InsertStringCommand" date="Sat Mar 19 19:46:24 EDT 2022" starttimestamp="1647716908162" timestamp="16675878" timestamp2="16675878">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="3054" _type="InsertStringCommand" date="Sat Mar 19 19:46:24 EDT 2022" starttimestamp="1647716908162" timestamp="16676036" timestamp2="16676036">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3055" _type="InsertStringCommand" date="Sat Mar 19 19:46:24 EDT 2022" starttimestamp="1647716908162" timestamp="16676037" timestamp2="16676037">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3057" _type="InsertStringCommand" date="Sat Mar 19 19:46:24 EDT 2022" starttimestamp="1647716908162" timestamp="16676093" timestamp2="16676093">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3058" _type="InsertStringCommand" date="Sat Mar 19 19:46:24 EDT 2022" starttimestamp="1647716908162" timestamp="16676093" timestamp2="16676093">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3060" _type="InsertStringCommand" date="Sat Mar 19 19:46:24 EDT 2022" starttimestamp="1647716908162" timestamp="16676229" timestamp2="16676229">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3061" _type="InsertStringCommand" date="Sat Mar 19 19:46:24 EDT 2022" starttimestamp="1647716908162" timestamp="16676229" timestamp2="16676229">
    <data><![CDATA[t]]></data>
  </Command>
  <DocumentChange __id="3028" _type="Insert" date="Sat Mar 19 19:46:22 EDT 2022" docASTNodeCount="1927" docActiveCodeLength="10772" docExpressionCount="1485" docLength="11972" length="14" offset="2417" repeat="11" starttimestamp="1647716908162" timestamp="16674206" timestamp2="16676208">
    <text><![CDATA[
		patronList]]></text>
  </DocumentChange>
  <Command __id="3063" _type="PauseCommand" date="Sat Mar 19 19:46:26 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16678297">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2068]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3064" _type="InsertStringCommand" date="Sat Mar 19 19:46:26 EDT 2022" starttimestamp="1647716908162" timestamp="16678348" timestamp2="16678348">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3065" _type="InsertStringCommand" date="Sat Mar 19 19:46:26 EDT 2022" starttimestamp="1647716908162" timestamp="16678348" timestamp2="16678348">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3066" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sat Mar 19 19:46:26 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="16678354" />
  <DocumentChange __id="3062" _type="Insert" date="Sat Mar 19 19:46:26 EDT 2022" docASTNodeCount="1927" docActiveCodeLength="10773" docExpressionCount="1487" docLength="11973" length="1" offset="2431" starttimestamp="1647716908162" timestamp="16678297">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="3068" _type="PauseCommand" date="Sat Mar 19 19:46:28 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16680302">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1948]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3072" _type="PauseCommand" date="Sat Mar 19 19:46:30 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16682509">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2207]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="3071" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sat Mar 19 19:46:30 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="16682509" />
  <Command __id="3074" _type="InsertStringCommand" date="Sat Mar 19 19:46:30 EDT 2022" starttimestamp="1647716908162" timestamp="16682627" timestamp2="16682627">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3075" _type="InsertStringCommand" date="Sat Mar 19 19:46:30 EDT 2022" starttimestamp="1647716908162" timestamp="16682627" timestamp2="16682627">
    <data><![CDATA[(]]></data>
  </Command>
  <DocumentChange __id="3067" _type="Insert" date="Sat Mar 19 19:46:28 EDT 2022" docASTNodeCount="1929" docActiveCodeLength="10776" docExpressionCount="1487" docLength="11976" length="3" offset="2432" repeat="3" starttimestamp="1647716908162" timestamp="16680302" timestamp2="16681381">
    <text><![CDATA[add]]></text>
  </DocumentChange>
  <DocumentChange __id="3073" _type="Replace" date="Sat Mar 19 19:46:30 EDT 2022" docASTNodeCount="1930" docActiveCodeLength="10782" docExpressionCount="1489" docLength="11982" endLine="81" insertionLength="9" int_docASTNodeCount="1927" int_docActiveCodeLength="10773" int_docExpressionCount="1487" int_docLength="11973" length="3" offset="2432" startLine="81" starttimestamp="1647716908162" timestamp="16682532">
    <deletedText><![CDATA[add]]></deletedText>
    <insertedText><![CDATA[add(null)]]></insertedText>
  </DocumentChange>
  <Command __id="3077" _type="PauseCommand" date="Sat Mar 19 19:46:37 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16688942">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[6315]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="3076" _type="Replace" date="Sat Mar 19 19:46:37 EDT 2022" docASTNodeCount="1930" docActiveCodeLength="10779" docExpressionCount="1489" docLength="11979" endLine="81" insertionLength="1" int_docASTNodeCount="1929" int_docActiveCodeLength="10778" int_docExpressionCount="1488" int_docLength="11978" length="4" offset="2436" startLine="81" starttimestamp="1647716908162" timestamp="16688942">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[0]]></insertedText>
  </DocumentChange>
  <Command __id="3078" _type="InsertStringCommand" date="Sat Mar 19 19:46:37 EDT 2022" starttimestamp="1647716908162" timestamp="16688989" timestamp2="16688989">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="3079" _type="InsertStringCommand" date="Sat Mar 19 19:46:37 EDT 2022" starttimestamp="1647716908162" timestamp="16688989" timestamp2="16688989">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="3081" _type="InsertStringCommand" date="Sat Mar 19 19:46:38 EDT 2022" starttimestamp="1647716908162" timestamp="16689980" timestamp2="16689980">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="3082" _type="InsertStringCommand" date="Sat Mar 19 19:46:38 EDT 2022" starttimestamp="1647716908162" timestamp="16689980" timestamp2="16689980">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="3085" _type="PauseCommand" date="Sat Mar 19 19:46:39 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16691281">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1301]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="3084" _type="InsertStringCommand" date="Sat Mar 19 19:46:39 EDT 2022" starttimestamp="1647716908162" timestamp="16691281" timestamp2="16691281">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3086" _type="InsertStringCommand" date="Sat Mar 19 19:46:39 EDT 2022" starttimestamp="1647716908162" timestamp="16691281" timestamp2="16691281">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3088" _type="InsertStringCommand" date="Sat Mar 19 19:46:39 EDT 2022" starttimestamp="1647716908162" timestamp="16691480" timestamp2="16691480">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3089" _type="InsertStringCommand" date="Sat Mar 19 19:46:39 EDT 2022" starttimestamp="1647716908162" timestamp="16691480" timestamp2="16691480">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3091" _type="InsertStringCommand" date="Sat Mar 19 19:46:39 EDT 2022" starttimestamp="1647716908162" timestamp="16691591" timestamp2="16691591">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3092" _type="InsertStringCommand" date="Sat Mar 19 19:46:39 EDT 2022" starttimestamp="1647716908162" timestamp="16691591" timestamp2="16691591">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3094" _type="InsertStringCommand" date="Sat Mar 19 19:46:39 EDT 2022" starttimestamp="1647716908162" timestamp="16691689" timestamp2="16691689">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="3095" _type="InsertStringCommand" date="Sat Mar 19 19:46:39 EDT 2022" starttimestamp="1647716908162" timestamp="16691689" timestamp2="16691689">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="3097" _type="InsertStringCommand" date="Sat Mar 19 19:46:39 EDT 2022" starttimestamp="1647716908162" timestamp="16691818" timestamp2="16691818">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3098" _type="InsertStringCommand" date="Sat Mar 19 19:46:39 EDT 2022" starttimestamp="1647716908162" timestamp="16691818" timestamp2="16691818">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3100" _type="InsertStringCommand" date="Sat Mar 19 19:46:40 EDT 2022" starttimestamp="1647716908162" timestamp="16692158" timestamp2="16692158">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3101" _type="InsertStringCommand" date="Sat Mar 19 19:46:40 EDT 2022" starttimestamp="1647716908162" timestamp="16692159" timestamp2="16692159">
    <data><![CDATA[A]]></data>
  </Command>
  <DocumentChange __id="3080" _type="Insert" date="Sat Mar 19 19:46:38 EDT 2022" docASTNodeCount="1931" docActiveCodeLength="10786" docExpressionCount="1490" docLength="11986" length="7" offset="2437" repeat="7" starttimestamp="1647716908162" timestamp="16689967" timestamp2="16692144">
    <text><![CDATA[, new A]]></text>
  </DocumentChange>
  <Command __id="3103" _type="PauseCommand" date="Sat Mar 19 19:46:42 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16694457">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2298]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3104" _type="InsertStringCommand" date="Sat Mar 19 19:46:42 EDT 2022" starttimestamp="1647716908162" timestamp="16694483" timestamp2="16694483">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3105" _type="InsertStringCommand" date="Sat Mar 19 19:46:42 EDT 2022" starttimestamp="1647716908162" timestamp="16694483" timestamp2="16694483">
    <data><![CDATA[P]]></data>
  </Command>
  <DocumentChange __id="3102" _type="Insert" date="Sat Mar 19 19:46:42 EDT 2022" docASTNodeCount="1931" docActiveCodeLength="10787" docExpressionCount="1490" docLength="11987" length="1" offset="2444" starttimestamp="1647716908162" timestamp="16694457">
    <text><![CDATA[P]]></text>
  </DocumentChange>
  <Command __id="3107" _type="PauseCommand" date="Sat Mar 19 19:46:45 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16697504">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3021]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3108" _type="InsertStringCommand" date="Sat Mar 19 19:46:45 EDT 2022" starttimestamp="1647716908162" timestamp="16697522" timestamp2="16697522">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3109" _type="InsertStringCommand" date="Sat Mar 19 19:46:45 EDT 2022" starttimestamp="1647716908162" timestamp="16697522" timestamp2="16697522">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3111" _type="InsertStringCommand" date="Sat Mar 19 19:46:45 EDT 2022" starttimestamp="1647716908162" timestamp="16697555" timestamp2="16697555">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3112" _type="InsertStringCommand" date="Sat Mar 19 19:46:45 EDT 2022" starttimestamp="1647716908162" timestamp="16697555" timestamp2="16697555">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3114" _type="InsertStringCommand" date="Sat Mar 19 19:46:45 EDT 2022" starttimestamp="1647716908162" timestamp="16697598" timestamp2="16697598">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3115" _type="InsertStringCommand" date="Sat Mar 19 19:46:45 EDT 2022" starttimestamp="1647716908162" timestamp="16697598" timestamp2="16697598">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3117" _type="InsertStringCommand" date="Sat Mar 19 19:46:45 EDT 2022" starttimestamp="1647716908162" timestamp="16697630" timestamp2="16697630">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3118" _type="InsertStringCommand" date="Sat Mar 19 19:46:45 EDT 2022" starttimestamp="1647716908162" timestamp="16697630" timestamp2="16697630">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3120" _type="InsertStringCommand" date="Sat Mar 19 19:46:45 EDT 2022" starttimestamp="1647716908162" timestamp="16697673" timestamp2="16697673">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3121" _type="InsertStringCommand" date="Sat Mar 19 19:46:45 EDT 2022" starttimestamp="1647716908162" timestamp="16697673" timestamp2="16697673">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3123" _type="PauseCommand" date="Sat Mar 19 19:46:47 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16699490">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1817]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="3122" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sat Mar 19 19:46:47 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="16699490" />
  <Command __id="3124" _type="MoveCaretCommand" caretOffset="1749" date="Sat Mar 19 19:46:47 EDT 2022" docOffset="2445" starttimestamp="1647716908162" timestamp="16699571" />
  <Command __id="3125" _type="MoveCaretCommand" caretOffset="1749" date="Sat Mar 19 19:46:47 EDT 2022" docOffset="2445" starttimestamp="1647716908162" timestamp="16699571" />
  <Command __id="3127" _type="InsertStringCommand" date="Sat Mar 19 19:46:48 EDT 2022" starttimestamp="1647716908162" timestamp="16699892" timestamp2="16699892">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3128" _type="InsertStringCommand" date="Sat Mar 19 19:46:48 EDT 2022" starttimestamp="1647716908162" timestamp="16699892" timestamp2="16699892">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3130" _type="PauseCommand" date="Sat Mar 19 19:46:49 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16700905">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1013]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3129" _type="MoveCaretCommand" caretOffset="1757" date="Sat Mar 19 19:46:49 EDT 2022" docOffset="2453" starttimestamp="1647716908162" timestamp="16700905" />
  <Command __id="3131" _type="MoveCaretCommand" caretOffset="1757" date="Sat Mar 19 19:46:49 EDT 2022" docOffset="2453" starttimestamp="1647716908162" timestamp="16700905" />
  <DocumentChange __id="3106" _type="Insert" date="Sat Mar 19 19:46:45 EDT 2022" docASTNodeCount="1933" docActiveCodeLength="10793" docExpressionCount="1491" docLength="11993" length="6" offset="2445" repeat="5" starttimestamp="1647716908162" timestamp="16697504" timestamp2="16697659">
    <text><![CDATA[tron()]]></text>
  </DocumentChange>
  <DocumentChange __id="3126" _type="Insert" date="Sat Mar 19 19:46:48 EDT 2022" docASTNodeCount="1933" docActiveCodeLength="10794" docExpressionCount="1491" docLength="11994" length="1" offset="2445" starttimestamp="1647716908162" timestamp="16699858">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <Command __id="3133" _type="PauseCommand" date="Sat Mar 19 19:46:50 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16702214">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1309]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3134" _type="InsertStringCommand" date="Sat Mar 19 19:46:50 EDT 2022" starttimestamp="1647716908162" timestamp="16702257" timestamp2="16702257">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3135" _type="InsertStringCommand" date="Sat Mar 19 19:46:50 EDT 2022" starttimestamp="1647716908162" timestamp="16702257" timestamp2="16702257">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3137" _type="PauseCommand" date="Sat Mar 19 19:46:51 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16703674">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1417]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3136" _type="MoveCaretCommand" caretOffset="1796" date="Sat Mar 19 19:46:51 EDT 2022" docOffset="2492" starttimestamp="1647716908162" timestamp="16703674" />
  <Command __id="3138" _type="MoveCaretCommand" caretOffset="1796" date="Sat Mar 19 19:46:51 EDT 2022" docOffset="2492" starttimestamp="1647716908162" timestamp="16703674" />
  <DocumentChange __id="3132" _type="Insert" date="Sat Mar 19 19:46:50 EDT 2022" docASTNodeCount="1933" docActiveCodeLength="10795" docExpressionCount="1491" docLength="11995" length="1" offset="2453" starttimestamp="1647716908162" timestamp="16702214">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="3140" _type="PauseCommand" date="Sat Mar 19 19:46:53 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16705191">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1517]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3143" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:46:58 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16710533" type="Run" />
  <Command __id="3145" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:46:58 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16710533" type="Run" />
  <DocumentChange __id="3139" _type="Insert" date="Sat Mar 19 19:46:53 EDT 2022" docASTNodeCount="1933" docActiveCodeLength="10799" docExpressionCount="1491" docLength="11999" length="4" offset="2492" starttimestamp="1647716908162" timestamp="16705191">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="3147" _type="PauseCommand" date="Sat Mar 19 19:47:01 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16713516">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2983]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3148" _type="MoveCaretCommand" caretOffset="1956" date="Sat Mar 19 19:47:01 EDT 2022" docOffset="2917" starttimestamp="1647716908162" timestamp="16713749" />
  <Command __id="3146" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:47:01 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16713516">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		"), Diff(INSERT,"//"), Diff(EQUAL,"editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package main;

import java.awt.BorderLayout;
import java.awt.Component;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import bus.uigen.attributes.AttributeNames;
import bus.uigen.test.AFunctionTester;
import bus.uigen.widgets.VirtualComponent;
import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import controls.Painter;
import factories.AFactory;
import graphics.ACircle;
import graphics.AButtonArrayScene;
import graphics.AChef;
import graphics.ALine;
import graphics.APatron;
import graphics.AScene;
import graphics.AnAngle;
import graphics.AProducerConsumerScene;
import graphics.AnAvatar;
import graphics.Angle;
import graphics.ProducerConsumerScene;
import graphics.Avatar;
import graphics.Line;
import graphics.Scene;
import util.misc.Console;

public class MainClass {
	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();
	static ProducerConsumerScene scene1 = new AButtonArrayScene();

	public static void main(String[] args) {
		
//		animateGraphics();
//		animateArrayUse();
		animateArrayUseInteractive();
	}
	
	public static void animateGraphics() {
		Scene Restaurant = new AScene();
		OEFrame editor = ObjectEditor.edit(Restaurant);
		editor.showDrawPanel();
		editor.showTreePanel();
//		Component c = editor.getDrawComponent();
//		VirtualComponent v = editor.getDrawVirtualComponent();
//		c.addMouseListener(null);

		
	}

	public static void animateArrayUseInteractive() {

		ObjectEditor.confirmSelectedMethodParameters(false);
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);
		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");


		try {
			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};
			Object[] initSceneDefaultArgs = {1, 4};
			String[] initSceneArgNames = {"number of patrons", "number of chefs"};

			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);
			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);
			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);

		} catch (NoSuchMethodException e) {
			e.printStackTrace();
		} catch (SecurityException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		OEFrame editor = ObjectEditor.edit(scene);
		//editor.hideMainPanel();
		editor.showDrawPanel();
		editor.showToolBar();
		
//		JFrame frame = new JFrame();
//		//frame.add((Component) console, BorderLayout.CENTER);
//		frame.setSize(1000, 1000);
//		frame.setVisible(true);
		
	
		
//		JPanel panel = new JPanel();
//		JButton button1 = control.getChefToBuffer();
//		panel.add(button1);
//		frame.add(panel);
	}
	
	public static void animatePainterTwo(Painter view) {
		JFrame aFrame = new JFrame();
		aFrame.add((Component) view, BorderLayout.CENTER);
		aFrame.setSize(1000, 1000);
		aFrame.setVisible(true);
		JPanel panel = new JPanel();
		aFrame.add(panel, BorderLayout.NORTH);
	}
	
	public static void moveAvatar() {
		System.out.println("test1");
		scene.getChefList().get(2).getChef().move(30, 0);
		scene.getChefList().get(2).getStove().move(10, 0);
		System.out.println("Moving the stove: \n");
		scene.getChefList().get(3).getStove().move(30, 30);
	}

}
]]></snapshot>
  </Command>
  <Command __id="3150" _type="PauseCommand" date="Sat Mar 19 19:47:05 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16717120">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3371]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3151" _type="MoveCaretCommand" caretOffset="1800" date="Sat Mar 19 19:47:05 EDT 2022" docOffset="2496" starttimestamp="1647716908162" timestamp="16717331" />
  <Command __id="3153" _type="PauseCommand" date="Sat Mar 19 19:47:10 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16722715">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5384]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3152" _type="MoveCaretCommand" caretOffset="2022" date="Sat Mar 19 19:47:10 EDT 2022" docOffset="2718" starttimestamp="1647716908162" timestamp="16722715" />
  <Command __id="3154" _type="MoveCaretCommand" caretOffset="2022" date="Sat Mar 19 19:47:10 EDT 2022" docOffset="2718" starttimestamp="1647716908162" timestamp="16722715" />
  <Command __id="3149" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:47:05 EDT 2022" docASTNodeCount="1933" docActiveCodeLength="10799" docExpressionCount="1491" docLength="11999" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16717120">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer-Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		"), Diff(INSERT,"patronList.add(0, new APatron());¶		"), Diff(EQUAL,"chefList = new ArrayList<AChef>();¶	"), Diff(INSERT,"	¶	"), Diff(EQUAL,"}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶//		bufferView = new ABoundedBufferView();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶		¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	@Visible(false)¶	public Circle getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
@Label("Producer-Consumer Scene")
public class AProducerConsumerScene implements ProducerConsumerScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AProducerConsumerScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AProducerConsumerScene() {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		patronList.add(0, new APatron());
		chefList = new ArrayList<AChef>();
		
	}
	
	@Label("Init Scene")
	public void initScene(int patronAmount, int chefAmount) {
//		bufferView = new ABoundedBufferView();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
		
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	
	
	@Override
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	@Visible(false)
	public Circle getBuffer() {
		return bufferView;
	}
	
	@Override
	@Label("Chef to the table")
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="3156" _type="PauseCommand" date="Sat Mar 19 19:47:13 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16725616">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2901]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3157" _type="InsertStringCommand" date="Sat Mar 19 19:47:13 EDT 2022" starttimestamp="1647716908162" timestamp="16725666" timestamp2="16725666">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3158" _type="InsertStringCommand" date="Sat Mar 19 19:47:13 EDT 2022" starttimestamp="1647716908162" timestamp="16725666" timestamp2="16725666">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3161" _type="PauseCommand" date="Sat Mar 19 19:47:15 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16727646">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1980]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="3160" _type="InsertStringCommand" date="Sat Mar 19 19:47:15 EDT 2022" starttimestamp="1647716908162" timestamp="16727646" timestamp2="16727646">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3162" _type="InsertStringCommand" date="Sat Mar 19 19:47:15 EDT 2022" starttimestamp="1647716908162" timestamp="16727647" timestamp2="16727647">
    <data><![CDATA[p]]></data>
  </Command>
  <DocumentChange __id="3155" _type="Insert" date="Sat Mar 19 19:47:13 EDT 2022" docASTNodeCount="1935" docActiveCodeLength="10804" docExpressionCount="1492" docLength="12004" length="5" offset="2718" repeat="2" starttimestamp="1647716908162" timestamp="16725616" timestamp2="16727613">
    <text><![CDATA[
		p]]></text>
  </DocumentChange>
  <Command __id="3164" _type="PauseCommand" date="Sat Mar 19 19:47:17 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16729631">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1984]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="3163" _type="Insert" date="Sat Mar 19 19:47:17 EDT 2022" docASTNodeCount="1937" docActiveCodeLength="10815" docExpressionCount="1494" docLength="12015" length="11" offset="2723" repeat="11" starttimestamp="1647716908162" timestamp="16729631" timestamp2="16730903">
    <text><![CDATA[atronList.c]]></text>
  </DocumentChange>
  <Command __id="3165" _type="InsertStringCommand" date="Sat Mar 19 19:47:17 EDT 2022" starttimestamp="1647716908162" timestamp="16729669" timestamp2="16729669">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3166" _type="InsertStringCommand" date="Sat Mar 19 19:47:17 EDT 2022" starttimestamp="1647716908162" timestamp="16729669" timestamp2="16729669">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3168" _type="InsertStringCommand" date="Sat Mar 19 19:47:17 EDT 2022" starttimestamp="1647716908162" timestamp="16729698" timestamp2="16729698">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3169" _type="InsertStringCommand" date="Sat Mar 19 19:47:17 EDT 2022" starttimestamp="1647716908162" timestamp="16729698" timestamp2="16729698">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3171" _type="InsertStringCommand" date="Sat Mar 19 19:47:17 EDT 2022" starttimestamp="1647716908162" timestamp="16729733" timestamp2="16729733">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3172" _type="InsertStringCommand" date="Sat Mar 19 19:47:17 EDT 2022" starttimestamp="1647716908162" timestamp="16729733" timestamp2="16729733">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3174" _type="InsertStringCommand" date="Sat Mar 19 19:47:17 EDT 2022" starttimestamp="1647716908162" timestamp="16729784" timestamp2="16729784">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3175" _type="InsertStringCommand" date="Sat Mar 19 19:47:17 EDT 2022" starttimestamp="1647716908162" timestamp="16729785" timestamp2="16729785">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3177" _type="InsertStringCommand" date="Sat Mar 19 19:47:17 EDT 2022" starttimestamp="1647716908162" timestamp="16729822" timestamp2="16729822">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3178" _type="InsertStringCommand" date="Sat Mar 19 19:47:17 EDT 2022" starttimestamp="1647716908162" timestamp="16729822" timestamp2="16729822">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3180" _type="InsertStringCommand" date="Sat Mar 19 19:47:18 EDT 2022" starttimestamp="1647716908162" timestamp="16729862" timestamp2="16729862">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="3181" _type="InsertStringCommand" date="Sat Mar 19 19:47:18 EDT 2022" starttimestamp="1647716908162" timestamp="16729862" timestamp2="16729862">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="3183" _type="InsertStringCommand" date="Sat Mar 19 19:47:18 EDT 2022" starttimestamp="1647716908162" timestamp="16729912" timestamp2="16729912">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3184" _type="InsertStringCommand" date="Sat Mar 19 19:47:18 EDT 2022" starttimestamp="1647716908162" timestamp="16729912" timestamp2="16729912">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3186" _type="InsertStringCommand" date="Sat Mar 19 19:47:18 EDT 2022" starttimestamp="1647716908162" timestamp="16729964" timestamp2="16729964">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3187" _type="InsertStringCommand" date="Sat Mar 19 19:47:18 EDT 2022" starttimestamp="1647716908162" timestamp="16729964" timestamp2="16729964">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3189" _type="InsertStringCommand" date="Sat Mar 19 19:47:18 EDT 2022" starttimestamp="1647716908162" timestamp="16730014" timestamp2="16730014">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3190" _type="InsertStringCommand" date="Sat Mar 19 19:47:18 EDT 2022" starttimestamp="1647716908162" timestamp="16730014" timestamp2="16730014">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3192" _type="InsertStringCommand" date="Sat Mar 19 19:47:18 EDT 2022" starttimestamp="1647716908162" timestamp="16730070" timestamp2="16730070">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3193" _type="InsertStringCommand" date="Sat Mar 19 19:47:18 EDT 2022" starttimestamp="1647716908162" timestamp="16730071" timestamp2="16730071">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3194" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sat Mar 19 19:47:18 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="16730079" />
  <Command __id="3197" _type="PauseCommand" date="Sat Mar 19 19:47:19 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16731626">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1547]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="3196" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sat Mar 19 19:47:19 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="16731626" />
  <Command __id="3199" _type="InsertStringCommand" date="Sat Mar 19 19:47:19 EDT 2022" starttimestamp="1647716908162" timestamp="16731657" timestamp2="16731657">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3200" _type="InsertStringCommand" date="Sat Mar 19 19:47:19 EDT 2022" starttimestamp="1647716908162" timestamp="16731657" timestamp2="16731657">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="3198" _type="Replace" date="Sat Mar 19 19:47:19 EDT 2022" docASTNodeCount="1937" docActiveCodeLength="10822" docExpressionCount="1494" docLength="12022" endLine="92" insertionLength="8" int_docASTNodeCount="1935" int_docActiveCodeLength="10814" int_docExpressionCount="1492" int_docLength="12014" length="1" offset="2733" startLine="92" starttimestamp="1647716908162" timestamp="16731635">
    <deletedText><![CDATA[c]]></deletedText>
    <insertedText><![CDATA[clear();]]></insertedText>
  </DocumentChange>
  <Command __id="3202" _type="PauseCommand" date="Sat Mar 19 19:47:26 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="16738363">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[6706]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3203" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:47:26 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="16738529" />
  <Command __id="3201" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:47:26 EDT 2022" docASTNodeCount="56" docActiveCodeLength="381" docExpressionCount="31" docLength="678" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16738363">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeListener;
import java.util.List;

import util.models.PropertyListenerRegisterer;

public interface ProducerConsumerScene {
	List<APatron> getPatronList();
	List<AChef> getChefList();
	Circle getBuffer();
	void addPropertyChangeListener(PropertyChangeListener arg0);
	//void approachBuffer(int bufferNumber);
	//void approachBuffer(Avatar avatar, int bufferNumber);
//	void chefApproachBuffer(Chef chef, int bufferNumber);
	//void moveToBuffer(Avatar avatar, int bufferNumber);
	//void chefApproachBuffer(int chef, int bufferNumber);
	//public void processHeads(Head aHead);
	void chefToTable(Head aHead);
}
]]></snapshot>
  </Command>
  <Command __id="3205" _type="PauseCommand" date="Sat Mar 19 19:47:28 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16740143">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1614]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3207" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:47:31 EDT 2022" starttimestamp="1647716908162" timestamp="16742861" />
  <Command __id="3209" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:47:31 EDT 2022" starttimestamp="1647716908162" timestamp="16743041" />
  <Command __id="3210" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:47:31 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16743476" type="Run" />
  <Command __id="3211" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:47:31 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16743477" type="Run" />
  <Command __id="3213" _type="PauseCommand" date="Sat Mar 19 19:47:33 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16745066">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1589]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3212" _type="ConsoleOutput" date="Sat Mar 19 19:47:33 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16745066" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(INSERT,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3214" _type="ShellCommand" date="Sat Mar 19 19:47:33 EDT 2022" starttimestamp="1647716908162" timestamp="16745392" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3215" _type="ConsoleOutput" date="Sat Mar 19 19:47:34 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16746251" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene"), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron"), Diff(EQUAL,".addPropertyChangeListener("), Diff(INSERT,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with"), Diff(INSERT,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"Property Listener)"), Diff(INSERT,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3216" _type="ConsoleOutput" date="Sat Mar 19 19:47:34 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16746318" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"Table"), Diff(EQUAL,".addPropertyChangeListener("), Diff(DELETE,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use"), Diff(INSERT," should be associated with"), Diff(EQUAL," annotation"), Diff(INSERT,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"interface java.beans."), Diff(EQUAL,"Property"), Diff(DELETE,"Change"), Diff(INSERT," "), Diff(EQUAL,"Listener)"), Diff(DELETE," for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Line"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="3217" _type="ConsoleOutput" date="Sat Mar 19 19:47:35 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16747032" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 

W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visible
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(INSERT," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Tab"), Diff(INSERT,"nAng"), Diff(EQUAL,"le.addPropertyChangeListener("), Diff(INSERT,"graphics.Angle,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with"), Diff(INSERT,"¶W*** Use"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"Property "), Diff(INSERT,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChange"), Diff(EQUAL,"Listener)¶W*** Implicit property ZIndex of  A"), Diff(DELETE,"Line"), Diff(INSERT,"Head"), Diff(EQUAL," ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"Head"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"¶W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visible¶")]]]></diff>
  </Command>
  <Command __id="3218" _type="ConsoleOutput" date="Sat Mar 19 19:47:35 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16747200" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W"), Diff(INSERT,"E"), Diff(EQUAL,"***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. ¶¶W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visible"), Diff(INSERT,"Could not find image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3219" _type="ConsoleOutput" date="Sat Mar 19 19:47:35 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16747595" type="ConsoleOutput">
    <outputString><![CDATA[W*** Assuming implicit pattern: No Pattern
  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer
E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@894858
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"W*** Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶"), Diff(EQUAL,"E**"), Diff(DELETE,"*"), Diff(INSERT," "), Diff(EQUAL,"Could not "), Diff(DELETE,"f"), Diff(EQUAL,"in"), Diff(DELETE,"d image file:"), Diff(INSERT,"voke addPropertyChangeListener ongraphics.ABoundedBuffer@894858"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3221" _type="PauseCommand" date="Sat Mar 19 19:47:37 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16749048">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1453]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3220" _type="ConsoleOutput" date="Sat Mar 19 19:47:37 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16749048" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Producer-Consumer Scene.Patron List.1:.Patron.Head not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annot"), Diff(INSERT,"Value: null of Producer-Consumer Scene.P"), Diff(EQUAL,"at"), Diff(DELETE,"i"), Diff(INSERT,"r"), Diff(EQUAL,"on "), Diff(DELETE,"@StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@894858"), Diff(INSERT,"List.1:.Patron.Head not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3223" _type="PauseCommand" date="Sat Mar 19 19:47:49 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16761212">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[12164]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="3222" _type="ExceptionCommand" date="Sat Mar 19 19:47:49 EDT 2022" starttimestamp="1647716908162" timestamp="16761212" type="Exception">
    <exceptionString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@73f741e8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@73f741e8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@73f741e8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@73f741e8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5a85dbeb]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5a85dbeb]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5a85dbeb]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5a85dbeb]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2c50f2c4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2c50f2c4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2c50f2c4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2c50f2c4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4c97507d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4c97507d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4c97507d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4c97507d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@526a006]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@526a006]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@526a006]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@526a006]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@710879ca]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@710879ca]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@710879ca]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@710879ca]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@5a6563fd]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@5a6563fd]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@5a6563fd]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@5a6563fd]
Moving the stove: 

E**: exception invoking location methods
E**: exception invoking imageFileName methods
java.lang.NullPointerException: Cannot invoke "shapes.ImageModel.getImageFileName()" because "imageShape" is null
	at bus.uigen.oadapters.ImageShapeAdapter.recalculateViewObject(ImageShapeAdapter.java:116)
	at bus.uigen.oadapters.ShapeObjectAdapter.recalculateViewObject(ShapeObjectAdapter.java:553)
	at bus.uigen.oadapters.ShapeObjectAdapter.refreshValueButNotAtomic(ShapeObjectAdapter.java:608)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.CompositeAdapter.refreshValue(CompositeAdapter.java:212)
	at bus.uigen.oadapters.VectorAdapter.refreshValue(VectorAdapter.java:2055)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3225" _type="PauseCommand" date="Sat Mar 19 19:48:06 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16778273">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[17061]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3224" _type="ShellCommand" date="Sat Mar 19 19:48:06 EDT 2022" starttimestamp="1647716908162" timestamp="16778273" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3204" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:47:28 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16740143">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3227" _type="PauseCommand" date="Sat Mar 19 19:48:07 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16779502">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1228]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3228" _type="MoveCaretCommand" caretOffset="2045" date="Sat Mar 19 19:48:08 EDT 2022" docOffset="2741" starttimestamp="1647716908162" timestamp="16779869" />
  <Command __id="3226" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:48:07 EDT 2022" docASTNodeCount="1937" docActiveCodeLength="10822" docExpressionCount="1494" docLength="12022" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16779501">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer-Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		patronList.add(0, new APatron());¶		chefList = new ArrayList<AChef>();¶		¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶//		bufferView = new ABoundedBufferView();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶		¶		"), Diff(INSERT,"patronList.clear();¶		"), Diff(EQUAL,"for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	@Visible(false)¶	public Circle getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
@Label("Producer-Consumer Scene")
public class AProducerConsumerScene implements ProducerConsumerScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AProducerConsumerScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AProducerConsumerScene() {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		patronList.add(0, new APatron());
		chefList = new ArrayList<AChef>();
		
	}
	
	@Label("Init Scene")
	public void initScene(int patronAmount, int chefAmount) {
//		bufferView = new ABoundedBufferView();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
		
		patronList.clear();
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	
	
	@Override
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	@Visible(false)
	public Circle getBuffer() {
		return bufferView;
	}
	
	@Override
	@Label("Chef to the table")
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="3230" _type="PauseCommand" date="Sat Mar 19 19:48:10 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16782047">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2177]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3231" _type="InsertStringCommand" date="Sat Mar 19 19:48:10 EDT 2022" starttimestamp="1647716908162" timestamp="16782096" timestamp2="16782096">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3232" _type="InsertStringCommand" date="Sat Mar 19 19:48:10 EDT 2022" starttimestamp="1647716908162" timestamp="16782096" timestamp2="16782096">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3234" _type="PauseCommand" date="Sat Mar 19 19:48:11 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16783703">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1607]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3233" _type="MoveCaretCommand" caretOffset="1796" date="Sat Mar 19 19:48:11 EDT 2022" docOffset="2492" starttimestamp="1647716908162" timestamp="16783703" />
  <Command __id="3235" _type="MoveCaretCommand" caretOffset="1796" date="Sat Mar 19 19:48:11 EDT 2022" docOffset="2492" starttimestamp="1647716908162" timestamp="16783703" />
  <Command __id="3236" _type="MoveCaretCommand" caretOffset="1800" date="Sat Mar 19 19:48:12 EDT 2022" docOffset="2496" starttimestamp="1647716908162" timestamp="16784315" />
  <Command __id="3237" _type="MoveCaretCommand" caretOffset="1800" date="Sat Mar 19 19:48:12 EDT 2022" docOffset="2496" starttimestamp="1647716908162" timestamp="16784315" />
  <DocumentChange __id="3229" _type="Insert" date="Sat Mar 19 19:48:10 EDT 2022" docASTNodeCount="1937" docActiveCodeLength="10826" docExpressionCount="1494" docLength="12026" length="4" offset="2741" starttimestamp="1647716908162" timestamp="16782046">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="3239" _type="PauseCommand" date="Sat Mar 19 19:48:14 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16786406">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2091]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="3238" _type="Insert" date="Sat Mar 19 19:48:14 EDT 2022" docASTNodeCount="1939" docActiveCodeLength="10832" docExpressionCount="1495" docLength="12032" length="6" offset="2496" repeat="6" starttimestamp="1647716908162" timestamp="16786406" timestamp2="16786579">
    <text><![CDATA[patron]]></text>
  </DocumentChange>
  <Command __id="3240" _type="InsertStringCommand" date="Sat Mar 19 19:48:14 EDT 2022" starttimestamp="1647716908162" timestamp="16786439" timestamp2="16786439">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3241" _type="InsertStringCommand" date="Sat Mar 19 19:48:14 EDT 2022" starttimestamp="1647716908162" timestamp="16786439" timestamp2="16786439">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3243" _type="InsertStringCommand" date="Sat Mar 19 19:48:14 EDT 2022" starttimestamp="1647716908162" timestamp="16786473" timestamp2="16786473">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3244" _type="InsertStringCommand" date="Sat Mar 19 19:48:14 EDT 2022" starttimestamp="1647716908162" timestamp="16786473" timestamp2="16786473">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3246" _type="InsertStringCommand" date="Sat Mar 19 19:48:14 EDT 2022" starttimestamp="1647716908162" timestamp="16786507" timestamp2="16786507">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3247" _type="InsertStringCommand" date="Sat Mar 19 19:48:14 EDT 2022" starttimestamp="1647716908162" timestamp="16786507" timestamp2="16786507">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3249" _type="InsertStringCommand" date="Sat Mar 19 19:48:14 EDT 2022" starttimestamp="1647716908162" timestamp="16786539" timestamp2="16786539">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3250" _type="InsertStringCommand" date="Sat Mar 19 19:48:14 EDT 2022" starttimestamp="1647716908162" timestamp="16786539" timestamp2="16786539">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3252" _type="InsertStringCommand" date="Sat Mar 19 19:48:14 EDT 2022" starttimestamp="1647716908162" timestamp="16786573" timestamp2="16786573">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3253" _type="InsertStringCommand" date="Sat Mar 19 19:48:14 EDT 2022" starttimestamp="1647716908162" timestamp="16786573" timestamp2="16786573">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3255" _type="InsertStringCommand" date="Sat Mar 19 19:48:14 EDT 2022" starttimestamp="1647716908162" timestamp="16786614" timestamp2="16786614">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3256" _type="InsertStringCommand" date="Sat Mar 19 19:48:14 EDT 2022" starttimestamp="1647716908162" timestamp="16786614" timestamp2="16786614">
    <data><![CDATA[n]]></data>
  </Command>
  <DocumentChange __id="3257" _type="Delete" date="Sat Mar 19 19:48:15 EDT 2022" docASTNodeCount="1937" docActiveCodeLength="10826" docExpressionCount="1494" docLength="12026" endLine="83" length="6" offset="2496" repeat="6" startLine="83" starttimestamp="1647716908162" timestamp="16787397" timestamp2="16788137">
    <text><![CDATA[patron]]></text>
  </DocumentChange>
  <Command __id="3258" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:48:15 EDT 2022" starttimestamp="1647716908162" timestamp="16787412" />
  <Command __id="3259" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:48:15 EDT 2022" starttimestamp="1647716908162" timestamp="16787413" />
  <Command __id="3261" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:48:15 EDT 2022" starttimestamp="1647716908162" timestamp="16787564" />
  <Command __id="3262" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:48:15 EDT 2022" starttimestamp="1647716908162" timestamp="16787564" />
  <Command __id="3264" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:48:15 EDT 2022" starttimestamp="1647716908162" timestamp="16787707" />
  <Command __id="3265" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:48:15 EDT 2022" starttimestamp="1647716908162" timestamp="16787708" />
  <Command __id="3267" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:48:16 EDT 2022" starttimestamp="1647716908162" timestamp="16787850" />
  <Command __id="3268" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:48:16 EDT 2022" starttimestamp="1647716908162" timestamp="16787850" />
  <Command __id="3270" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:48:16 EDT 2022" starttimestamp="1647716908162" timestamp="16788002" />
  <Command __id="3271" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:48:16 EDT 2022" starttimestamp="1647716908162" timestamp="16788002" />
  <Command __id="3273" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:48:16 EDT 2022" starttimestamp="1647716908162" timestamp="16788167" />
  <Command __id="3274" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:48:16 EDT 2022" starttimestamp="1647716908162" timestamp="16788167" />
  <Command __id="3276" _type="InsertStringCommand" date="Sat Mar 19 19:48:16 EDT 2022" starttimestamp="1647716908162" timestamp="16788428" timestamp2="16788428">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3277" _type="InsertStringCommand" date="Sat Mar 19 19:48:16 EDT 2022" starttimestamp="1647716908162" timestamp="16788428" timestamp2="16788428">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3279" _type="InsertStringCommand" date="Sat Mar 19 19:48:16 EDT 2022" starttimestamp="1647716908162" timestamp="16788491" timestamp2="16788491">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3280" _type="InsertStringCommand" date="Sat Mar 19 19:48:16 EDT 2022" starttimestamp="1647716908162" timestamp="16788491" timestamp2="16788491">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3282" _type="InsertStringCommand" date="Sat Mar 19 19:48:16 EDT 2022" starttimestamp="1647716908162" timestamp="16788574" timestamp2="16788574">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3283" _type="InsertStringCommand" date="Sat Mar 19 19:48:16 EDT 2022" starttimestamp="1647716908162" timestamp="16788574" timestamp2="16788574">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3285" _type="InsertStringCommand" date="Sat Mar 19 19:48:16 EDT 2022" starttimestamp="1647716908162" timestamp="16788687" timestamp2="16788687">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3286" _type="InsertStringCommand" date="Sat Mar 19 19:48:16 EDT 2022" starttimestamp="1647716908162" timestamp="16788687" timestamp2="16788687">
    <data><![CDATA[f]]></data>
  </Command>
  <DocumentChange __id="3275" _type="Insert" date="Sat Mar 19 19:48:16 EDT 2022" docASTNodeCount="1939" docActiveCodeLength="10830" docExpressionCount="1495" docLength="12030" length="4" offset="2496" repeat="4" starttimestamp="1647716908162" timestamp="16788399" timestamp2="16788658">
    <text><![CDATA[chef]]></text>
  </DocumentChange>
  <Command __id="3288" _type="PauseCommand" date="Sat Mar 19 19:48:19 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16790912">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2225]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3289" _type="InsertStringCommand" date="Sat Mar 19 19:48:19 EDT 2022" starttimestamp="1647716908162" timestamp="16790941" timestamp2="16790941">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="3290" _type="InsertStringCommand" date="Sat Mar 19 19:48:19 EDT 2022" starttimestamp="1647716908162" timestamp="16790941" timestamp2="16790941">
    <data><![CDATA[L]]></data>
  </Command>
  <DocumentChange __id="3287" _type="Insert" date="Sat Mar 19 19:48:19 EDT 2022" docASTNodeCount="1939" docActiveCodeLength="10831" docExpressionCount="1495" docLength="12031" length="1" offset="2500" starttimestamp="1647716908162" timestamp="16790912">
    <text><![CDATA[L]]></text>
  </DocumentChange>
  <Command __id="3292" _type="PauseCommand" date="Sat Mar 19 19:48:22 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16793943">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3002]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3293" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16793977" timestamp2="16793977">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3294" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16793977" timestamp2="16793977">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3296" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794010" timestamp2="16794010">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3297" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794010" timestamp2="16794010">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3299" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794052" timestamp2="16794052">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3300" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794053" timestamp2="16794053">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3302" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794098" timestamp2="16794098">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3303" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794099" timestamp2="16794099">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3305" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794141" timestamp2="16794141">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3306" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794141" timestamp2="16794141">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3308" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794179" timestamp2="16794179">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3309" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794180" timestamp2="16794180">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3311" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794232" timestamp2="16794232">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3312" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794233" timestamp2="16794233">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3314" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794290" timestamp2="16794290">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="3315" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794290" timestamp2="16794290">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="3317" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794337" timestamp2="16794337">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="3318" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794337" timestamp2="16794337">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="3320" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794383" timestamp2="16794383">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3321" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794384" timestamp2="16794384">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3323" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794429" timestamp2="16794429">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3324" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794429" timestamp2="16794429">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3326" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794474" timestamp2="16794474">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3327" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794474" timestamp2="16794474">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3329" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794511" timestamp2="16794511">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="3330" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794542" timestamp2="16794542">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="3332" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794597" timestamp2="16794597">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3333" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794597" timestamp2="16794597">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="3335" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794644" timestamp2="16794644">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3336" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794644" timestamp2="16794644">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3338" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794692" timestamp2="16794692">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3339" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794692" timestamp2="16794692">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3341" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794731" timestamp2="16794731">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3342" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794731" timestamp2="16794731">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3344" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794774" timestamp2="16794774">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3345" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794774" timestamp2="16794774">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3347" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794819" timestamp2="16794819">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3348" _type="InsertStringCommand" date="Sat Mar 19 19:48:22 EDT 2022" starttimestamp="1647716908162" timestamp="16794820" timestamp2="16794820">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3350" _type="InsertStringCommand" date="Sat Mar 19 19:48:23 EDT 2022" starttimestamp="1647716908162" timestamp="16794862" timestamp2="16794862">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3351" _type="InsertStringCommand" date="Sat Mar 19 19:48:23 EDT 2022" starttimestamp="1647716908162" timestamp="16794862" timestamp2="16794862">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3352" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sat Mar 19 19:48:23 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="16794886" />
  <Command __id="3354" _type="PauseCommand" date="Sat Mar 19 19:48:25 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16797569">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2683]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="3353" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sat Mar 19 19:48:25 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="16797569" />
  <Command __id="3355" _type="MoveCaretCommand" caretOffset="1812" date="Sat Mar 19 19:48:25 EDT 2022" docOffset="2508" starttimestamp="1647716908162" timestamp="16797634" />
  <Command __id="3356" _type="MoveCaretCommand" caretOffset="1812" date="Sat Mar 19 19:48:25 EDT 2022" docOffset="2508" starttimestamp="1647716908162" timestamp="16797634" />
  <DocumentChange __id="3291" _type="Insert" date="Sat Mar 19 19:48:22 EDT 2022" docASTNodeCount="1944" docActiveCodeLength="10852" docExpressionCount="1499" docLength="12052" length="21" offset="2501" repeat="20" starttimestamp="1647716908162" timestamp="16793943" timestamp2="16794840">
    <text><![CDATA[ist.add0, new AChef()]]></text>
  </DocumentChange>
  <Command __id="3358" _type="PauseCommand" date="Sat Mar 19 19:48:28 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16799966">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2332]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3359" _type="InsertStringCommand" date="Sat Mar 19 19:48:28 EDT 2022" starttimestamp="1647716908162" timestamp="16799994" timestamp2="16799994">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3360" _type="InsertStringCommand" date="Sat Mar 19 19:48:28 EDT 2022" starttimestamp="1647716908162" timestamp="16799994" timestamp2="16799994">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3362" _type="PauseCommand" date="Sat Mar 19 19:48:31 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16802998">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3004]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3361" _type="MoveCaretCommand" caretOffset="1827" date="Sat Mar 19 19:48:31 EDT 2022" docOffset="2523" starttimestamp="1647716908162" timestamp="16802998" />
  <Command __id="3363" _type="MoveCaretCommand" caretOffset="1827" date="Sat Mar 19 19:48:31 EDT 2022" docOffset="2523" starttimestamp="1647716908162" timestamp="16802999" />
  <Command __id="3365" _type="InsertStringCommand" date="Sat Mar 19 19:48:31 EDT 2022" starttimestamp="1647716908162" timestamp="16803812" timestamp2="16803812">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="3366" _type="InsertStringCommand" date="Sat Mar 19 19:48:31 EDT 2022" starttimestamp="1647716908162" timestamp="16803812" timestamp2="16803812">
    <data><![CDATA[)]]></data>
  </Command>
  <DocumentChange __id="3357" _type="Insert" date="Sat Mar 19 19:48:28 EDT 2022" docASTNodeCount="1945" docActiveCodeLength="10853" docExpressionCount="1500" docLength="12053" length="1" offset="2508" starttimestamp="1647716908162" timestamp="16799966">
    <text><![CDATA[(]]></text>
  </DocumentChange>
  <DocumentChange __id="3364" _type="Insert" date="Sat Mar 19 19:48:31 EDT 2022" docASTNodeCount="1945" docActiveCodeLength="10854" docExpressionCount="1500" docLength="12054" length="1" offset="2523" starttimestamp="1647716908162" timestamp="16803782">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <Command __id="3368" _type="PauseCommand" date="Sat Mar 19 19:48:34 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16806106">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2294]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3369" _type="InsertStringCommand" date="Sat Mar 19 19:48:34 EDT 2022" starttimestamp="1647716908162" timestamp="16806152" timestamp2="16806152">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3370" _type="InsertStringCommand" date="Sat Mar 19 19:48:34 EDT 2022" starttimestamp="1647716908162" timestamp="16806152" timestamp2="16806152">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3372" _type="PauseCommand" date="Sat Mar 19 19:48:38 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16810771">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4619]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3371" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 19:48:38 EDT 2022" starttimestamp="1647716908162" timestamp="16810771" />
  <Command __id="3373" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:48:39 EDT 2022" starttimestamp="1647716908162" timestamp="16810857" />
  <Command __id="3374" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:48:39 EDT 2022" starttimestamp="1647716908162" timestamp="16810999" />
  <Command __id="3376" _type="PauseCommand" date="Sat Mar 19 19:48:52 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16824512">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[13513]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3375" _type="MoveCaretCommand" caretOffset="2078" date="Sat Mar 19 19:48:52 EDT 2022" docOffset="2774" starttimestamp="1647716908162" timestamp="16824512" />
  <Command __id="3377" _type="MoveCaretCommand" caretOffset="2078" date="Sat Mar 19 19:48:52 EDT 2022" docOffset="2774" starttimestamp="1647716908162" timestamp="16824512" />
  <DocumentChange __id="3367" _type="Insert" date="Sat Mar 19 19:48:34 EDT 2022" docASTNodeCount="1945" docActiveCodeLength="10855" docExpressionCount="1500" docLength="12055" length="1" offset="2524" starttimestamp="1647716908162" timestamp="16806106">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="3379" _type="PauseCommand" date="Sat Mar 19 19:48:54 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16826020">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1508]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3380" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826043" timestamp2="16826043">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3381" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826043" timestamp2="16826043">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3383" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826075" timestamp2="16826075">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3384" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826075" timestamp2="16826075">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3386" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826116" timestamp2="16826116">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3387" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826116" timestamp2="16826116">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3389" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826149" timestamp2="16826149">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="3390" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826149" timestamp2="16826149">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="3392" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826179" timestamp2="16826179">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3393" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826179" timestamp2="16826179">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3395" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826212" timestamp2="16826212">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3396" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826212" timestamp2="16826212">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3398" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826275" timestamp2="16826275">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3399" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826275" timestamp2="16826275">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3401" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826317" timestamp2="16826317">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3402" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826317" timestamp2="16826317">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="3403" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Sat Mar 19 19:48:54 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="16826365" />
  <Command __id="3405" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Sat Mar 19 19:48:54 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="16826556" />
  <Command __id="3407" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826652" timestamp2="16826652">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3408" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826652" timestamp2="16826652">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3410" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826696" timestamp2="16826696">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3411" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826696" timestamp2="16826696">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3413" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826813" timestamp2="16826813">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3414" _type="InsertStringCommand" date="Sat Mar 19 19:48:54 EDT 2022" starttimestamp="1647716908162" timestamp="16826813" timestamp2="16826813">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3416" _type="InsertStringCommand" date="Sat Mar 19 19:48:55 EDT 2022" starttimestamp="1647716908162" timestamp="16826921" timestamp2="16826921">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3417" _type="InsertStringCommand" date="Sat Mar 19 19:48:55 EDT 2022" starttimestamp="1647716908162" timestamp="16826922" timestamp2="16826922">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3419" _type="PauseCommand" date="Sat Mar 19 19:48:56 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16828301">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1379]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3418" _type="MoveCaretCommand" caretOffset="2080" date="Sat Mar 19 19:48:56 EDT 2022" docOffset="2776" starttimestamp="1647716908162" timestamp="16828301" />
  <Command __id="3420" _type="MoveCaretCommand" caretOffset="2080" date="Sat Mar 19 19:48:56 EDT 2022" docOffset="2776" starttimestamp="1647716908162" timestamp="16828301" />
  <Command __id="3422" _type="InsertStringCommand" date="Sat Mar 19 19:48:56 EDT 2022" starttimestamp="1647716908162" timestamp="16828489" timestamp2="16828489">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3423" _type="InsertStringCommand" date="Sat Mar 19 19:48:56 EDT 2022" starttimestamp="1647716908162" timestamp="16828489" timestamp2="16828489">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3424" _type="MoveCaretCommand" caretOffset="2092" date="Sat Mar 19 19:48:57 EDT 2022" docOffset="2788" starttimestamp="1647716908162" timestamp="16829274" />
  <Command __id="3425" _type="MoveCaretCommand" caretOffset="2092" date="Sat Mar 19 19:48:57 EDT 2022" docOffset="2788" starttimestamp="1647716908162" timestamp="16829274" />
  <DocumentChange __id="3378" _type="Insert" date="Sat Mar 19 19:48:54 EDT 2022" docASTNodeCount="1949" docActiveCodeLength="10869" docExpressionCount="1503" docLength="12069" length="14" offset="2774" repeat="14" starttimestamp="1647716908162" timestamp="16826020" timestamp2="16828462">
    <text><![CDATA[chefList.clear]]></text>
  </DocumentChange>
  <Command __id="3427" _type="PauseCommand" date="Sat Mar 19 19:48:59 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16831655">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2381]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3428" _type="InsertStringCommand" date="Sat Mar 19 19:48:59 EDT 2022" starttimestamp="1647716908162" timestamp="16831671" timestamp2="16831671">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3429" _type="InsertStringCommand" date="Sat Mar 19 19:48:59 EDT 2022" starttimestamp="1647716908162" timestamp="16831671" timestamp2="16831671">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3430" _type="SelectTextCommand" caretOffset="2094" date="Sat Mar 19 19:49:00 EDT 2022" end="2094" start="2093" starttimestamp="1647716908162" timestamp="16832276" />
  <Command __id="3431" _type="SelectTextCommand" caretOffset="2094" date="Sat Mar 19 19:49:00 EDT 2022" end="2094" start="2093" starttimestamp="1647716908162" timestamp="16832276" />
  <Command __id="3433" _type="PauseCommand" date="Sat Mar 19 19:49:01 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16833309">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1033]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3432" _type="SelectTextCommand" caretOffset="2094" date="Sat Mar 19 19:49:01 EDT 2022" end="2094" start="2093" starttimestamp="1647716908162" timestamp="16833309" />
  <Command __id="3434" _type="SelectTextCommand" caretOffset="2094" date="Sat Mar 19 19:49:01 EDT 2022" end="2094" start="2093" starttimestamp="1647716908162" timestamp="16833309" />
  <Command __id="3435" _type="MoveCaretCommand" caretOffset="2094" date="Sat Mar 19 19:49:02 EDT 2022" docOffset="2790" starttimestamp="1647716908162" timestamp="16834144" />
  <Command __id="3436" _type="MoveCaretCommand" caretOffset="2094" date="Sat Mar 19 19:49:02 EDT 2022" docOffset="2790" starttimestamp="1647716908162" timestamp="16834144" />
  <Command __id="3438" _type="InsertStringCommand" date="Sat Mar 19 19:49:03 EDT 2022" starttimestamp="1647716908162" timestamp="16834889" timestamp2="16834889">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3439" _type="InsertStringCommand" date="Sat Mar 19 19:49:03 EDT 2022" starttimestamp="1647716908162" timestamp="16834890" timestamp2="16834890">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="3441" _type="PauseCommand" date="Sat Mar 19 19:49:04 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16836571">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1681]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3447" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:49:09 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16840956" type="Run" />
  <Command __id="3449" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:49:09 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16840957" type="Run" />
  <Command __id="3451" _type="PauseCommand" date="Sat Mar 19 19:49:11 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16842940">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1983]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3450" _type="ConsoleOutput" date="Sat Mar 19 19:49:11 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16842940" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of "), Diff(INSERT,"public void graphics.A"), Diff(EQUAL,"Producer"), Diff(DELETE,"-"), Diff(EQUAL,"Consumer"), Diff(DELETE," "), Diff(EQUAL,"Scene."), Diff(DELETE,"Patron List.1:.Patron.Head not in range."), Diff(INSERT,"addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3452" _type="ShellCommand" date="Sat Mar 19 19:49:11 EDT 2022" starttimestamp="1647716908162" timestamp="16843275" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3453" _type="ConsoleOutput" date="Sat Mar 19 19:49:12 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16844232" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene"), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron"), Diff(EQUAL,".addPropertyChangeListener("), Diff(INSERT,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with"), Diff(INSERT,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"Property Listener)"), Diff(INSERT,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3454" _type="ConsoleOutput" date="Sat Mar 19 19:49:12 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16844363" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"Table"), Diff(EQUAL,".addPropertyChangeListener("), Diff(DELETE,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use"), Diff(INSERT," should be associated with"), Diff(EQUAL," annotation"), Diff(INSERT,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"interface java.beans."), Diff(EQUAL,"Property"), Diff(DELETE,"Change"), Diff(INSERT," "), Diff(EQUAL,"Listener)"), Diff(DELETE," for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Line"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="3455" _type="ConsoleOutput" date="Sat Mar 19 19:49:13 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16845063" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(INSERT," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Tab"), Diff(INSERT,"nAng"), Diff(EQUAL,"le.addPropertyChangeListener("), Diff(INSERT,"graphics.Angle,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with"), Diff(INSERT,"¶W*** Use"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"Property Listener)¶W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(INSERT,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3456" _type="ConsoleOutput" date="Sat Mar 19 19:49:13 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16845156" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 

W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visible
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. ¶¶W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visible"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3457" _type="ConsoleOutput" date="Sat Mar 19 19:49:13 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16845215" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. ¶¶W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visib"), Diff(INSERT,"E***Could not find image fi"), Diff(EQUAL,"le"), Diff(INSERT,":"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3458" _type="ConsoleOutput" date="Sat Mar 19 19:49:13 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16845638" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W"), Diff(EQUAL,"***"), Diff(DELETE,"Could not find image file:"), Diff(INSERT," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3459" _type="ConsoleOutput" date="Sat Mar 19 19:49:13 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16845761" type="ConsoleOutput">
    <outputString><![CDATA[W*** The Y property of .chefList.0.chef.head = -49 is < 0. Parts of it may not be visible
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"The Y property of .chefList.0.chef.head = -49 is < 0. Parts of it may not be visible¶E***Could not find image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3460" _type="ConsoleOutput" date="Sat Mar 19 19:49:14 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16845853" type="ConsoleOutput">
    <outputString><![CDATA[W*** Assuming implicit pattern: No Pattern
  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer
E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@4aeaadc1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"The Y property of .chefList.0.chef.head = -49 is < 0. Parts of it may not be visible"), Diff(INSERT,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer"), Diff(EQUAL,"¶E**"), Diff(DELETE,"*"), Diff(INSERT," "), Diff(EQUAL,"Could not "), Diff(DELETE,"f"), Diff(EQUAL,"in"), Diff(DELETE,"d image file:"), Diff(INSERT,"voke addPropertyChangeListener ongraphics.ABoundedBuffer@4aeaadc1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3462" _type="PauseCommand" date="Sat Mar 19 19:49:15 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16847277">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1424]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3461" _type="ConsoleOutput" date="Sat Mar 19 19:49:15 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16847277" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Producer-Consumer Scene.Patron List.1:.Patron.Head not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@4aeaadc1"), Diff(INSERT,"Value: null of Producer-Consumer Scene.Patron List.1:.Patron.Head not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3463" _type="ConsoleOutput" date="Sat Mar 19 19:49:15 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16847750" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Producer-Consumer Scene.Chef List.1:.Chef.Head not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Producer-Consumer Scene."), Diff(DELETE,"Patron"), Diff(INSERT,"Chef"), Diff(EQUAL," List.1:."), Diff(DELETE,"Patron"), Diff(INSERT,"Chef"), Diff(EQUAL,".Head not in range.¶")]]]></diff>
  </Command>
  <Command __id="3465" _type="PauseCommand" date="Sat Mar 19 19:49:27 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16859227">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[11477]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="3464" _type="ExceptionCommand" date="Sat Mar 19 19:49:27 EDT 2022" starttimestamp="1647716908162" timestamp="16859227" type="Exception">
    <exceptionString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@36d510ac]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@36d510ac]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@36d510ac]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@36d510ac]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1ae8a7e5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1ae8a7e5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@1ae8a7e5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@1ae8a7e5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@11bc6226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@11bc6226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@11bc6226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@11bc6226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4983bd18]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4983bd18]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4983bd18]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4983bd18]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@57cd84f4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@57cd84f4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@57cd84f4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@57cd84f4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@8c5c667]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@8c5c667]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@8c5c667]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@8c5c667]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@7a1a380b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@7a1a380b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@7a1a380b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@7a1a380b]
Moving the stove: 

E**: exception invoking location methods
E**: exception invoking imageFileName methods
java.lang.NullPointerException: Cannot invoke "shapes.ImageModel.getImageFileName()" because "imageShape" is null
	at bus.uigen.oadapters.ImageShapeAdapter.recalculateViewObject(ImageShapeAdapter.java:116)
	at bus.uigen.oadapters.ShapeObjectAdapter.recalculateViewObject(ShapeObjectAdapter.java:553)
	at bus.uigen.oadapters.ShapeObjectAdapter.refreshValueButNotAtomic(ShapeObjectAdapter.java:608)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.CompositeAdapter.refreshValue(CompositeAdapter.java:212)
	at bus.uigen.oadapters.VectorAdapter.refreshValue(VectorAdapter.java:2055)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3467" _type="PauseCommand" date="Sat Mar 19 19:49:44 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16875964">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[16737]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3466" _type="ShellCommand" date="Sat Mar 19 19:49:44 EDT 2022" starttimestamp="1647716908162" timestamp="16875964" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3469" _type="PauseCommand" date="Sat Mar 19 19:49:59 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16891719">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[15755]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3468" _type="MoveCaretCommand" caretOffset="4084" date="Sat Mar 19 19:49:59 EDT 2022" docOffset="4780" starttimestamp="1647716908162" timestamp="16891719" />
  <Command __id="3470" _type="MoveCaretCommand" caretOffset="4084" date="Sat Mar 19 19:49:59 EDT 2022" docOffset="4780" starttimestamp="1647716908162" timestamp="16891719" />
  <Command __id="3471" _type="SelectTextCommand" caretOffset="4085" date="Sat Mar 19 19:49:59 EDT 2022" end="4085" start="4080" starttimestamp="1647716908162" timestamp="16891802" />
  <Command __id="3472" _type="SelectTextCommand" caretOffset="4085" date="Sat Mar 19 19:49:59 EDT 2022" end="4085" start="4080" starttimestamp="1647716908162" timestamp="16891802" />
  <Command __id="3473" _type="SelectTextCommand" caretOffset="4088" date="Sat Mar 19 19:50:00 EDT 2022" end="4088" start="4070" starttimestamp="1647716908162" timestamp="16891957" />
  <Command __id="3474" _type="SelectTextCommand" caretOffset="4088" date="Sat Mar 19 19:50:00 EDT 2022" end="4088" start="4070" starttimestamp="1647716908162" timestamp="16891957" />
  <Command __id="3476" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:50:00 EDT 2022" starttimestamp="1647716908162" timestamp="16892615" />
  <Command __id="3477" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:50:00 EDT 2022" starttimestamp="1647716908162" timestamp="16892615" />
  <Command __id="3479" _type="PauseCommand" date="Sat Mar 19 19:50:05 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16897249">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4634]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3478" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 19:50:05 EDT 2022" starttimestamp="1647716908162" timestamp="16897249" />
  <Command __id="3480" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:50:05 EDT 2022" starttimestamp="1647716908162" timestamp="16897390" />
  <Command __id="3481" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:50:05 EDT 2022" starttimestamp="1647716908162" timestamp="16897594" />
  <Command __id="3483" _type="PauseCommand" date="Sat Mar 19 19:50:23 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16915799">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[18205]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3482" _type="MoveCaretCommand" caretOffset="1679" date="Sat Mar 19 19:50:23 EDT 2022" docOffset="2375" starttimestamp="1647716908162" timestamp="16915799" />
  <Command __id="3484" _type="MoveCaretCommand" caretOffset="1679" date="Sat Mar 19 19:50:23 EDT 2022" docOffset="2375" starttimestamp="1647716908162" timestamp="16915799" />
  <Command __id="3486" _type="PauseCommand" date="Sat Mar 19 19:50:27 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16919314">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3515]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3497" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:50:37 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16929064" type="Run" />
  <Command __id="3499" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:50:37 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16929064" type="Run" />
  <Command __id="3501" _type="PauseCommand" date="Sat Mar 19 19:50:38 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16930322">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1258]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3500" _type="ConsoleOutput" date="Sat Mar 19 19:50:38 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16930322" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of "), Diff(INSERT,"public void graphics.A"), Diff(EQUAL,"Producer"), Diff(DELETE,"-"), Diff(EQUAL,"Consumer"), Diff(DELETE," "), Diff(EQUAL,"Scene."), Diff(DELETE,"Chef List.1:.Chef.Head not in range."), Diff(INSERT,"addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3502" _type="ShellCommand" date="Sat Mar 19 19:50:38 EDT 2022" starttimestamp="1647716908162" timestamp="16930689" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3503" _type="ConsoleOutput" date="Sat Mar 19 19:50:39 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16931567" type="ConsoleOutput">
    <outputString><![CDATA[W*** Assuming implicit pattern: No Pattern
  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer
E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@35f26e72
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverReg"), Diff(INSERT,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeL"), Diff(EQUAL,"iste"), Diff(DELETE,"r"), Diff(INSERT,"n"), Diff(EQUAL,"er"), Diff(DELETE,"(Property Listener)"), Diff(INSERT," ongraphics.ABoundedBuffer@35f26e72"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3504" _type="ConsoleOutput" date="Sat Mar 19 19:50:40 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16932149" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Assuming implicit pattern: No Pattern¶  If this pattern is correct, use annotation @StructurePattern("No Pattern") for class graphics.ABoundedBuffer¶E** Could not invoke addPropertyChangeListener ongraphics.ABoundedBuffer@35f26e72"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3505" _type="ConsoleOutput" date="Sat Mar 19 19:50:40 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16932418" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"ZIndex"), Diff(INSERT,"plate"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"nAvatar"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="3506" _type="ConsoleOutput" date="Sat Mar 19 19:50:40 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16932475" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"Table"), Diff(EQUAL,".addPropertyChangeListener("), Diff(DELETE,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use"), Diff(INSERT," should be associated with"), Diff(EQUAL," annotation"), Diff(INSERT,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. "), Diff(INSERT,"Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3507" _type="ConsoleOutput" date="Sat Mar 19 19:50:40 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16932567" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(INSERT," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Tab"), Diff(INSERT,"nAng"), Diff(EQUAL,"le.addPropertyChangeListener("), Diff(INSERT,"graphics.Angle,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with annotation: @ObserverReg"), Diff(INSERT,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeL"), Diff(EQUAL,"iste"), Diff(DELETE,"r"), Diff(INSERT,"n"), Diff(EQUAL,"er("), Diff(INSERT,"graphics.Angle,java.beans."), Diff(EQUAL,"Property"), Diff(DELETE," "), Diff(INSERT,"Change"), Diff(EQUAL,"Listener)¶")]]]></diff>
  </Command>
  <Command __id="3508" _type="ConsoleOutput" date="Sat Mar 19 19:50:40 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16932650" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 

W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visible
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. ¶¶W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visible"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3509" _type="ConsoleOutput" date="Sat Mar 19 19:50:40 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16932729" type="ConsoleOutput">
    <outputString><![CDATA[E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. ¶¶W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visib"), Diff(INSERT,"E***Could not find image fi"), Diff(EQUAL,"le"), Diff(INSERT,":"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3510" _type="ConsoleOutput" date="Sat Mar 19 19:50:41 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16933186" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"E"), Diff(INSERT,"W"), Diff(EQUAL,"***"), Diff(DELETE,"Could not find image file:"), Diff(INSERT," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3511" _type="ConsoleOutput" date="Sat Mar 19 19:50:41 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16933318" type="ConsoleOutput">
    <outputString><![CDATA[W*** The Y property of .chefList.0.chef.head = -49 is < 0. Parts of it may not be visible
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"The Y property of .chefList.0.chef.head = -49 is < 0. Parts of it may not be visible¶E***Could not find image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3513" _type="PauseCommand" date="Sat Mar 19 19:50:43 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="16934953">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1635]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3512" _type="ConsoleOutput" date="Sat Mar 19 19:50:43 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16934953" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Producer-Consumer Scene.Patron List.1:.Patron.Head not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"The Y property of .chefList.0.chef.head = -49 is < 0. Parts of it may not be visible¶E***Coul"), Diff(INSERT,"Value: null of Producer-Consumer Scene.Patron List.1:.Patron.Hea"), Diff(EQUAL,"d not "), Diff(DELETE,"f"), Diff(EQUAL,"in"), Diff(DELETE,"d image file:"), Diff(INSERT," range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3514" _type="ConsoleOutput" date="Sat Mar 19 19:50:43 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="16935415" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Producer-Consumer Scene.Chef List.1:.Chef.Head not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Producer-Consumer Scene."), Diff(DELETE,"Patron"), Diff(INSERT,"Chef"), Diff(EQUAL," List.1:."), Diff(DELETE,"Patron"), Diff(INSERT,"Chef"), Diff(EQUAL,".Head not in range.¶")]]]></diff>
  </Command>
  <Command __id="3516" _type="PauseCommand" date="Sat Mar 19 19:50:56 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="16948516">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[13101]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3515" _type="ShellCommand" date="Sat Mar 19 19:50:56 EDT 2022" starttimestamp="1647716908162" timestamp="16948516" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="3426" _type="Insert" date="Sat Mar 19 19:48:59 EDT 2022" docASTNodeCount="1949" docActiveCodeLength="10871" docExpressionCount="1503" docLength="12071" length="2" offset="2788" starttimestamp="1647716908162" timestamp="16831655">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <DocumentChange __id="3437" _type="Insert" date="Sat Mar 19 19:49:03 EDT 2022" docASTNodeCount="1949" docActiveCodeLength="10872" docExpressionCount="1503" docLength="12072" length="1" offset="2790" starttimestamp="1647716908162" timestamp="16834863">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="3475" _type="Delete" date="Sat Mar 19 19:50:00 EDT 2022" docASTNodeCount="1946" docActiveCodeLength="10854" docExpressionCount="1500" docLength="12054" endLine="165" length="18" offset="4766" startLine="164" starttimestamp="1647716908162" timestamp="16892584">
    <text><![CDATA[	@Visible(false)
]]></text>
  </DocumentChange>
  <Command __id="3518" _type="PauseCommand" date="Sat Mar 19 19:50:59 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16951313">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2797]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3519" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:50:59 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="16951687" />
  <Command __id="3521" _type="PauseCommand" date="Sat Mar 19 19:51:21 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="16973423">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[21736]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3520" _type="MoveCaretCommand" caretOffset="259" date="Sat Mar 19 19:51:21 EDT 2022" docOffset="382" starttimestamp="1647716908162" timestamp="16973423" />
  <Command __id="3523" _type="PauseCommand" date="Sat Mar 19 19:51:24 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="16976163">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2740]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3522" _type="MoveCaretCommand" caretOffset="401" date="Sat Mar 19 19:51:24 EDT 2022" docOffset="524" starttimestamp="1647716908162" timestamp="16976163" />
  <Command __id="3525" _type="PauseCommand" date="Sat Mar 19 19:52:01 EDT 2022" range="30s-1m" starttimestamp="1647716908162" timestamp="17013641">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[37478]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3524" _type="MoveCaretCommand" caretOffset="401" date="Sat Mar 19 19:52:01 EDT 2022" docOffset="524" starttimestamp="1647716908162" timestamp="17013641" />
  <Command __id="3527" _type="PauseCommand" date="Sat Mar 19 19:52:03 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17015800">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2159]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3526" _type="MoveCaretCommand" caretOffset="398" date="Sat Mar 19 19:52:03 EDT 2022" docOffset="521" starttimestamp="1647716908162" timestamp="17015800" />
  <Command __id="3517" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:50:59 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3047" docExpressionCount="353" docLength="3080" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="16951313">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ABoundedBufferView.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
public class ABoundedBufferView extends ACircle implements BoundedBufferView{
	//make observer of aboundedbuffer
	BoundedBuffer<Integer> observable;
	ACircle circle;
	ALine vertical;
	ALine horizontal;
	ALine diagonalOne;
	ALine diagonalTwo;
	ALine diagonalThree;
	ALine diagonalFour;
	
	int zero = 0;
	int one = 1;
	int two = 2;
	int three = 3;
	int four = 4;
	int five = 5;
	int six = 6;
	int seven = 7;
	
	public ABoundedBufferView() {
		observable = new ABoundedBuffer<Integer>();
		observable.put(zero);
		observable.put(one);
		observable.put(two);
		observable.put(three);
		observable.put(four);
		observable.put(five);
		observable.put(six);
		observable.put(seven);
		
		circle = new ACircle();
		vertical = new ALine();
		horizontal = new ALine();
		diagonalOne = new ALine();
		diagonalTwo = new ALine();
		diagonalThree = new ALine();
		diagonalFour = new ALine();
		
		vertical.setX(INITIAL_X+(INITIAL_Width/2));
		horizontal.setX(INITIAL_X);
		diagonalOne.setX(INITIAL_X+(INITIAL_Width/2));
		diagonalTwo.setX(INITIAL_X+(INITIAL_Width/2));
		diagonalThree.setX(INITIAL_X+(INITIAL_Width/2));
		diagonalFour.setX(INITIAL_X+(INITIAL_Width/2));
		
		vertical.setY(INITIAL_Y);
		horizontal.setY(INITIAL_Y+(INITIAL_Height/2));
		diagonalOne.setY(INITIAL_Y+(INITIAL_Height/2));
		diagonalTwo.setY(INITIAL_Y+(INITIAL_Width/2));
		diagonalThree.setY(INITIAL_Y+(INITIAL_Width/2));
		diagonalFour.setY(INITIAL_Y+(INITIAL_Width/2));
		
		vertical.setHeight(INITIAL_Height);
		horizontal.rotate(48);
		horizontal.setWidth(INITIAL_Width);	
		diagonalOne.setRadius(INITIAL_Height/2);
		diagonalOne.rotate(151);
		diagonalTwo.setRadius(INITIAL_Width/2);
		diagonalTwo.rotate(-8);
		diagonalThree.setRadius(INITIAL_Height/2);
		diagonalFour.setRadius(INITIAL_Width/2);
		diagonalThree.rotate(168);
		diagonalFour.rotate(8);
		
	}
	
	@Override
	public Line getVertical() {
		return vertical;
	}
	
	@Override
	public Line getHorizontal() {
		return horizontal;
	}
	
	@Override
	public Line getDiagonalOne() {
		return diagonalOne;
	}
	
	@Override
	public Line getDiagonalTwo() {
		return diagonalTwo;
	}
	
	@Override
	public Circle getCircle() {
		return circle;
	}
	
	@Override
	public Line getDiagonalThree() {
		return diagonalThree;
	}
	
	@Override
	public Line getDiagonalFour() {
		return diagonalFour;
	}
	
	@Override
	public BoundedBuffer<Integer> getBoundedBuffer() {
		return observable;
	}
	
	public void update(BoundedBuffer<Integer> buffer) {
		System.out.println("Buffer: " + buffer.get());
	}

	
	public static void main(String[] args) {
		BoundedBufferView NewTable = new ABoundedBufferView();
		OEFrame editor = ObjectEditor.edit(NewTable);
		editor.showDrawPanel();
		editor.showTreePanel();
	}
	
	

	
	

	
	
}
]]></snapshot>
  </Command>
  <Command __id="3529" _type="PauseCommand" date="Sat Mar 19 19:52:24 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="17035891">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[20091]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3530" _type="MoveCaretCommand" caretOffset="1956" date="Sat Mar 19 19:52:24 EDT 2022" docOffset="2917" starttimestamp="1647716908162" timestamp="17036058" />
  <Command __id="3532" _type="PauseCommand" date="Sat Mar 19 19:52:26 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17038336">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2278]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3531" _type="ShellCommand" date="Sat Mar 19 19:52:26 EDT 2022" starttimestamp="1647716908162" timestamp="17038336" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3534" _type="PauseCommand" date="Sat Mar 19 19:52:41 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="17053659">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[15322]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3533" _type="ConsoleOutput" date="Sat Mar 19 19:52:41 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17053658" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@51cb9117]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@51cb9117]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@51cb9117]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@51cb9117]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7083e61]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7083e61]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7083e61]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7083e61]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@33b0e7df]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@33b0e7df]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@33b0e7df]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@33b0e7df]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3166074b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3166074b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3166074b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3166074b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3ca87b59]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3ca87b59]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3ca87b59]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3ca87b59]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7a95b19b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7a95b19b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@7a95b19b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@7a95b19b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@4eaf3f09]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@4eaf3f09]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@4eaf3f09]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@4eaf3f09]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Producer-Consumer Scene.Chef List.1:.Chef.Head not in range."), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@51cb9117]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@51cb9117]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@51cb9117]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@51cb9117]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7083e61]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7083e61]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7083e61]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7083e61]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@33b0e7df]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@33b0e7df]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@33b0e7df]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@33b0e7df]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3166074b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3166074b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3166074b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3166074b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3ca87b59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3ca87b59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3ca87b59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3ca87b59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7a95b19b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7a95b19b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@7a95b19b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@7a95b19b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@4eaf3f09]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@4eaf3f09]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@4eaf3f09]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@4eaf3f09]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3535" _type="ExceptionCommand" date="Sat Mar 19 19:52:41 EDT 2022" starttimestamp="1647716908162" timestamp="17053715" type="Exception">
    <exceptionString><![CDATA[E**: exception invoking imageFileName methods
java.lang.NullPointerException: Cannot invoke "shapes.ImageModel.getImageFileName()" because "imageShape" is null
	at bus.uigen.oadapters.ImageShapeAdapter.recalculateViewObject(ImageShapeAdapter.java:116)
	at bus.uigen.oadapters.ShapeObjectAdapter.recalculateViewObject(ShapeObjectAdapter.java:553)
	at bus.uigen.oadapters.ShapeObjectAdapter.refreshValueButNotAtomic(ShapeObjectAdapter.java:608)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.CompositeAdapter.refreshValue(CompositeAdapter.java:212)
	at bus.uigen.oadapters.VectorAdapter.refreshValue(VectorAdapter.java:2055)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ObjectAdapter.implicitRefresh(ObjectAdapter.java:5406)
	at bus.uigen.uiFrame.doMyImplicitRefresh(uiFrame.java:4601)
	at bus.uigen.uiFrame.subDoImplicitRefresh(uiFrame.java:4702)
	at bus.uigen.uiFrame.doImplicitRefresh(uiFrame.java:4682)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1920)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2002)
	at bus.uigen.controller.models.AnInteractiveMethodInvoker.invokeDynamicCommand(AnInteractiveMethodInvoker.java:247)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:233)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3537" _type="PauseCommand" date="Sat Mar 19 19:53:02 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="17074222">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[20507]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3536" _type="ShellCommand" date="Sat Mar 19 19:53:02 EDT 2022" starttimestamp="1647716908162" timestamp="17074222" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3528" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:52:24 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17035891">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3539" _type="PauseCommand" date="Sat Mar 19 19:53:06 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17078210">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3987]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3540" _type="MoveCaretCommand" caretOffset="398" date="Sat Mar 19 19:53:06 EDT 2022" docOffset="521" starttimestamp="1647716908162" timestamp="17078698" />
  <Command __id="3542" _type="PauseCommand" date="Sat Mar 19 19:53:08 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17080552">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1853]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3541" _type="MoveCaretCommand" caretOffset="150" date="Sat Mar 19 19:53:08 EDT 2022" docOffset="273" starttimestamp="1647716908162" timestamp="17080551" />
  <Command __id="3543" _type="SelectTextCommand" caretOffset="152" date="Sat Mar 19 19:53:08 EDT 2022" end="152" start="145" starttimestamp="1647716908162" timestamp="17080719" />
  <Command __id="3545" _type="PauseCommand" date="Sat Mar 19 19:53:10 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17082181">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1461]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3544" _type="MoveCaretCommand" caretOffset="150" date="Sat Mar 19 19:53:10 EDT 2022" docOffset="273" starttimestamp="1647716908162" timestamp="17082180" />
  <Command __id="3538" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:53:06 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3047" docExpressionCount="353" docLength="3080" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17078209">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ABoundedBufferView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶public class ABoundedBufferView extends ACircle implements BoundedBufferView{¶	//make observer of aboundedbuffer¶	BoundedBuffer<Integer> observable;¶	ACircle circle;¶	ALine vertical;¶	ALine horizontal;¶	ALine diagonalOne;¶	ALine diagonalTwo;¶	ALine diagonalThree;¶	ALine diagonalFour;¶	¶	int zero = 0;¶	int one = 1;¶	int two = 2;¶	int three = 3;¶	int four = 4;¶	int five = 5;¶	int six = 6;¶	int seven = 7;¶	¶	public ABoundedBufferView() {¶		observable = new ABoundedBuffer<Integer>();¶		observable.put(zero);¶		observable.put(one);¶		observable.put(two);¶		observable.put(three);¶		observable.put(four);¶		observable.put(five);¶		observable.put(six);¶		observable.put(seven);¶		¶		circle = new ACircle();¶		vertical = new ALine();¶		horizontal = new ALine();¶		diagonalOne = new ALine();¶		diagonalTwo = new ALine();¶		diagonalThree = new ALine();¶		diagonalFour = new ALine();¶		¶		vertical.setX(INITIAL_X+(INITIAL_Width/2));¶		horizontal.setX(INITIAL_X);¶		diagonalOne.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalTwo.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalThree.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalFour.setX(INITIAL_X+(INITIAL_Width/2));¶		¶		vertical.setY(INITIAL_Y);¶		horizontal.setY(INITIAL_Y+(INITIAL_Height/2));¶		diagonalOne.setY(INITIAL_Y+(INITIAL_Height/2));¶		diagonalTwo.setY(INITIAL_Y+(INITIAL_Width/2));¶		diagonalThree.setY(INITIAL_Y+(INITIAL_Width/2));¶		diagonalFour.setY(INITIAL_Y+(INITIAL_Width/2));¶		¶		vertical.setHeight(INITIAL_Height);¶		horizontal.rotate(48);¶		horizontal.setWidth(INITIAL_Width);	¶		diagonalOne.setRadius(INITIAL_Height/2);¶		diagonalOne.rotate(151);¶		diagonalTwo.setRadius(INITIAL_Width/2);¶		diagonalTwo.rotate(-8);¶		diagonalThree.setRadius(INITIAL_Height/2);¶		diagonalFour.setRadius(INITIAL_Width/2);¶		diagonalThree.rotate(168);¶		diagonalFour.rotate(8);¶		¶	}¶	¶	@Override¶	public Line getVertical() {¶		return vertical;¶	}¶	¶	@Override¶	public Line getHorizontal() {¶		return horizontal;¶	}¶	¶	@Override¶	public Line getDiagonalOne() {¶		return diagonalOne;¶	}¶	¶	@Override¶	public Line getDiagonalTwo() {¶		return diagonalTwo;¶	}¶	¶	@Override¶	public Circle getCircle() {¶		return circle;¶	}¶	¶	@Override¶	public Line getDiagonalThree() {¶		return diagonalThree;¶	}¶	¶	@Override¶	public Line getDiagonalFour() {¶		return diagonalFour;¶	}¶	¶	@Override¶	public BoundedBuffer<Integer> getBoundedBuffer() {¶		return observable;¶	}¶	¶	public void update(BoundedBuffer<Integer> buffer) {¶		System.out.println("Buffer: " + buffer.get());¶	}¶¶	¶	public static void main(String[] args) {¶		BoundedBufferView NewTable = new ABoundedBufferView();¶		OEFrame editor = ObjectEditor.edit(NewTable);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶	}¶	¶	¶¶	¶	¶¶	¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="3547" _type="PauseCommand" date="Sat Mar 19 19:53:28 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="17100161">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[17981]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3548" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:53:28 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="17100498" />
  <Command __id="3546" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:53:28 EDT 2022" docASTNodeCount="223" docActiveCodeLength="1432" docExpressionCount="129" docLength="1941" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17100161">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ABoundedBuffer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.List;

public class ABoundedBuffer<ElementType> implements BoundedBuffer<ElementType>{
	public static final int  MAX_SIZE = 8;
	Object[] buffer = new Object[MAX_SIZE];
	int size = 0;
	int nextIn = 0;
	int nextOut = 0;
	
	PropertyListenerSupport propertySupport = new APropertyListenerSupport();
//	public synchronized void put(ElementType element) {

	public void put(ElementType element) {
//		if (size >= MAX_SIZE)
//			return;
		while (size >= MAX_SIZE) {
			try {
				wait();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		buffer[nextIn] = element;
		int oldNextIn = nextIn;
		nextIn = (nextIn + 1) % MAX_SIZE;
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "nextIn", oldNextIn, nextIn));
		size++;
		//notify();
	}	
	
//	public synchronized ElementType get() {
	public  ElementType get() {
//		if (size == 0) {
//			return null;
//		}
		while (size == 0) {
			try {
				wait();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		ElementType retVal = (ElementType) buffer[nextOut];
		int oldNextOut = nextOut;
		nextOut = (nextOut + 1) % MAX_SIZE;
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "nextOut", oldNextOut, nextOut));
		size--;
		//notify();
		return retVal;		
	}
//	public static void main(String[] args) {
//		BoundedBuffer<String> greetings = new ABoundedBuffer();
//		Runnable producer1 = new AProducer<String>(greetings, "Hello");
//		Runnable producer2 = new AProducer<String>(greetings, "Ca Va");
//		(new Thread(producer1)).start();
//		(new Thread(producer2)).start();
//	}
	
	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		propertySupport.addPropertyChangeListener(arg0);
		propertySupport.notifyAll();
	}
}]]></snapshot>
  </Command>
  <Command __id="3550" _type="PauseCommand" date="Sat Mar 19 19:53:44 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="17116818">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[16320]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3551" _type="MoveCaretCommand" caretOffset="150" date="Sat Mar 19 19:53:45 EDT 2022" docOffset="273" starttimestamp="1647716908162" timestamp="17117112" />
  <Command __id="3549" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:53:44 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3047" docExpressionCount="353" docLength="3080" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17116818">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ABoundedBufferView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶public class ABoundedBufferView extends ACircle implements BoundedBufferView{¶	//make observer of aboundedbuffer¶	BoundedBuffer<Integer> observable;¶	ACircle circle;¶	ALine vertical;¶	ALine horizontal;¶	ALine diagonalOne;¶	ALine diagonalTwo;¶	ALine diagonalThree;¶	ALine diagonalFour;¶	¶	int zero = 0;¶	int one = 1;¶	int two = 2;¶	int three = 3;¶	int four = 4;¶	int five = 5;¶	int six = 6;¶	int seven = 7;¶	¶	public ABoundedBufferView() {¶		observable = new ABoundedBuffer<Integer>();¶		observable.put(zero);¶		observable.put(one);¶		observable.put(two);¶		observable.put(three);¶		observable.put(four);¶		observable.put(five);¶		observable.put(six);¶		observable.put(seven);¶		¶		circle = new ACircle();¶		vertical = new ALine();¶		horizontal = new ALine();¶		diagonalOne = new ALine();¶		diagonalTwo = new ALine();¶		diagonalThree = new ALine();¶		diagonalFour = new ALine();¶		¶		vertical.setX(INITIAL_X+(INITIAL_Width/2));¶		horizontal.setX(INITIAL_X);¶		diagonalOne.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalTwo.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalThree.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalFour.setX(INITIAL_X+(INITIAL_Width/2));¶		¶		vertical.setY(INITIAL_Y);¶		horizontal.setY(INITIAL_Y+(INITIAL_Height/2));¶		diagonalOne.setY(INITIAL_Y+(INITIAL_Height/2));¶		diagonalTwo.setY(INITIAL_Y+(INITIAL_Width/2));¶		diagonalThree.setY(INITIAL_Y+(INITIAL_Width/2));¶		diagonalFour.setY(INITIAL_Y+(INITIAL_Width/2));¶		¶		vertical.setHeight(INITIAL_Height);¶		horizontal.rotate(48);¶		horizontal.setWidth(INITIAL_Width);	¶		diagonalOne.setRadius(INITIAL_Height/2);¶		diagonalOne.rotate(151);¶		diagonalTwo.setRadius(INITIAL_Width/2);¶		diagonalTwo.rotate(-8);¶		diagonalThree.setRadius(INITIAL_Height/2);¶		diagonalFour.setRadius(INITIAL_Width/2);¶		diagonalThree.rotate(168);¶		diagonalFour.rotate(8);¶		¶	}¶	¶	@Override¶	public Line getVertical() {¶		return vertical;¶	}¶	¶	@Override¶	public Line getHorizontal() {¶		return horizontal;¶	}¶	¶	@Override¶	public Line getDiagonalOne() {¶		return diagonalOne;¶	}¶	¶	@Override¶	public Line getDiagonalTwo() {¶		return diagonalTwo;¶	}¶	¶	@Override¶	public Circle getCircle() {¶		return circle;¶	}¶	¶	@Override¶	public Line getDiagonalThree() {¶		return diagonalThree;¶	}¶	¶	@Override¶	public Line getDiagonalFour() {¶		return diagonalFour;¶	}¶	¶	@Override¶	public BoundedBuffer<Integer> getBoundedBuffer() {¶		return observable;¶	}¶	¶	public void update(BoundedBuffer<Integer> buffer) {¶		System.out.println("Buffer: " + buffer.get());¶	}¶¶	¶	public static void main(String[] args) {¶		BoundedBufferView NewTable = new ABoundedBufferView();¶		OEFrame editor = ObjectEditor.edit(NewTable);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶	}¶	¶	¶¶	¶	¶¶	¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="3553" _type="PauseCommand" date="Sat Mar 19 19:53:49 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17121550">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4438]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3554" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:53:50 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="17121995" />
  <Command __id="3552" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:53:49 EDT 2022" docASTNodeCount="223" docActiveCodeLength="1432" docExpressionCount="129" docLength="1941" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17121550">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ABoundedBuffer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.List;¶¶public class ABoundedBuffer<ElementType> implements BoundedBuffer<ElementType>{¶	public static final int  MAX_SIZE = 8;¶	Object[] buffer = new Object[MAX_SIZE];¶	int size = 0;¶	int nextIn = 0;¶	int nextOut = 0;¶	¶	PropertyListenerSupport propertySupport = new APropertyListenerSupport();¶//	public synchronized void put(ElementType element) {¶¶	public void put(ElementType element) {¶//		if (size >= MAX_SIZE)¶//			return;¶		while (size >= MAX_SIZE) {¶			try {¶				wait();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶		}¶		buffer[nextIn] = element;¶		int oldNextIn = nextIn;¶		nextIn = (nextIn + 1) % MAX_SIZE;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "nextIn", oldNextIn, nextIn));¶		size++;¶		//notify();¶	}	¶	¶//	public synchronized ElementType get() {¶	public  ElementType get() {¶//		if (size == 0) {¶//			return null;¶//		}¶		while (size == 0) {¶			try {¶				wait();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶		}¶		ElementType retVal = (ElementType) buffer[nextOut];¶		int oldNextOut = nextOut;¶		nextOut = (nextOut + 1) % MAX_SIZE;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "nextOut", oldNextOut, nextOut));¶		size--;¶		//notify();¶		return retVal;		¶	}¶//	public static void main(String[] args) {¶//		BoundedBuffer<String> greetings = new ABoundedBuffer();¶//		Runnable producer1 = new AProducer<String>(greetings, "Hello");¶//		Runnable producer2 = new AProducer<String>(greetings, "Ca Va");¶//		(new Thread(producer1)).start();¶//		(new Thread(producer2)).start();¶//	}¶	¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		propertySupport.addPropertyChangeListener(arg0);¶		propertySupport.notifyAll();¶	}¶}")]]]></diff>
  </Command>
  <Command __id="3556" _type="PauseCommand" date="Sat Mar 19 19:54:01 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="17133034">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11039]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3557" _type="MoveCaretCommand" caretOffset="1954" date="Sat Mar 19 19:54:01 EDT 2022" docOffset="2650" starttimestamp="1647716908162" timestamp="17133635" />
  <Command __id="3559" _type="PauseCommand" date="Sat Mar 19 19:54:03 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17135047">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1411]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3558" _type="MoveCaretCommand" caretOffset="384" date="Sat Mar 19 19:54:03 EDT 2022" docOffset="1080" starttimestamp="1647716908162" timestamp="17135046" />
  <Command __id="3560" _type="MoveCaretCommand" caretOffset="384" date="Sat Mar 19 19:54:03 EDT 2022" docOffset="1080" starttimestamp="1647716908162" timestamp="17135048" />
  <Command __id="3561" _type="SelectTextCommand" caretOffset="390" date="Sat Mar 19 19:54:03 EDT 2022" end="390" start="380" starttimestamp="1647716908162" timestamp="17135191" />
  <Command __id="3562" _type="SelectTextCommand" caretOffset="390" date="Sat Mar 19 19:54:03 EDT 2022" end="390" start="380" starttimestamp="1647716908162" timestamp="17135191" />
  <Command __id="3563" _type="MoveCaretCommand" caretOffset="376" date="Sat Mar 19 19:54:03 EDT 2022" docOffset="1072" starttimestamp="1647716908162" timestamp="17135837" />
  <Command __id="3564" _type="MoveCaretCommand" caretOffset="376" date="Sat Mar 19 19:54:03 EDT 2022" docOffset="1072" starttimestamp="1647716908162" timestamp="17135837" />
  <Command __id="3565" _type="SelectTextCommand" caretOffset="379" date="Sat Mar 19 19:54:04 EDT 2022" end="379" start="362" starttimestamp="1647716908162" timestamp="17136003" />
  <Command __id="3566" _type="SelectTextCommand" caretOffset="379" date="Sat Mar 19 19:54:04 EDT 2022" end="379" start="362" starttimestamp="1647716908162" timestamp="17136003" />
  <Command __id="3567" _type="MoveCaretCommand" caretOffset="391" date="Sat Mar 19 19:54:04 EDT 2022" docOffset="1087" starttimestamp="1647716908162" timestamp="17136748" />
  <Command __id="3568" _type="MoveCaretCommand" caretOffset="391" date="Sat Mar 19 19:54:04 EDT 2022" docOffset="1087" starttimestamp="1647716908162" timestamp="17136748" />
  <Command __id="3570" _type="PauseCommand" date="Sat Mar 19 19:54:11 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="17143214">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6466]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3569" _type="ShellCommand" date="Sat Mar 19 19:54:11 EDT 2022" starttimestamp="1647716908162" timestamp="17143214" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3572" _type="PauseCommand" date="Sat Mar 19 19:54:26 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="17158562">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[15348]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3571" _type="ShellCommand" date="Sat Mar 19 19:54:26 EDT 2022" starttimestamp="1647716908162" timestamp="17158562" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3574" _type="PauseCommand" date="Sat Mar 19 19:54:28 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17160145">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1583]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3573" _type="MoveCaretCommand" caretOffset="382" date="Sat Mar 19 19:54:28 EDT 2022" docOffset="1078" starttimestamp="1647716908162" timestamp="17160145" />
  <Command __id="3575" _type="MoveCaretCommand" caretOffset="382" date="Sat Mar 19 19:54:28 EDT 2022" docOffset="1078" starttimestamp="1647716908162" timestamp="17160145" />
  <Command __id="3576" _type="SelectTextCommand" caretOffset="390" date="Sat Mar 19 19:54:28 EDT 2022" end="390" start="380" starttimestamp="1647716908162" timestamp="17160355" />
  <Command __id="3577" _type="SelectTextCommand" caretOffset="390" date="Sat Mar 19 19:54:28 EDT 2022" end="390" start="380" starttimestamp="1647716908162" timestamp="17160356" />
  <Command __id="3578" _type="MoveCaretCommand" caretOffset="409" date="Sat Mar 19 19:54:29 EDT 2022" docOffset="1105" starttimestamp="1647716908162" timestamp="17160917" />
  <Command __id="3579" _type="MoveCaretCommand" caretOffset="409" date="Sat Mar 19 19:54:29 EDT 2022" docOffset="1105" starttimestamp="1647716908162" timestamp="17160917" />
  <Command __id="3581" _type="PauseCommand" date="Sat Mar 19 19:54:36 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="17168083">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7166]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3580" _type="MoveCaretCommand" caretOffset="370" date="Sat Mar 19 19:54:36 EDT 2022" docOffset="1066" starttimestamp="1647716908162" timestamp="17168083" />
  <Command __id="3582" _type="MoveCaretCommand" caretOffset="370" date="Sat Mar 19 19:54:36 EDT 2022" docOffset="1066" starttimestamp="1647716908162" timestamp="17168083" />
  <Command __id="3583" _type="SelectTextCommand" caretOffset="379" date="Sat Mar 19 19:54:36 EDT 2022" end="379" start="362" starttimestamp="1647716908162" timestamp="17168270" />
  <Command __id="3584" _type="SelectTextCommand" caretOffset="379" date="Sat Mar 19 19:54:36 EDT 2022" end="379" start="362" starttimestamp="1647716908162" timestamp="17168270" />
  <Command __id="3585" _type="MoveCaretCommand" caretOffset="417" date="Sat Mar 19 19:54:37 EDT 2022" docOffset="1113" starttimestamp="1647716908162" timestamp="17169050" />
  <Command __id="3586" _type="MoveCaretCommand" caretOffset="417" date="Sat Mar 19 19:54:37 EDT 2022" docOffset="1113" starttimestamp="1647716908162" timestamp="17169050" />
  <Command __id="3588" _type="PauseCommand" date="Sat Mar 19 19:55:00 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="17192025">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[22975]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3587" _type="MoveCaretCommand" caretOffset="4120" date="Sat Mar 19 19:55:00 EDT 2022" docOffset="4816" starttimestamp="1647716908162" timestamp="17192025" />
  <Command __id="3589" _type="MoveCaretCommand" caretOffset="4120" date="Sat Mar 19 19:55:00 EDT 2022" docOffset="4816" starttimestamp="1647716908162" timestamp="17192025" />
  <Command __id="3555" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:54:01 EDT 2022" docASTNodeCount="1946" docActiveCodeLength="10854" docExpressionCount="1500" docLength="12054" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17133034">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer-Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		patronList.add(0, new APatron());¶		chefList = new ArrayList<AChef>();¶		"), Diff(INSERT,"chefList.add(0, new AChef());"), Diff(EQUAL,"¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶//		bufferView = new ABoundedBufferView();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶		¶		patronList.clear();¶		"), Diff(INSERT,"chefList.clear();¶		"), Diff(EQUAL,"for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	"), Diff(DELETE,"@Visible(false)¶	"), Diff(EQUAL,"public Circle getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
@Label("Producer-Consumer Scene")
public class AProducerConsumerScene implements ProducerConsumerScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AProducerConsumerScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AProducerConsumerScene() {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		patronList.add(0, new APatron());
		chefList = new ArrayList<AChef>();
		chefList.add(0, new AChef());
	}
	
	@Label("Init Scene")
	public void initScene(int patronAmount, int chefAmount) {
//		bufferView = new ABoundedBufferView();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
		
		patronList.clear();
		chefList.clear();
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	
	
	@Override
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	public Circle getBuffer() {
		return bufferView;
	}
	
	@Override
	@Label("Chef to the table")
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="3591" _type="PauseCommand" date="Sat Mar 19 19:55:06 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="17198548">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6523]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3592" _type="MoveCaretCommand" caretOffset="150" date="Sat Mar 19 19:55:07 EDT 2022" docOffset="273" starttimestamp="1647716908162" timestamp="17198992" />
  <Command __id="3590" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:55:06 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3047" docExpressionCount="353" docLength="3080" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17198548">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ABoundedBufferView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶public class ABoundedBufferView extends ACircle implements BoundedBufferView{¶	//make observer of aboundedbuffer¶	BoundedBuffer<Integer> observable;¶	ACircle circle;¶	ALine vertical;¶	ALine horizontal;¶	ALine diagonalOne;¶	ALine diagonalTwo;¶	ALine diagonalThree;¶	ALine diagonalFour;¶	¶	int zero = 0;¶	int one = 1;¶	int two = 2;¶	int three = 3;¶	int four = 4;¶	int five = 5;¶	int six = 6;¶	int seven = 7;¶	¶	public ABoundedBufferView() {¶		observable = new ABoundedBuffer<Integer>();¶		observable.put(zero);¶		observable.put(one);¶		observable.put(two);¶		observable.put(three);¶		observable.put(four);¶		observable.put(five);¶		observable.put(six);¶		observable.put(seven);¶		¶		circle = new ACircle();¶		vertical = new ALine();¶		horizontal = new ALine();¶		diagonalOne = new ALine();¶		diagonalTwo = new ALine();¶		diagonalThree = new ALine();¶		diagonalFour = new ALine();¶		¶		vertical.setX(INITIAL_X+(INITIAL_Width/2));¶		horizontal.setX(INITIAL_X);¶		diagonalOne.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalTwo.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalThree.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalFour.setX(INITIAL_X+(INITIAL_Width/2));¶		¶		vertical.setY(INITIAL_Y);¶		horizontal.setY(INITIAL_Y+(INITIAL_Height/2));¶		diagonalOne.setY(INITIAL_Y+(INITIAL_Height/2));¶		diagonalTwo.setY(INITIAL_Y+(INITIAL_Width/2));¶		diagonalThree.setY(INITIAL_Y+(INITIAL_Width/2));¶		diagonalFour.setY(INITIAL_Y+(INITIAL_Width/2));¶		¶		vertical.setHeight(INITIAL_Height);¶		horizontal.rotate(48);¶		horizontal.setWidth(INITIAL_Width);	¶		diagonalOne.setRadius(INITIAL_Height/2);¶		diagonalOne.rotate(151);¶		diagonalTwo.setRadius(INITIAL_Width/2);¶		diagonalTwo.rotate(-8);¶		diagonalThree.setRadius(INITIAL_Height/2);¶		diagonalFour.setRadius(INITIAL_Width/2);¶		diagonalThree.rotate(168);¶		diagonalFour.rotate(8);¶		¶	}¶	¶	@Override¶	public Line getVertical() {¶		return vertical;¶	}¶	¶	@Override¶	public Line getHorizontal() {¶		return horizontal;¶	}¶	¶	@Override¶	public Line getDiagonalOne() {¶		return diagonalOne;¶	}¶	¶	@Override¶	public Line getDiagonalTwo() {¶		return diagonalTwo;¶	}¶	¶	@Override¶	public Circle getCircle() {¶		return circle;¶	}¶	¶	@Override¶	public Line getDiagonalThree() {¶		return diagonalThree;¶	}¶	¶	@Override¶	public Line getDiagonalFour() {¶		return diagonalFour;¶	}¶	¶	@Override¶	public BoundedBuffer<Integer> getBoundedBuffer() {¶		return observable;¶	}¶	¶	public void update(BoundedBuffer<Integer> buffer) {¶		System.out.println("Buffer: " + buffer.get());¶	}¶¶	¶	public static void main(String[] args) {¶		BoundedBufferView NewTable = new ABoundedBufferView();¶		OEFrame editor = ObjectEditor.edit(NewTable);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶	}¶	¶	¶¶	¶	¶¶	¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="3594" _type="PauseCommand" date="Sat Mar 19 19:55:34 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="17226510">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[27518]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3595" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:55:35 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="17226852" />
  <Command __id="3593" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:55:34 EDT 2022" docASTNodeCount="223" docActiveCodeLength="1432" docExpressionCount="129" docLength="1941" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17226510">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ABoundedBuffer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.List;¶¶public class ABoundedBuffer<ElementType> implements BoundedBuffer<ElementType>{¶	public static final int  MAX_SIZE = 8;¶	Object[] buffer = new Object[MAX_SIZE];¶	int size = 0;¶	int nextIn = 0;¶	int nextOut = 0;¶	¶	PropertyListenerSupport propertySupport = new APropertyListenerSupport();¶//	public synchronized void put(ElementType element) {¶¶	public void put(ElementType element) {¶//		if (size >= MAX_SIZE)¶//			return;¶		while (size >= MAX_SIZE) {¶			try {¶				wait();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶		}¶		buffer[nextIn] = element;¶		int oldNextIn = nextIn;¶		nextIn = (nextIn + 1) % MAX_SIZE;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "nextIn", oldNextIn, nextIn));¶		size++;¶		//notify();¶	}	¶	¶//	public synchronized ElementType get() {¶	public  ElementType get() {¶//		if (size == 0) {¶//			return null;¶//		}¶		while (size == 0) {¶			try {¶				wait();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶		}¶		ElementType retVal = (ElementType) buffer[nextOut];¶		int oldNextOut = nextOut;¶		nextOut = (nextOut + 1) % MAX_SIZE;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "nextOut", oldNextOut, nextOut));¶		size--;¶		//notify();¶		return retVal;		¶	}¶//	public static void main(String[] args) {¶//		BoundedBuffer<String> greetings = new ABoundedBuffer();¶//		Runnable producer1 = new AProducer<String>(greetings, "Hello");¶//		Runnable producer2 = new AProducer<String>(greetings, "Ca Va");¶//		(new Thread(producer1)).start();¶//		(new Thread(producer2)).start();¶//	}¶	¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		propertySupport.addPropertyChangeListener(arg0);¶		propertySupport.notifyAll();¶	}¶}")]]]></diff>
  </Command>
  <Command __id="3597" _type="PauseCommand" date="Sat Mar 19 19:55:39 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17231411">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4559]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3598" _type="MoveCaretCommand" caretOffset="150" date="Sat Mar 19 19:55:39 EDT 2022" docOffset="273" starttimestamp="1647716908162" timestamp="17231739" />
  <Command __id="3600" _type="PauseCommand" date="Sat Mar 19 19:55:50 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="17242529">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10790]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3599" _type="MoveCaretCommand" caretOffset="2527" date="Sat Mar 19 19:55:50 EDT 2022" docOffset="2650" starttimestamp="1647716908162" timestamp="17242529" />
  <Command __id="3596" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:55:39 EDT 2022" docASTNodeCount="533" docActiveCodeLength="3047" docExpressionCount="353" docLength="3080" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17231411">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ABoundedBufferView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶public class ABoundedBufferView extends ACircle implements BoundedBufferView{¶	//make observer of aboundedbuffer¶	BoundedBuffer<Integer> observable;¶	ACircle circle;¶	ALine vertical;¶	ALine horizontal;¶	ALine diagonalOne;¶	ALine diagonalTwo;¶	ALine diagonalThree;¶	ALine diagonalFour;¶	¶	int zero = 0;¶	int one = 1;¶	int two = 2;¶	int three = 3;¶	int four = 4;¶	int five = 5;¶	int six = 6;¶	int seven = 7;¶	¶	public ABoundedBufferView() {¶		observable = new ABoundedBuffer<Integer>();¶		observable.put(zero);¶		observable.put(one);¶		observable.put(two);¶		observable.put(three);¶		observable.put(four);¶		observable.put(five);¶		observable.put(six);¶		observable.put(seven);¶		¶		circle = new ACircle();¶		vertical = new ALine();¶		horizontal = new ALine();¶		diagonalOne = new ALine();¶		diagonalTwo = new ALine();¶		diagonalThree = new ALine();¶		diagonalFour = new ALine();¶		¶		vertical.setX(INITIAL_X+(INITIAL_Width/2));¶		horizontal.setX(INITIAL_X);¶		diagonalOne.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalTwo.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalThree.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalFour.setX(INITIAL_X+(INITIAL_Width/2));¶		¶		vertical.setY(INITIAL_Y);¶		horizontal.setY(INITIAL_Y+(INITIAL_Height/2));¶		diagonalOne.setY(INITIAL_Y+(INITIAL_Height/2));¶		diagonalTwo.setY(INITIAL_Y+(INITIAL_Width/2));¶		diagonalThree.setY(INITIAL_Y+(INITIAL_Width/2));¶		diagonalFour.setY(INITIAL_Y+(INITIAL_Width/2));¶		¶		vertical.setHeight(INITIAL_Height);¶		horizontal.rotate(48);¶		horizontal.setWidth(INITIAL_Width);	¶		diagonalOne.setRadius(INITIAL_Height/2);¶		diagonalOne.rotate(151);¶		diagonalTwo.setRadius(INITIAL_Width/2);¶		diagonalTwo.rotate(-8);¶		diagonalThree.setRadius(INITIAL_Height/2);¶		diagonalFour.setRadius(INITIAL_Width/2);¶		diagonalThree.rotate(168);¶		diagonalFour.rotate(8);¶		¶	}¶	¶	@Override¶	public Line getVertical() {¶		return vertical;¶	}¶	¶	@Override¶	public Line getHorizontal() {¶		return horizontal;¶	}¶	¶	@Override¶	public Line getDiagonalOne() {¶		return diagonalOne;¶	}¶	¶	@Override¶	public Line getDiagonalTwo() {¶		return diagonalTwo;¶	}¶	¶	@Override¶	public Circle getCircle() {¶		return circle;¶	}¶	¶	@Override¶	public Line getDiagonalThree() {¶		return diagonalThree;¶	}¶	¶	@Override¶	public Line getDiagonalFour() {¶		return diagonalFour;¶	}¶	¶	@Override¶	public BoundedBuffer<Integer> getBoundedBuffer() {¶		return observable;¶	}¶	¶	public void update(BoundedBuffer<Integer> buffer) {¶		System.out.println("Buffer: " + buffer.get());¶	}¶¶	¶	public static void main(String[] args) {¶		BoundedBufferView NewTable = new ABoundedBufferView();¶		OEFrame editor = ObjectEditor.edit(NewTable);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶	}¶	¶	¶¶	¶	¶¶	¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="3602" _type="PauseCommand" date="Sat Mar 19 19:55:52 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17244718">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2189]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3603" _type="InsertStringCommand" date="Sat Mar 19 19:55:52 EDT 2022" starttimestamp="1647716908162" timestamp="17244752" timestamp2="17244752">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3605" _type="InsertStringCommand" date="Sat Mar 19 19:55:52 EDT 2022" starttimestamp="1647716908162" timestamp="17244779" timestamp2="17244779">
    <data><![CDATA[@]]></data>
  </Command>
  <Command __id="3607" _type="InsertStringCommand" date="Sat Mar 19 19:55:52 EDT 2022" starttimestamp="1647716908162" timestamp="17244802" timestamp2="17244802">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="3609" _type="InsertStringCommand" date="Sat Mar 19 19:55:53 EDT 2022" starttimestamp="1647716908162" timestamp="17245081" timestamp2="17245081">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3611" _type="InsertStringCommand" date="Sat Mar 19 19:55:53 EDT 2022" starttimestamp="1647716908162" timestamp="17245144" timestamp2="17245144">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3613" _type="InsertStringCommand" date="Sat Mar 19 19:55:53 EDT 2022" starttimestamp="1647716908162" timestamp="17245226" timestamp2="17245226">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3615" _type="InsertStringCommand" date="Sat Mar 19 19:55:53 EDT 2022" starttimestamp="1647716908162" timestamp="17245386" timestamp2="17245386">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="3617" _type="InsertStringCommand" date="Sat Mar 19 19:55:53 EDT 2022" starttimestamp="1647716908162" timestamp="17245515" timestamp2="17245515">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3619" _type="InsertStringCommand" date="Sat Mar 19 19:55:53 EDT 2022" starttimestamp="1647716908162" timestamp="17245676" timestamp2="17245676">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3621" _type="InsertStringCommand" date="Sat Mar 19 19:55:54 EDT 2022" starttimestamp="1647716908162" timestamp="17245993" timestamp2="17245993">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="3623" _type="InsertStringCommand" date="Sat Mar 19 19:55:54 EDT 2022" starttimestamp="1647716908162" timestamp="17246127" timestamp2="17246127">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3625" _type="InsertStringCommand" date="Sat Mar 19 19:55:54 EDT 2022" starttimestamp="1647716908162" timestamp="17246197" timestamp2="17246197">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3627" _type="InsertStringCommand" date="Sat Mar 19 19:55:54 EDT 2022" starttimestamp="1647716908162" timestamp="17246309" timestamp2="17246309">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3629" _type="InsertStringCommand" date="Sat Mar 19 19:55:54 EDT 2022" starttimestamp="1647716908162" timestamp="17246382" timestamp2="17246382">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3631" _type="InsertStringCommand" date="Sat Mar 19 19:55:54 EDT 2022" starttimestamp="1647716908162" timestamp="17246493" timestamp2="17246493">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3633" _type="PauseCommand" date="Sat Mar 19 19:55:58 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17250150">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3657]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3632" _type="ShellCommand" date="Sat Mar 19 19:55:58 EDT 2022" starttimestamp="1647716908162" timestamp="17250150" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3634" _type="ShellCommand" date="Sat Mar 19 19:55:58 EDT 2022" starttimestamp="1647716908162" timestamp="17250277" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3638" _type="PauseCommand" date="Sat Mar 19 19:55:59 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17251332">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1041]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3637" _type="MoveCaretCommand" caretOffset="2545" date="Sat Mar 19 19:55:59 EDT 2022" docOffset="2702" starttimestamp="1647716908162" timestamp="17251332" />
  <Command __id="3640" _type="PauseCommand" date="Sat Mar 19 19:56:01 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17252989">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1657]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3639" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 19:56:01 EDT 2022" starttimestamp="1647716908162" timestamp="17252989" />
  <Command __id="3641" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:56:01 EDT 2022" starttimestamp="1647716908162" timestamp="17253125" />
  <Command __id="3642" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:56:01 EDT 2022" starttimestamp="1647716908162" timestamp="17253292" />
  <Command __id="3644" _type="PauseCommand" date="Sat Mar 19 19:56:05 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17257443">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4151]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3643" _type="MoveCaretCommand" caretOffset="2545" date="Sat Mar 19 19:56:05 EDT 2022" docOffset="2702" starttimestamp="1647716908162" timestamp="17257443" />
  <Command __id="3646" _type="PauseCommand" date="Sat Mar 19 19:56:07 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17259200">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1757]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3645" _type="MoveCaretCommand" caretOffset="2624" date="Sat Mar 19 19:56:07 EDT 2022" docOffset="2781" starttimestamp="1647716908162" timestamp="17259200" />
  <Command __id="3648" _type="PauseCommand" date="Sat Mar 19 19:56:15 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="17267785">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8585]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3647" _type="MoveCaretCommand" caretOffset="273" date="Sat Mar 19 19:56:15 EDT 2022" docOffset="430" starttimestamp="1647716908162" timestamp="17267785" />
  <Command __id="3650" _type="PauseCommand" date="Sat Mar 19 19:56:18 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17270682">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2897]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3649" _type="MoveCaretCommand" caretOffset="148" date="Sat Mar 19 19:56:18 EDT 2022" docOffset="305" starttimestamp="1647716908162" timestamp="17270682" />
  <Command __id="3651" _type="SelectTextCommand" caretOffset="152" date="Sat Mar 19 19:56:19 EDT 2022" end="152" start="145" starttimestamp="1647716908162" timestamp="17270864" />
  <DocumentChange __id="3601" _type="Insert" date="Sat Mar 19 19:55:52 EDT 2022" docASTNodeCount="536" docActiveCodeLength="3065" docExpressionCount="356" docLength="3098" length="18" offset="2650" repeat="15" starttimestamp="1647716908162" timestamp="17244718" timestamp2="17246481">
    <text><![CDATA[
	@Visible(false)]]></text>
  </DocumentChange>
  <DocumentChange __id="3635" _type="Insert" date="Sat Mar 19 19:55:58 EDT 2022" docASTNodeCount="542" docActiveCodeLength="3099" docExpressionCount="361" docLength="3132" length="34" offset="169" repeat="2" starttimestamp="1647716908162" timestamp="17250291" timestamp2="17250292">
    <text><![CDATA[
import util.annotations.Visible;]]></text>
  </DocumentChange>
  <Command __id="3653" _type="PauseCommand" date="Sat Mar 19 19:56:21 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17273041">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2177]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3654" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:56:21 EDT 2022" starttimestamp="1647716908162" timestamp="17273065" />
  <Command __id="3656" _type="PauseCommand" date="Sat Mar 19 19:56:22 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17274081">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1016]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3655" _type="MoveCaretCommand" caretOffset="140" date="Sat Mar 19 19:56:22 EDT 2022" docOffset="297" starttimestamp="1647716908162" timestamp="17274081" />
  <Command __id="3657" _type="SelectTextCommand" caretOffset="144" date="Sat Mar 19 19:56:22 EDT 2022" end="144" start="137" starttimestamp="1647716908162" timestamp="17274219" />
  <DocumentChange __id="3652" _type="Delete" date="Sat Mar 19 19:56:21 EDT 2022" docASTNodeCount="538" docActiveCodeLength="3092" docExpressionCount="359" docLength="3125" endLine="9" length="7" offset="302" startLine="9" starttimestamp="1647716908162" timestamp="17273041">
    <text><![CDATA[ACircle]]></text>
  </DocumentChange>
  <Command __id="3659" _type="PauseCommand" date="Sat Mar 19 19:56:23 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17275773">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1554]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3660" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:56:23 EDT 2022" starttimestamp="1647716908162" timestamp="17275792" />
  <Command __id="3663" _type="PauseCommand" date="Sat Mar 19 19:56:24 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17276808">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1016]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3662" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:56:24 EDT 2022" starttimestamp="1647716908162" timestamp="17276808" />
  <DocumentChange __id="3658" _type="Delete" date="Sat Mar 19 19:56:23 EDT 2022" docASTNodeCount="540" docActiveCodeLength="3084" docExpressionCount="360" docLength="3117" endLine="9" length="8" offset="293" repeat="2" startLine="9" starttimestamp="1647716908162" timestamp="17275773" timestamp2="17276784">
    <text><![CDATA[ extends]]></text>
  </DocumentChange>
  <Command __id="3665" _type="PauseCommand" date="Sat Mar 19 19:56:33 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="17285435">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8627]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3664" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:56:33 EDT 2022" docASTNodeCount="47" docActiveCodeLength="324" docExpressionCount="20" docLength="324" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17285435">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\BoundedBufferView.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

public interface BoundedBufferView extends Circle {
	public Line getVertical();
	public Line getHorizontal();
	public Line getDiagonalOne();
	public Line getDiagonalTwo();
	Circle getCircle();
	Line getDiagonalThree();
	Line getDiagonalFour();
	BoundedBuffer<Integer> getBoundedBuffer();
	
}
]]></snapshot>
  </Command>
  <Command __id="3666" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:56:33 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="17285760" />
  <Command __id="3667" _type="MoveCaretCommand" caretOffset="65" date="Sat Mar 19 19:56:34 EDT 2022" docOffset="65" starttimestamp="1647716908162" timestamp="17286622" />
  <Command __id="3668" _type="SelectTextCommand" caretOffset="70" date="Sat Mar 19 19:56:34 EDT 2022" end="70" start="64" starttimestamp="1647716908162" timestamp="17286764" />
  <Command __id="3670" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:56:35 EDT 2022" starttimestamp="1647716908162" timestamp="17286989" />
  <Command __id="3673" _type="PauseCommand" date="Sat Mar 19 19:56:36 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17288442">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1453]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3672" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:56:36 EDT 2022" starttimestamp="1647716908162" timestamp="17288442" />
  <DocumentChange __id="3669" _type="Delete" date="Sat Mar 19 19:56:35 EDT 2022" docASTNodeCount="45" docActiveCodeLength="317" docExpressionCount="19" docLength="317" endLine="2" length="7" offset="63" repeat="2" startLine="2" starttimestamp="1647716908162" timestamp="17286982" timestamp2="17288429">
    <text><![CDATA[ Circle]]></text>
  </DocumentChange>
  <Command __id="3675" _type="PauseCommand" date="Sat Mar 19 19:56:38 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17290442">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2000]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3676" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:56:38 EDT 2022" starttimestamp="1647716908162" timestamp="17290449" />
  <Command __id="3677" _type="MoveCaretCommand" caretOffset="59" date="Sat Mar 19 19:56:39 EDT 2022" docOffset="59" starttimestamp="1647716908162" timestamp="17291026" />
  <Command __id="3678" _type="SelectTextCommand" caretOffset="62" date="Sat Mar 19 19:56:39 EDT 2022" end="62" start="56" starttimestamp="1647716908162" timestamp="17291200" />
  <DocumentChange __id="3674" _type="Delete" date="Sat Mar 19 19:56:38 EDT 2022" docASTNodeCount="47" docActiveCodeLength="316" docExpressionCount="19" docLength="316" endLine="2" length="1" offset="62" startLine="2" starttimestamp="1647716908162" timestamp="17290442">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <Command __id="3680" _type="PauseCommand" date="Sat Mar 19 19:56:40 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17292464">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1264]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3681" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:56:40 EDT 2022" starttimestamp="1647716908162" timestamp="17292475" />
  <Command __id="3683" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:56:40 EDT 2022" starttimestamp="1647716908162" timestamp="17292484" />
  <Command __id="3685" _type="PauseCommand" date="Sat Mar 19 19:56:42 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17294365">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1881]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3684" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 19:56:42 EDT 2022" starttimestamp="1647716908162" timestamp="17294365" />
  <Command __id="3686" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:56:42 EDT 2022" starttimestamp="1647716908162" timestamp="17294452" />
  <Command __id="3687" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:56:42 EDT 2022" starttimestamp="1647716908162" timestamp="17294573" />
  <DocumentChange __id="3679" _type="Delete" date="Sat Mar 19 19:56:40 EDT 2022" docASTNodeCount="45" docActiveCodeLength="309" docExpressionCount="19" docLength="309" endLine="2" length="7" offset="55" repeat="2" startLine="2" starttimestamp="1647716908162" timestamp="17292464" timestamp2="17292479">
    <text><![CDATA[ extend]]></text>
  </DocumentChange>
  <Command __id="3689" _type="PauseCommand" date="Sat Mar 19 19:56:43 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17295721">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1147]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3690" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:56:44 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="17295881" />
  <Command __id="3688" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:56:43 EDT 2022" docASTNodeCount="223" docActiveCodeLength="1432" docExpressionCount="129" docLength="1941" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17295720">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ABoundedBuffer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.List;¶¶public class ABoundedBuffer<ElementType> implements BoundedBuffer<ElementType>{¶	public static final int  MAX_SIZE = 8;¶	Object[] buffer = new Object[MAX_SIZE];¶	int size = 0;¶	int nextIn = 0;¶	int nextOut = 0;¶	¶	PropertyListenerSupport propertySupport = new APropertyListenerSupport();¶//	public synchronized void put(ElementType element) {¶¶	public void put(ElementType element) {¶//		if (size >= MAX_SIZE)¶//			return;¶		while (size >= MAX_SIZE) {¶			try {¶				wait();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶		}¶		buffer[nextIn] = element;¶		int oldNextIn = nextIn;¶		nextIn = (nextIn + 1) % MAX_SIZE;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "nextIn", oldNextIn, nextIn));¶		size++;¶		//notify();¶	}	¶	¶//	public synchronized ElementType get() {¶	public  ElementType get() {¶//		if (size == 0) {¶//			return null;¶//		}¶		while (size == 0) {¶			try {¶				wait();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶		}¶		ElementType retVal = (ElementType) buffer[nextOut];¶		int oldNextOut = nextOut;¶		nextOut = (nextOut + 1) % MAX_SIZE;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "nextOut", oldNextOut, nextOut));¶		size--;¶		//notify();¶		return retVal;		¶	}¶//	public static void main(String[] args) {¶//		BoundedBuffer<String> greetings = new ABoundedBuffer();¶//		Runnable producer1 = new AProducer<String>(greetings, "Hello");¶//		Runnable producer2 = new AProducer<String>(greetings, "Ca Va");¶//		(new Thread(producer1)).start();¶//		(new Thread(producer2)).start();¶//	}¶	¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		propertySupport.addPropertyChangeListener(arg0);¶		propertySupport.notifyAll();¶	}¶}")]]]></diff>
  </Command>
  <Command __id="3692" _type="PauseCommand" date="Sat Mar 19 19:56:47 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17298946">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3065]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3693" _type="MoveCaretCommand" caretOffset="4120" date="Sat Mar 19 19:56:47 EDT 2022" docOffset="4816" starttimestamp="1647716908162" timestamp="17299134" />
  <Command __id="3695" _type="PauseCommand" date="Sat Mar 19 19:56:48 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17300377">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1243]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3694" _type="MoveCaretCommand" caretOffset="4127" date="Sat Mar 19 19:56:48 EDT 2022" docOffset="4823" starttimestamp="1647716908162" timestamp="17300377" />
  <Command __id="3696" _type="MoveCaretCommand" caretOffset="4127" date="Sat Mar 19 19:56:48 EDT 2022" docOffset="4823" starttimestamp="1647716908162" timestamp="17300377" />
  <Command __id="3698" _type="PauseCommand" date="Sat Mar 19 19:56:56 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="17308426">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8049]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3697" _type="MoveCaretCommand" caretOffset="4081" date="Sat Mar 19 19:56:56 EDT 2022" docOffset="4777" starttimestamp="1647716908162" timestamp="17308426" />
  <Command __id="3699" _type="MoveCaretCommand" caretOffset="4081" date="Sat Mar 19 19:56:56 EDT 2022" docOffset="4777" starttimestamp="1647716908162" timestamp="17308426" />
  <Command __id="3700" _type="SelectTextCommand" caretOffset="4084" date="Sat Mar 19 19:56:56 EDT 2022" end="4084" start="4078" starttimestamp="1647716908162" timestamp="17308545" />
  <Command __id="3701" _type="SelectTextCommand" caretOffset="4084" date="Sat Mar 19 19:56:56 EDT 2022" end="4084" start="4078" starttimestamp="1647716908162" timestamp="17308545" />
  <Command __id="3691" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:56:47 EDT 2022" docASTNodeCount="1946" docActiveCodeLength="10854" docExpressionCount="1500" docLength="12054" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17298946">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer-Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		patronList.add(0, new APatron());¶		chefList = new ArrayList<AChef>();¶		chefList.add(0, new AChef());¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶//		bufferView = new ABoundedBufferView();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶		¶		patronList.clear();¶		chefList.clear();¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	public Circle getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="3703" _type="PauseCommand" date="Sat Mar 19 19:56:58 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17310262">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1717]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="3702" _type="Replace" date="Sat Mar 19 19:56:58 EDT 2022" docASTNodeCount="1946" docActiveCodeLength="10849" docExpressionCount="1500" docLength="12049" endLine="164" insertionLength="1" int_docASTNodeCount="1944" int_docActiveCodeLength="10848" int_docExpressionCount="1499" int_docLength="12048" length="6" offset="4774" startLine="164" starttimestamp="1647716908162" timestamp="17310262">
    <deletedText><![CDATA[Circle]]></deletedText>
    <insertedText><![CDATA[A]]></insertedText>
  </DocumentChange>
  <Command __id="3704" _type="InsertStringCommand" date="Sat Mar 19 19:56:58 EDT 2022" starttimestamp="1647716908162" timestamp="17310305" timestamp2="17310305">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3705" _type="InsertStringCommand" date="Sat Mar 19 19:56:58 EDT 2022" starttimestamp="1647716908162" timestamp="17310305" timestamp2="17310305">
    <data><![CDATA[A]]></data>
  </Command>
  <DocumentChange __id="3706" _type="Delete" date="Sat Mar 19 19:56:58 EDT 2022" docASTNodeCount="1944" docActiveCodeLength="10848" docExpressionCount="1499" docLength="12048" endLine="164" length="1" offset="4774" startLine="164" starttimestamp="1647716908162" timestamp="17310603">
    <text><![CDATA[A]]></text>
  </DocumentChange>
  <Command __id="3707" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:56:58 EDT 2022" starttimestamp="1647716908162" timestamp="17310622" />
  <Command __id="3708" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 19:56:58 EDT 2022" starttimestamp="1647716908162" timestamp="17310623" />
  <Command __id="3710" _type="InsertStringCommand" date="Sat Mar 19 19:56:59 EDT 2022" starttimestamp="1647716908162" timestamp="17310976" timestamp2="17310976">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="3711" _type="InsertStringCommand" date="Sat Mar 19 19:56:59 EDT 2022" starttimestamp="1647716908162" timestamp="17310976" timestamp2="17310976">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="3713" _type="InsertStringCommand" date="Sat Mar 19 19:56:59 EDT 2022" starttimestamp="1647716908162" timestamp="17311153" timestamp2="17311153">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3714" _type="InsertStringCommand" date="Sat Mar 19 19:56:59 EDT 2022" starttimestamp="1647716908162" timestamp="17311153" timestamp2="17311153">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3716" _type="InsertStringCommand" date="Sat Mar 19 19:56:59 EDT 2022" starttimestamp="1647716908162" timestamp="17311242" timestamp2="17311242">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3717" _type="InsertStringCommand" date="Sat Mar 19 19:56:59 EDT 2022" starttimestamp="1647716908162" timestamp="17311242" timestamp2="17311242">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3719" _type="InsertStringCommand" date="Sat Mar 19 19:56:59 EDT 2022" starttimestamp="1647716908162" timestamp="17311378" timestamp2="17311378">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3720" _type="InsertStringCommand" date="Sat Mar 19 19:56:59 EDT 2022" starttimestamp="1647716908162" timestamp="17311378" timestamp2="17311378">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3722" _type="InsertStringCommand" date="Sat Mar 19 19:56:59 EDT 2022" starttimestamp="1647716908162" timestamp="17311441" timestamp2="17311441">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3723" _type="InsertStringCommand" date="Sat Mar 19 19:56:59 EDT 2022" starttimestamp="1647716908162" timestamp="17311441" timestamp2="17311441">
    <data><![CDATA[d]]></data>
  </Command>
  <DocumentChange __id="3709" _type="Insert" date="Sat Mar 19 19:56:59 EDT 2022" docASTNodeCount="1946" docActiveCodeLength="10853" docExpressionCount="1500" docLength="12053" length="5" offset="4774" repeat="5" starttimestamp="1647716908162" timestamp="17310942" timestamp2="17311410">
    <text><![CDATA[Bound]]></text>
  </DocumentChange>
  <Command __id="3725" _type="PauseCommand" date="Sat Mar 19 19:57:01 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17313485">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2044]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3726" _type="InsertStringCommand" date="Sat Mar 19 19:57:01 EDT 2022" starttimestamp="1647716908162" timestamp="17313511" timestamp2="17313511">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3727" _type="InsertStringCommand" date="Sat Mar 19 19:57:01 EDT 2022" starttimestamp="1647716908162" timestamp="17313511" timestamp2="17313511">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="3724" _type="Insert" date="Sat Mar 19 19:57:01 EDT 2022" docASTNodeCount="1946" docActiveCodeLength="10854" docExpressionCount="1500" docLength="12054" length="1" offset="4779" starttimestamp="1647716908162" timestamp="17313485">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <Command __id="3729" _type="PauseCommand" date="Sat Mar 19 19:57:03 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17315492">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1981]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3730" _type="InsertStringCommand" date="Sat Mar 19 19:57:03 EDT 2022" starttimestamp="1647716908162" timestamp="17315523" timestamp2="17315523">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3731" _type="InsertStringCommand" date="Sat Mar 19 19:57:03 EDT 2022" starttimestamp="1647716908162" timestamp="17315523" timestamp2="17315523">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3734" _type="PauseCommand" date="Sat Mar 19 19:57:04 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17316561">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1038]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="3733" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316561" timestamp2="17316561">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="3735" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316561" timestamp2="17316561">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="3737" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316596" timestamp2="17316596">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3738" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316596" timestamp2="17316596">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3740" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316631" timestamp2="17316631">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3741" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316631" timestamp2="17316631">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3743" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316662" timestamp2="17316662">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3744" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316662" timestamp2="17316662">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3746" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316707" timestamp2="17316707">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3747" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316707" timestamp2="17316707">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3749" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316747" timestamp2="17316747">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3750" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316747" timestamp2="17316747">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3752" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316781" timestamp2="17316781">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="3753" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316781" timestamp2="17316781">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="3755" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316818" timestamp2="17316818">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3756" _type="InsertStringCommand" date="Sat Mar 19 19:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="17316819" timestamp2="17316819">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3758" _type="InsertStringCommand" date="Sat Mar 19 19:57:05 EDT 2022" starttimestamp="1647716908162" timestamp="17316852" timestamp2="17316852">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3759" _type="InsertStringCommand" date="Sat Mar 19 19:57:05 EDT 2022" starttimestamp="1647716908162" timestamp="17316852" timestamp2="17316852">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3761" _type="InsertStringCommand" date="Sat Mar 19 19:57:05 EDT 2022" starttimestamp="1647716908162" timestamp="17316899" timestamp2="17316899">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="3762" _type="InsertStringCommand" date="Sat Mar 19 19:57:05 EDT 2022" starttimestamp="1647716908162" timestamp="17316900" timestamp2="17316900">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="3764" _type="PauseCommand" date="Sat Mar 19 19:57:09 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17321794">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4894]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3763" _type="MoveCaretCommand" caretOffset="4068" date="Sat Mar 19 19:57:09 EDT 2022" docOffset="4764" starttimestamp="1647716908162" timestamp="17321794" />
  <Command __id="3765" _type="MoveCaretCommand" caretOffset="4068" date="Sat Mar 19 19:57:09 EDT 2022" docOffset="4764" starttimestamp="1647716908162" timestamp="17321796" />
  <Command __id="3767" _type="PauseCommand" date="Sat Mar 19 19:57:16 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="17328014">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6218]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3766" _type="MoveCaretCommand" caretOffset="370" date="Sat Mar 19 19:57:16 EDT 2022" docOffset="1066" starttimestamp="1647716908162" timestamp="17328014" />
  <Command __id="3768" _type="MoveCaretCommand" caretOffset="370" date="Sat Mar 19 19:57:16 EDT 2022" docOffset="1066" starttimestamp="1647716908162" timestamp="17328014" />
  <Command __id="3769" _type="SelectTextCommand" caretOffset="379" date="Sat Mar 19 19:57:16 EDT 2022" end="379" start="362" starttimestamp="1647716908162" timestamp="17328188" />
  <Command __id="3770" _type="SelectTextCommand" caretOffset="379" date="Sat Mar 19 19:57:16 EDT 2022" end="379" start="362" starttimestamp="1647716908162" timestamp="17328188" />
  <DocumentChange __id="3728" _type="Insert" date="Sat Mar 19 19:57:03 EDT 2022" docASTNodeCount="1946" docActiveCodeLength="10865" docExpressionCount="1500" docLength="12065" length="11" offset="4780" repeat="11" starttimestamp="1647716908162" timestamp="17315492" timestamp2="17316856">
    <text><![CDATA[dBufferView]]></text>
  </DocumentChange>
  <Command __id="3772" _type="PauseCommand" date="Sat Mar 19 19:57:25 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="17337456">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[9268]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3773" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:57:25 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="17337834" />
  <Command __id="3775" _type="PauseCommand" date="Sat Mar 19 19:57:31 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="17343530">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5696]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3774" _type="MoveCaretCommand" caretOffset="173" date="Sat Mar 19 19:57:31 EDT 2022" docOffset="247" starttimestamp="1647716908162" timestamp="17343530" />
  <Command __id="3776" _type="SelectTextCommand" caretOffset="177" date="Sat Mar 19 19:57:31 EDT 2022" end="177" start="171" starttimestamp="1647716908162" timestamp="17343661" />
  <Command __id="3771" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:57:25 EDT 2022" docASTNodeCount="56" docActiveCodeLength="381" docExpressionCount="31" docLength="678" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17337456">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeListener;¶import java.util.List;¶¶import util.models.PropertyListenerRegisterer;¶¶public interface ProducerConsumerScene {¶	List<APatron> getPatronList();¶	List<AChef> getChefList();¶	Circle getBuffer();¶	void addPropertyChangeListener(PropertyChangeListener arg0);¶	//void approachBuffer(int bufferNumber);¶	//void approachBuffer(Avatar avatar, int bufferNumber);¶//	void chefApproachBuffer(Chef chef, int bufferNumber);¶	//void moveToBuffer(Avatar avatar, int bufferNumber);¶	//void chefApproachBuffer(int chef, int bufferNumber);¶	//public void processHeads(Head aHead);¶	void chefToTable(Head aHead);¶}¶")]]]></diff>
  </Command>
  <Command __id="3778" _type="PauseCommand" date="Sat Mar 19 19:57:34 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17346335">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2673]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3779" _type="InsertStringCommand" date="Sat Mar 19 19:57:34 EDT 2022" starttimestamp="1647716908162" timestamp="17346347" timestamp2="17346347">
    <data><![CDATA[B]]></data>
  </Command>
  <DocumentChange __id="3777" _type="Replace" date="Sat Mar 19 19:57:34 EDT 2022" docASTNodeCount="56" docActiveCodeLength="376" docExpressionCount="31" docLength="673" endLine="10" insertionLength="1" int_docASTNodeCount="54" int_docActiveCodeLength="375" int_docExpressionCount="30" int_docLength="672" length="6" offset="245" startLine="10" starttimestamp="1647716908162" timestamp="17346334">
    <deletedText><![CDATA[Circle]]></deletedText>
    <insertedText><![CDATA[B]]></insertedText>
  </DocumentChange>
  <Command __id="3781" _type="PauseCommand" date="Sat Mar 19 19:57:37 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17349373">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3026]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3782" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349384" timestamp2="17349384">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3784" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349399" timestamp2="17349399">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3786" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349417" timestamp2="17349417">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3788" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349426" timestamp2="17349426">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3790" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349437" timestamp2="17349437">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3792" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349452" timestamp2="17349452">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3794" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349472" timestamp2="17349472">
    <data><![CDATA[B]]></data>
  </Command>
  <Command __id="3796" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349487" timestamp2="17349487">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3798" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349502" timestamp2="17349502">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3800" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349520" timestamp2="17349520">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="3802" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349541" timestamp2="17349541">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3804" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349565" timestamp2="17349565">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3806" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349578" timestamp2="17349578">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="3808" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349599" timestamp2="17349599">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3810" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349610" timestamp2="17349610">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3812" _type="InsertStringCommand" date="Sat Mar 19 19:57:37 EDT 2022" starttimestamp="1647716908162" timestamp="17349620" timestamp2="17349620">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="3814" _type="PauseCommand" date="Sat Mar 19 19:57:39 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17351482">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1862]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3813" _type="MoveCaretCommand" caretOffset="168" date="Sat Mar 19 19:57:39 EDT 2022" docOffset="242" starttimestamp="1647716908162" timestamp="17351482" />
  <DocumentChange __id="3780" _type="Insert" date="Sat Mar 19 19:57:37 EDT 2022" docASTNodeCount="56" docActiveCodeLength="392" docExpressionCount="31" docLength="689" length="16" offset="246" repeat="16" starttimestamp="1647716908162" timestamp="17349373" timestamp2="17349612">
    <text><![CDATA[oundedBufferView]]></text>
  </DocumentChange>
  <Command __id="3816" _type="PauseCommand" date="Sat Mar 19 19:57:41 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17353512">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2030]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3817" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 19:57:42 EDT 2022" starttimestamp="1647716908162" timestamp="17354483" />
  <Command __id="3818" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:57:42 EDT 2022" starttimestamp="1647716908162" timestamp="17354570" />
  <Command __id="3819" _type="SelectTextCommand" caretOffset="379" date="Sat Mar 19 19:57:42 EDT 2022" end="379" start="362" starttimestamp="1647716908162" timestamp="17354711" />
  <Command __id="3820" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:57:42 EDT 2022" starttimestamp="1647716908162" timestamp="17354740" />
  <Command __id="3821" _type="MoveCaretCommand" caretOffset="3647" date="Sat Mar 19 19:57:43 EDT 2022" docOffset="4343" starttimestamp="1647716908162" timestamp="17355329" />
  <Command __id="3822" _type="MoveCaretCommand" caretOffset="3647" date="Sat Mar 19 19:57:43 EDT 2022" docOffset="4343" starttimestamp="1647716908162" timestamp="17355329" />
  <Command __id="3824" _type="PauseCommand" date="Sat Mar 19 19:57:54 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="17366706">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11377]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3823" _type="MoveCaretCommand" caretOffset="4100" date="Sat Mar 19 19:57:54 EDT 2022" docOffset="4796" starttimestamp="1647716908162" timestamp="17366706" />
  <Command __id="3825" _type="MoveCaretCommand" caretOffset="4100" date="Sat Mar 19 19:57:54 EDT 2022" docOffset="4796" starttimestamp="1647716908162" timestamp="17366706" />
  <Command __id="3827" _type="PauseCommand" date="Sat Mar 19 19:57:58 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17370244">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3538]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3826" _type="MoveCaretCommand" caretOffset="4068" date="Sat Mar 19 19:57:58 EDT 2022" docOffset="4764" starttimestamp="1647716908162" timestamp="17370244" />
  <Command __id="3828" _type="MoveCaretCommand" caretOffset="4068" date="Sat Mar 19 19:57:58 EDT 2022" docOffset="4764" starttimestamp="1647716908162" timestamp="17370244" />
  <Command __id="3830" _type="MoveCaretCommand" caretOffset="168" date="Sat Mar 19 19:57:59 EDT 2022" docOffset="242" starttimestamp="1647716908162" timestamp="17371302" />
  <Command __id="3832" _type="PauseCommand" date="Sat Mar 19 19:58:04 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17376176">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4874]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3831" _type="MoveCaretCommand" caretOffset="195" date="Sat Mar 19 19:58:04 EDT 2022" docOffset="269" starttimestamp="1647716908162" timestamp="17376176" />
  <Command __id="3834" _type="PauseCommand" date="Sat Mar 19 19:58:06 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17378702">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2526]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3833" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 19:58:06 EDT 2022" starttimestamp="1647716908162" timestamp="17378702" />
  <Command __id="3835" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:58:06 EDT 2022" starttimestamp="1647716908162" timestamp="17378789" />
  <Command __id="3836" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:58:07 EDT 2022" starttimestamp="1647716908162" timestamp="17379065" />
  <Command __id="3815" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:57:41 EDT 2022" docASTNodeCount="1946" docActiveCodeLength="10865" docExpressionCount="1500" docLength="12065" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17353512">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer-Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		patronList.add(0, new APatron());¶		chefList = new ArrayList<AChef>();¶		chefList.add(0, new AChef());¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶//		bufferView = new ABoundedBufferView();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶		¶		patronList.clear();¶		chefList.clear();¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	public "), Diff(DELETE,"Circle"), Diff(INSERT,"BoundedBufferView"), Diff(EQUAL," getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
@Label("Producer-Consumer Scene")
public class AProducerConsumerScene implements ProducerConsumerScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AProducerConsumerScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AProducerConsumerScene() {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		patronList.add(0, new APatron());
		chefList = new ArrayList<AChef>();
		chefList.add(0, new AChef());
	}
	
	@Label("Init Scene")
	public void initScene(int patronAmount, int chefAmount) {
//		bufferView = new ABoundedBufferView();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
		
		patronList.clear();
		chefList.clear();
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	
	
	@Override
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	public BoundedBufferView getBuffer() {
		return bufferView;
	}
	
	@Override
	@Label("Chef to the table")
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="3829" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:57:59 EDT 2022" docASTNodeCount="56" docActiveCodeLength="392" docExpressionCount="31" docLength="689" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17371110">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeListener;¶import java.util.List;¶¶import util.models.PropertyListenerRegisterer;¶¶public interface ProducerConsumerScene {¶	List<APatron> getPatronList();¶	List<AChef> getChefList();¶	"), Diff(DELETE,"Circle"), Diff(INSERT,"BoundedBufferView"), Diff(EQUAL," getBuffer();¶	void addPropertyChangeListener(PropertyChangeListener arg0);¶	//void approachBuffer(int bufferNumber);¶	//void approachBuffer(Avatar avatar, int bufferNumber);¶//	void chefApproachBuffer(Chef chef, int bufferNumber);¶	//void moveToBuffer(Avatar avatar, int bufferNumber);¶	//void chefApproachBuffer(int chef, int bufferNumber);¶	//public void processHeads(Head aHead);¶	void chefToTable(Head aHead);¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeListener;
import java.util.List;

import util.models.PropertyListenerRegisterer;

public interface ProducerConsumerScene {
	List<APatron> getPatronList();
	List<AChef> getChefList();
	BoundedBufferView getBuffer();
	void addPropertyChangeListener(PropertyChangeListener arg0);
	//void approachBuffer(int bufferNumber);
	//void approachBuffer(Avatar avatar, int bufferNumber);
//	void chefApproachBuffer(Chef chef, int bufferNumber);
	//void moveToBuffer(Avatar avatar, int bufferNumber);
	//void chefApproachBuffer(int chef, int bufferNumber);
	//public void processHeads(Head aHead);
	void chefToTable(Head aHead);
}
]]></snapshot>
  </Command>
  <Command __id="3838" _type="PauseCommand" date="Sat Mar 19 19:58:08 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17380701">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1636]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3839" _type="MoveCaretCommand" caretOffset="4068" date="Sat Mar 19 19:58:09 EDT 2022" docOffset="4764" starttimestamp="1647716908162" timestamp="17380867" />
  <Command __id="3837" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:58:08 EDT 2022" docASTNodeCount="1946" docActiveCodeLength="10865" docExpressionCount="1500" docLength="12065" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17380701">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer-Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		patronList.add(0, new APatron());¶		chefList = new ArrayList<AChef>();¶		chefList.add(0, new AChef());¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶//		bufferView = new ABoundedBufferView();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶		¶		patronList.clear();¶		chefList.clear();¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	public BoundedBufferView getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="3841" _type="PauseCommand" date="Sat Mar 19 19:58:13 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17385817">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4950]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3842" _type="MoveCaretCommand" caretOffset="136" date="Sat Mar 19 19:58:14 EDT 2022" docOffset="293" starttimestamp="1647716908162" timestamp="17385994" />
  <Command __id="3844" _type="PauseCommand" date="Sat Mar 19 19:58:17 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17389440">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3446]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3843" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 19:58:17 EDT 2022" starttimestamp="1647716908162" timestamp="17389440" />
  <Command __id="3845" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:58:17 EDT 2022" starttimestamp="1647716908162" timestamp="17389579" />
  <Command __id="3846" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:58:17 EDT 2022" starttimestamp="1647716908162" timestamp="17389716" />
  <Command __id="3840" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:58:13 EDT 2022" docASTNodeCount="540" docActiveCodeLength="3084" docExpressionCount="360" docLength="3117" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17385817">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ABoundedBufferView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;"), Diff(INSERT,"¶import util.annotations.Visible;"), Diff(EQUAL,"¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶public class ABoundedBufferView "), Diff(DELETE,"extends ACircle"), Diff(EQUAL," implements BoundedBufferView{¶	//make observer of aboundedbuffer¶	BoundedBuffer<Integer> observable;¶	ACircle circle;¶	ALine vertical;¶	ALine horizontal;¶	ALine diagonalOne;¶	ALine diagonalTwo;¶	ALine diagonalThree;¶	ALine diagonalFour;¶	¶	int zero = 0;¶	int one = 1;¶	int two = 2;¶	int three = 3;¶	int four = 4;¶	int five = 5;¶	int six = 6;¶	int seven = 7;¶	¶	public ABoundedBufferView() {¶		observable = new ABoundedBuffer<Integer>();¶		observable.put(zero);¶		observable.put(one);¶		observable.put(two);¶		observable.put(three);¶		observable.put(four);¶		observable.put(five);¶		observable.put(six);¶		observable.put(seven);¶		¶		circle = new ACircle();¶		vertical = new ALine();¶		horizontal = new ALine();¶		diagonalOne = new ALine();¶		diagonalTwo = new ALine();¶		diagonalThree = new ALine();¶		diagonalFour = new ALine();¶		¶		vertical.setX(INITIAL_X+(INITIAL_Width/2));¶		horizontal.setX(INITIAL_X);¶		diagonalOne.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalTwo.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalThree.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalFour.setX(INITIAL_X+(INITIAL_Width/2));¶		¶		vertical.setY(INITIAL_Y);¶		horizontal.setY(INITIAL_Y+(INITIAL_Height/2));¶		diagonalOne.setY(INITIAL_Y+(INITIAL_Height/2));¶		diagonalTwo.setY(INITIAL_Y+(INITIAL_Width/2));¶		diagonalThree.setY(INITIAL_Y+(INITIAL_Width/2));¶		diagonalFour.setY(INITIAL_Y+(INITIAL_Width/2));¶		¶		vertical.setHeight(INITIAL_Height);¶		horizontal.rotate(48);¶		horizontal.setWidth(INITIAL_Width);	¶		diagonalOne.setRadius(INITIAL_Height/2);¶		diagonalOne.rotate(151);¶		diagonalTwo.setRadius(INITIAL_Width/2);¶		diagonalTwo.rotate(-8);¶		diagonalThree.setRadius(INITIAL_Height/2);¶		diagonalFour.setRadius(INITIAL_Width/2);¶		diagonalThree.rotate(168);¶		diagonalFour.rotate(8);¶		¶	}¶	¶	@Override¶	public Line getVertical() {¶		return vertical;¶	}¶	¶	@Override¶	public Line getHorizontal() {¶		return horizontal;¶	}¶	¶	@Override¶	public Line getDiagonalOne() {¶		return diagonalOne;¶	}¶	¶	@Override¶	public Line getDiagonalTwo() {¶		return diagonalTwo;¶	}¶	¶	@Override¶	public Circle getCircle() {¶		return circle;¶	}¶	¶	@Override¶	public Line getDiagonalThree() {¶		return diagonalThree;¶	}¶	¶	@Override¶	public Line getDiagonalFour() {¶		return diagonalFour;¶	}¶	¶	@Override¶	"), Diff(INSERT,"@Visible(false)¶	"), Diff(EQUAL,"public BoundedBuffer<Integer> getBoundedBuffer() {¶		return observable;¶	}¶	¶	public void update(BoundedBuffer<Integer> buffer) {¶		System.out.println("Buffer: " + buffer.get());¶	}¶¶	¶	public static void main(String[] args) {¶		BoundedBufferView NewTable = new ABoundedBufferView();¶		OEFrame editor = ObjectEditor.edit(NewTable);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶	}¶	¶	¶¶	¶	¶¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
public class ABoundedBufferView  implements BoundedBufferView{
	//make observer of aboundedbuffer
	BoundedBuffer<Integer> observable;
	ACircle circle;
	ALine vertical;
	ALine horizontal;
	ALine diagonalOne;
	ALine diagonalTwo;
	ALine diagonalThree;
	ALine diagonalFour;
	
	int zero = 0;
	int one = 1;
	int two = 2;
	int three = 3;
	int four = 4;
	int five = 5;
	int six = 6;
	int seven = 7;
	
	public ABoundedBufferView() {
		observable = new ABoundedBuffer<Integer>();
		observable.put(zero);
		observable.put(one);
		observable.put(two);
		observable.put(three);
		observable.put(four);
		observable.put(five);
		observable.put(six);
		observable.put(seven);
		
		circle = new ACircle();
		vertical = new ALine();
		horizontal = new ALine();
		diagonalOne = new ALine();
		diagonalTwo = new ALine();
		diagonalThree = new ALine();
		diagonalFour = new ALine();
		
		vertical.setX(INITIAL_X+(INITIAL_Width/2));
		horizontal.setX(INITIAL_X);
		diagonalOne.setX(INITIAL_X+(INITIAL_Width/2));
		diagonalTwo.setX(INITIAL_X+(INITIAL_Width/2));
		diagonalThree.setX(INITIAL_X+(INITIAL_Width/2));
		diagonalFour.setX(INITIAL_X+(INITIAL_Width/2));
		
		vertical.setY(INITIAL_Y);
		horizontal.setY(INITIAL_Y+(INITIAL_Height/2));
		diagonalOne.setY(INITIAL_Y+(INITIAL_Height/2));
		diagonalTwo.setY(INITIAL_Y+(INITIAL_Width/2));
		diagonalThree.setY(INITIAL_Y+(INITIAL_Width/2));
		diagonalFour.setY(INITIAL_Y+(INITIAL_Width/2));
		
		vertical.setHeight(INITIAL_Height);
		horizontal.rotate(48);
		horizontal.setWidth(INITIAL_Width);	
		diagonalOne.setRadius(INITIAL_Height/2);
		diagonalOne.rotate(151);
		diagonalTwo.setRadius(INITIAL_Width/2);
		diagonalTwo.rotate(-8);
		diagonalThree.setRadius(INITIAL_Height/2);
		diagonalFour.setRadius(INITIAL_Width/2);
		diagonalThree.rotate(168);
		diagonalFour.rotate(8);
		
	}
	
	@Override
	public Line getVertical() {
		return vertical;
	}
	
	@Override
	public Line getHorizontal() {
		return horizontal;
	}
	
	@Override
	public Line getDiagonalOne() {
		return diagonalOne;
	}
	
	@Override
	public Line getDiagonalTwo() {
		return diagonalTwo;
	}
	
	@Override
	public Circle getCircle() {
		return circle;
	}
	
	@Override
	public Line getDiagonalThree() {
		return diagonalThree;
	}
	
	@Override
	public Line getDiagonalFour() {
		return diagonalFour;
	}
	
	@Override
	@Visible(false)
	public BoundedBuffer<Integer> getBoundedBuffer() {
		return observable;
	}
	
	public void update(BoundedBuffer<Integer> buffer) {
		System.out.println("Buffer: " + buffer.get());
	}

	
	public static void main(String[] args) {
		BoundedBufferView NewTable = new ABoundedBufferView();
		OEFrame editor = ObjectEditor.edit(NewTable);
		editor.showDrawPanel();
		editor.showTreePanel();
	}
	
	

	
	

	
	
}
]]></snapshot>
  </Command>
  <Command __id="3848" _type="PauseCommand" date="Sat Mar 19 19:58:52 EDT 2022" range="30s-1m" starttimestamp="1647716908162" timestamp="17424026">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[34310]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3849" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:58:52 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="17424378" />
  <Command __id="3851" _type="PauseCommand" date="Sat Mar 19 19:58:56 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17427968">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3590]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3850" _type="SelectTextCommand" caretOffset="343" date="Sat Mar 19 19:58:56 EDT 2022" end="343" start="245" starttimestamp="1647716908162" timestamp="17427968" />
  <Command __id="3852" _type="SelectTextCommand" caretOffset="343" date="Sat Mar 19 19:58:56 EDT 2022" end="343" start="245" starttimestamp="1647716908162" timestamp="17428617" />
  <Command __id="3854" _type="PauseCommand" date="Sat Mar 19 19:58:57 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17429721">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1104]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="3853" _type="CopyCommand" date="Sat Mar 19 19:58:57 EDT 2022" starttimestamp="1647716908162" timestamp="17429721" />
  <Command __id="3856" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 19:58:58 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="17430818" />
  <Command __id="3847" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:58:52 EDT 2022" docASTNodeCount="117" docActiveCodeLength="887" docExpressionCount="63" docLength="1413" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17424026">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ACircle.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeListener;

import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;

@StructurePattern(StructurePatternNames.OVAL_PATTERN)
public class ACircle extends ABoundedShape implements Circle {
	int x;
	int y;
	int radius;
	int height;
	int width;
	int INITIAL_X = 420;
	int INITIAL_Y = 175;
	int INITIAL_Width = 350;
	int INITIAL_Height = 350;
	
	PropertyListenerSupport propertySupport = new APropertyListenerSupport();

	public ACircle() {
		setX(INITIAL_X);
		setY(INITIAL_Y);
		setHeight(INITIAL_Height);
		setWidth(INITIAL_Width);	
	}

//
//	@Override
//	public int getHeight() {
//		return height;
//	}
//
//
//	@Override
//	public int getWidth() {
//		return width;
//	}
//
//	@Override
//	public void setHeight(int NewHeight) {
//		height = NewHeight;
//	}
//
//
//	@Override
//	public void setWidth(int NewWidth) {
//		width = NewWidth;
//	}
//
//
//	@Override
//	public void setX(int NewX) {
//		x = NewX;
//	}
//
//
//	@Override
//	public void setY(int NewY) {
//		y = NewY;
//	}
//
//
//	@Override
//	public int getX() {
//		return x;
//	}
//
//
//	@Override
//	public int getY() {
//		return y;
//	}


	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		propertySupport.addPropertyChangeListener(arg0);
	}	
	
}
]]></snapshot>
  </Command>
  <Command __id="3855" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:58:58 EDT 2022" docASTNodeCount="223" docActiveCodeLength="1432" docExpressionCount="129" docLength="1941" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17430614">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ABoundedBuffer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.List;¶¶public class ABoundedBuffer<ElementType> implements BoundedBuffer<ElementType>{¶	public static final int  MAX_SIZE = 8;¶	Object[] buffer = new Object[MAX_SIZE];¶	int size = 0;¶	int nextIn = 0;¶	int nextOut = 0;¶	¶	PropertyListenerSupport propertySupport = new APropertyListenerSupport();¶//	public synchronized void put(ElementType element) {¶¶	public void put(ElementType element) {¶//		if (size >= MAX_SIZE)¶//			return;¶		while (size >= MAX_SIZE) {¶			try {¶				wait();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶		}¶		buffer[nextIn] = element;¶		int oldNextIn = nextIn;¶		nextIn = (nextIn + 1) % MAX_SIZE;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "nextIn", oldNextIn, nextIn));¶		size++;¶		//notify();¶	}	¶	¶//	public synchronized ElementType get() {¶	public  ElementType get() {¶//		if (size == 0) {¶//			return null;¶//		}¶		while (size == 0) {¶			try {¶				wait();¶			} catch (InterruptedException e) {¶				e.printStackTrace();¶			}¶		}¶		ElementType retVal = (ElementType) buffer[nextOut];¶		int oldNextOut = nextOut;¶		nextOut = (nextOut + 1) % MAX_SIZE;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "nextOut", oldNextOut, nextOut));¶		size--;¶		//notify();¶		return retVal;		¶	}¶//	public static void main(String[] args) {¶//		BoundedBuffer<String> greetings = new ABoundedBuffer();¶//		Runnable producer1 = new AProducer<String>(greetings, "Hello");¶//		Runnable producer2 = new AProducer<String>(greetings, "Ca Va");¶//		(new Thread(producer1)).start();¶//		(new Thread(producer2)).start();¶//	}¶	¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		propertySupport.addPropertyChangeListener(arg0);¶		propertySupport.notifyAll();¶	}¶}")]]]></diff>
  </Command>
  <Command __id="3858" _type="PauseCommand" date="Sat Mar 19 19:59:00 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17432505">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1687]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3859" _type="MoveCaretCommand" caretOffset="136" date="Sat Mar 19 19:59:00 EDT 2022" docOffset="293" starttimestamp="1647716908162" timestamp="17432694" />
  <Command __id="3861" _type="PauseCommand" date="Sat Mar 19 19:59:02 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17434270">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1576]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3860" _type="MoveCaretCommand" caretOffset="383" date="Sat Mar 19 19:59:02 EDT 2022" docOffset="540" starttimestamp="1647716908162" timestamp="17434270" />
  <Command __id="3857" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:59:00 EDT 2022" docASTNodeCount="540" docActiveCodeLength="3084" docExpressionCount="360" docLength="3117" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17432505">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ABoundedBufferView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶public class ABoundedBufferView  implements BoundedBufferView{¶	//make observer of aboundedbuffer¶	BoundedBuffer<Integer> observable;¶	ACircle circle;¶	ALine vertical;¶	ALine horizontal;¶	ALine diagonalOne;¶	ALine diagonalTwo;¶	ALine diagonalThree;¶	ALine diagonalFour;¶	¶	int zero = 0;¶	int one = 1;¶	int two = 2;¶	int three = 3;¶	int four = 4;¶	int five = 5;¶	int six = 6;¶	int seven = 7;¶	¶	public ABoundedBufferView() {¶		observable = new ABoundedBuffer<Integer>();¶		observable.put(zero);¶		observable.put(one);¶		observable.put(two);¶		observable.put(three);¶		observable.put(four);¶		observable.put(five);¶		observable.put(six);¶		observable.put(seven);¶		¶		circle = new ACircle();¶		vertical = new ALine();¶		horizontal = new ALine();¶		diagonalOne = new ALine();¶		diagonalTwo = new ALine();¶		diagonalThree = new ALine();¶		diagonalFour = new ALine();¶		¶		vertical.setX(INITIAL_X+(INITIAL_Width/2));¶		horizontal.setX(INITIAL_X);¶		diagonalOne.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalTwo.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalThree.setX(INITIAL_X+(INITIAL_Width/2));¶		diagonalFour.setX(INITIAL_X+(INITIAL_Width/2));¶		¶		vertical.setY(INITIAL_Y);¶		horizontal.setY(INITIAL_Y+(INITIAL_Height/2));¶		diagonalOne.setY(INITIAL_Y+(INITIAL_Height/2));¶		diagonalTwo.setY(INITIAL_Y+(INITIAL_Width/2));¶		diagonalThree.setY(INITIAL_Y+(INITIAL_Width/2));¶		diagonalFour.setY(INITIAL_Y+(INITIAL_Width/2));¶		¶		vertical.setHeight(INITIAL_Height);¶		horizontal.rotate(48);¶		horizontal.setWidth(INITIAL_Width);	¶		diagonalOne.setRadius(INITIAL_Height/2);¶		diagonalOne.rotate(151);¶		diagonalTwo.setRadius(INITIAL_Width/2);¶		diagonalTwo.rotate(-8);¶		diagonalThree.setRadius(INITIAL_Height/2);¶		diagonalFour.setRadius(INITIAL_Width/2);¶		diagonalThree.rotate(168);¶		diagonalFour.rotate(8);¶		¶	}¶	¶	@Override¶	public Line getVertical() {¶		return vertical;¶	}¶	¶	@Override¶	public Line getHorizontal() {¶		return horizontal;¶	}¶	¶	@Override¶	public Line getDiagonalOne() {¶		return diagonalOne;¶	}¶	¶	@Override¶	public Line getDiagonalTwo() {¶		return diagonalTwo;¶	}¶	¶	@Override¶	public Circle getCircle() {¶		return circle;¶	}¶	¶	@Override¶	public Line getDiagonalThree() {¶		return diagonalThree;¶	}¶	¶	@Override¶	public Line getDiagonalFour() {¶		return diagonalFour;¶	}¶	¶	@Override¶	@Visible(false)¶	public BoundedBuffer<Integer> getBoundedBuffer() {¶		return observable;¶	}¶	¶	public void update(BoundedBuffer<Integer> buffer) {¶		System.out.println("Buffer: " + buffer.get());¶	}¶¶	¶	public static void main(String[] args) {¶		BoundedBufferView NewTable = new ABoundedBufferView();¶		OEFrame editor = ObjectEditor.edit(NewTable);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶	}¶	¶	¶¶	¶	¶¶	¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="3863" _type="PauseCommand" date="Sat Mar 19 19:59:03 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17435509">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1239]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3864" _type="InsertStringCommand" date="Sat Mar 19 19:59:03 EDT 2022" starttimestamp="1647716908162" timestamp="17435537" timestamp2="17435537">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3867" _type="PauseCommand" date="Sat Mar 19 19:59:05 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17437529">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1992]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="3866" _type="InsertStringCommand" date="Sat Mar 19 19:59:05 EDT 2022" starttimestamp="1647716908162" timestamp="17437529" timestamp2="17437529">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3868" _type="MoveCaretCommand" caretOffset="389" date="Sat Mar 19 19:59:06 EDT 2022" docOffset="546" starttimestamp="1647716908162" timestamp="17438331" />
  <DocumentChange __id="3862" _type="Insert" date="Sat Mar 19 19:59:03 EDT 2022" docASTNodeCount="540" docActiveCodeLength="3090" docExpressionCount="360" docLength="3123" length="6" offset="540" repeat="2" starttimestamp="1647716908162" timestamp="17435509" timestamp2="17437504">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <Command __id="3870" _type="PauseCommand" date="Sat Mar 19 19:59:07 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17439648">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1317]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3871" _type="PasteCommand" date="Sat Mar 19 19:59:07 EDT 2022" starttimestamp="1647716908162" timestamp="17439675" />
  <Command __id="3872" _type="MoveCaretCommand" caretOffset="487" date="Sat Mar 19 19:59:08 EDT 2022" docOffset="644" starttimestamp="1647716908162" timestamp="17440638" />
  <Command __id="3874" _type="PauseCommand" date="Sat Mar 19 19:59:11 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17443329">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2691]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3873" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 19:59:11 EDT 2022" starttimestamp="1647716908162" timestamp="17443329" />
  <Command __id="3875" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:59:11 EDT 2022" starttimestamp="1647716908162" timestamp="17443462" />
  <Command __id="3876" _type="EclipseCommand" commandID="" date="Sat Mar 19 19:59:11 EDT 2022" starttimestamp="1647716908162" timestamp="17443579" />
  <DocumentChange __id="3869" _type="Replace" date="Sat Mar 19 19:59:07 EDT 2022" docASTNodeCount="560" docActiveCodeLength="3188" docExpressionCount="368" docLength="3221" endLine="20" insertionLength="99" int_docASTNodeCount="540" int_docActiveCodeLength="3089" int_docExpressionCount="360" int_docLength="3122" length="1" offset="545" startLine="20" starttimestamp="1647716908162" timestamp="17439648">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	int INITIAL_X = 420;
	int INITIAL_Y = 175;
	int INITIAL_Width = 350;
	int INITIAL_Height = 350;]]></insertedText>
  </DocumentChange>
  <Command __id="3878" _type="PauseCommand" date="Sat Mar 19 19:59:14 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17446062">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2483]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3879" _type="MoveCaretCommand" caretOffset="4068" date="Sat Mar 19 19:59:14 EDT 2022" docOffset="4764" starttimestamp="1647716908162" timestamp="17446241" />
  <Command __id="3877" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:59:14 EDT 2022" docASTNodeCount="1946" docActiveCodeLength="10865" docExpressionCount="1500" docLength="12065" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17446062">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer-Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		patronList.add(0, new APatron());¶		chefList = new ArrayList<AChef>();¶		chefList.add(0, new AChef());¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶//		bufferView = new ABoundedBufferView();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶		¶		patronList.clear();¶		chefList.clear();¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	public BoundedBufferView getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="3881" _type="PauseCommand" date="Sat Mar 19 19:59:22 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="17454250">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8008]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3880" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:59:22 EDT 2022" docASTNodeCount="56" docActiveCodeLength="392" docExpressionCount="31" docLength="689" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17454249">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeListener;¶import java.util.List;¶¶import util.models.PropertyListenerRegisterer;¶¶public interface ProducerConsumerScene {¶	List<APatron> getPatronList();¶	List<AChef> getChefList();¶	BoundedBufferView getBuffer();¶	void addPropertyChangeListener(PropertyChangeListener arg0);¶	//void approachBuffer(int bufferNumber);¶	//void approachBuffer(Avatar avatar, int bufferNumber);¶//	void chefApproachBuffer(Chef chef, int bufferNumber);¶	//void moveToBuffer(Avatar avatar, int bufferNumber);¶	//void chefApproachBuffer(int chef, int bufferNumber);¶	//public void processHeads(Head aHead);¶	void chefToTable(Head aHead);¶}¶")]]]></diff>
  </Command>
  <Command __id="3882" _type="MoveCaretCommand" caretOffset="195" date="Sat Mar 19 19:59:22 EDT 2022" docOffset="269" starttimestamp="1647716908162" timestamp="17454445" />
  <Command __id="3884" _type="MoveCaretCommand" caretOffset="4068" date="Sat Mar 19 19:59:23 EDT 2022" docOffset="4764" starttimestamp="1647716908162" timestamp="17455543" />
  <Command __id="3886" _type="PauseCommand" date="Sat Mar 19 19:59:45 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="17477418">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[21875]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3885" _type="MoveCaretCommand" caretOffset="11303" date="Sat Mar 19 19:59:45 EDT 2022" docOffset="11999" starttimestamp="1647716908162" timestamp="17477418" />
  <Command __id="3887" _type="MoveCaretCommand" caretOffset="11303" date="Sat Mar 19 19:59:45 EDT 2022" docOffset="11999" starttimestamp="1647716908162" timestamp="17477418" />
  <Command __id="3889" _type="InsertStringCommand" date="Sat Mar 19 19:59:46 EDT 2022" starttimestamp="1647716908162" timestamp="17478035" timestamp2="17478035">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3890" _type="InsertStringCommand" date="Sat Mar 19 19:59:46 EDT 2022" starttimestamp="1647716908162" timestamp="17478035" timestamp2="17478035">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3892" _type="InsertStringCommand" date="Sat Mar 19 19:59:46 EDT 2022" starttimestamp="1647716908162" timestamp="17478143" timestamp2="17478143">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3893" _type="InsertStringCommand" date="Sat Mar 19 19:59:46 EDT 2022" starttimestamp="1647716908162" timestamp="17478143" timestamp2="17478143">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3895" _type="PauseCommand" date="Sat Mar 19 19:59:47 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17479581">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1438]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3898" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:59:50 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17482224" type="Run" />
  <Command __id="3900" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:59:50 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17482225" type="Run" />
  <Command __id="3902" _type="PauseCommand" date="Sat Mar 19 19:59:54 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17486249">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[4024]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3904" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:59:58 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17490423" type="Run" />
  <Command __id="3906" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 19:59:58 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17490424" type="Run" />
  <Command __id="3908" _type="PauseCommand" date="Sat Mar 19 19:59:59 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17491487">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1063]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3907" _type="ConsoleOutput" date="Sat Mar 19 19:59:59 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17491487" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@51cb9117]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@51cb9117]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@51cb9117]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@51cb9117]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7083e61]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7083e61]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7083e61]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@7083e61]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@33b0e7df]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@33b0e7df]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@33b0e7df]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@33b0e7df]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3166074b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3166074b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3166074b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3166074b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3ca87b59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3ca87b59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3ca87b59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3ca87b59]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7a95b19b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7a95b19b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@7a95b19b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@7a95b19b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@4eaf3f09]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@4eaf3f09]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@4eaf3f09]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@4eaf3f09]¶Moving the stove: "), Diff(INSERT,"W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3909" _type="ShellCommand" date="Sat Mar 19 19:59:59 EDT 2022" starttimestamp="1647716908162" timestamp="17491724" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3911" _type="PauseCommand" date="Sat Mar 19 20:00:01 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17493028">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1304]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3910" _type="ConsoleOutput" date="Sat Mar 19 20:00:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17493028" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3912" _type="ConsoleOutput" date="Sat Mar 19 20:00:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17493243" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"ZIndex"), Diff(INSERT,"plate"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"nAvatar"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="3913" _type="ConsoleOutput" date="Sat Mar 19 20:00:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17493325" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"Table"), Diff(EQUAL,".addPropertyChangeListener("), Diff(DELETE,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use"), Diff(INSERT," should be associated with"), Diff(EQUAL," annotation"), Diff(INSERT,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. "), Diff(INSERT,"Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3914" _type="ConsoleOutput" date="Sat Mar 19 20:00:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17493412" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(INSERT," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Tab"), Diff(INSERT,"nAng"), Diff(EQUAL,"le.addPropertyChangeListener("), Diff(INSERT,"graphics.Angle,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with annotation: @ObserverReg"), Diff(INSERT,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeL"), Diff(EQUAL,"iste"), Diff(DELETE,"r"), Diff(INSERT,"n"), Diff(EQUAL,"er("), Diff(INSERT,"graphics.Angle,java.beans."), Diff(EQUAL,"Property"), Diff(DELETE," "), Diff(INSERT,"Change"), Diff(EQUAL,"Listener)¶")]]]></diff>
  </Command>
  <Command __id="3915" _type="ConsoleOutput" date="Sat Mar 19 20:00:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17493533" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 

W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visible
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. ¶¶W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visible¶E***Could not find image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3916" _type="ConsoleOutput" date="Sat Mar 19 20:00:02 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17493920" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. ¶¶W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visible¶E***Could not find image file:"), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3917" _type="ConsoleOutput" date="Sat Mar 19 20:00:02 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17494069" type="ConsoleOutput">
    <outputString><![CDATA[W*** The Y property of .chefList.0.chef.head = -49 is < 0. Parts of it may not be visible
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"The Y property of .chefList.0.chef.head = -49 is < 0. Parts of it may not be visible¶E***Could not find image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3919" _type="PauseCommand" date="Sat Mar 19 20:00:03 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17495438">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1369]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3918" _type="ConsoleOutput" date="Sat Mar 19 20:00:03 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17495438" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Producer-Consumer Scene.Patron List.1:.Patron.Head not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"The Y property of .chefList.0.chef.head = -49 is < 0. Parts of it may not be visible¶E***Coul"), Diff(INSERT,"Value: null of Producer-Consumer Scene.Patron List.1:.Patron.Hea"), Diff(EQUAL,"d not "), Diff(DELETE,"f"), Diff(EQUAL,"in"), Diff(DELETE,"d image file:"), Diff(INSERT," range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3920" _type="ConsoleOutput" date="Sat Mar 19 20:00:04 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17495875" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Producer-Consumer Scene.Chef List.1:.Chef.Head not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Producer-Consumer Scene."), Diff(DELETE,"Patron"), Diff(INSERT,"Chef"), Diff(EQUAL," List.1:."), Diff(DELETE,"Patron"), Diff(INSERT,"Chef"), Diff(EQUAL,".Head not in range.¶")]]]></diff>
  </Command>
  <Command __id="3922" _type="PauseCommand" date="Sat Mar 19 20:00:09 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="17501091">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5216]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="3921" _type="ExceptionCommand" date="Sat Mar 19 20:00:09 EDT 2022" starttimestamp="1647716908162" timestamp="17501091" type="Exception">
    <exceptionString><![CDATA[class java.lang.Error
java.lang.Error: Unresolved compilation problem: 
	The method addPropertyChangeListener(AConsoleSceneView) is undefined for the type BoundedBufferView

	at controls.AConsoleSceneView.<init>(AConsoleSceneView.java:36)
	at factories.AFactory.ConsoleSceneViewFactoryMethod(AFactory.java:24)
	at graphics.AProducerConsumerScene.initScene(AProducerConsumerScene.java:109)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2002)
	at bus.uigen.controller.models.AnInteractiveMethodInvoker.invokeDynamicCommand(AnInteractiveMethodInvoker.java:247)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:233)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6401)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
]]></exceptionString>
    <language><![CDATA[SML]]></language>
  </Command>
  <Command __id="3923" _type="ConsoleOutput" date="Sat Mar 19 20:00:09 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17501097" type="ConsoleOutput">
    <outputString><![CDATA[class java.lang.Error
java.lang.Error: Unresolved compilation problem: 
	The method addPropertyChangeListener(AConsoleSceneView) is undefined for the type BoundedBufferView

	at controls.AConsoleSceneView.<init>(AConsoleSceneView.java:36)
	at factories.AFactory.ConsoleSceneViewFactoryMethod(AFactory.java:24)
	at graphics.AProducerConsumerScene.initScene(AProducerConsumerScene.java:109)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2002)
	at bus.uigen.controller.models.AnInteractiveMethodInvoker.invokeDynamicCommand(AnInteractiveMethodInvoker.java:247)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:233)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6401)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Producer-Consumer Scene.Chef List.1:.Chef.Head not in range."), Diff(INSERT,"class java.lang.Error¶java.lang.Error: Unresolved compilation problem: ¶	The method addPropertyChangeListener(AConsoleSceneView) is undefined for the type BoundedBufferView¶¶	at controls.AConsoleSceneView.<init>(AConsoleSceneView.java:36)¶	at factories.AFactory.ConsoleSceneViewFactoryMethod(AFactory.java:24)¶	at graphics.AProducerConsumerScene.initScene(AProducerConsumerScene.java:109)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:564)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2002)¶	at bus.uigen.controller.models.AnInteractiveMethodInvoker.invokeDynamicCommand(AnInteractiveMethodInvoker.java:247)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:564)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:233)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)¶	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)¶	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)¶	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)¶	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)¶	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)¶	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)¶	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)¶	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)¶	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)¶	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6401)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3925" _type="PauseCommand" date="Sat Mar 19 20:00:14 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17505956">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4859]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="3924" _type="ExceptionCommand" date="Sat Mar 19 20:00:14 EDT 2022" starttimestamp="1647716908162" timestamp="17505956" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2002)
	at bus.uigen.controller.models.AnInteractiveMethodInvoker.invokeDynamicCommand(AnInteractiveMethodInvoker.java:247)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:233)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6401)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5012)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4844)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4919)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4548)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4489)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="3927" _type="PauseCommand" date="Sat Mar 19 20:00:22 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="17514640">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[8684]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3928" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 20:00:27 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17518888" type="Run" />
  <Command __id="3930" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 20:00:27 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17518888" type="Run" />
  <Command __id="3883" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 19:59:23 EDT 2022" docASTNodeCount="1946" docActiveCodeLength="10865" docExpressionCount="1500" docLength="12065" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17455379">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer-Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		patronList.add(0, new APatron());¶		chefList = new ArrayList<AChef>();¶		chefList.add(0, new AChef());¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶//		bufferView = new ABoundedBufferView();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶		¶		patronList.clear();¶		chefList.clear();¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	public BoundedBufferView getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3888" _type="Insert" date="Sat Mar 19 19:59:46 EDT 2022" docASTNodeCount="1941" docActiveCodeLength="10822" docExpressionCount="1496" docLength="12067" length="2" offset="11999" repeat="2" starttimestamp="1647716908162" timestamp="17478022" timestamp2="17478125">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="3932" _type="PauseCommand" date="Sat Mar 19 20:00:33 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="17525308">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[6420]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3933" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 20:00:33 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="17525623" />
  <Command __id="3935" _type="PauseCommand" date="Sat Mar 19 20:00:36 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17528234">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2611]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3934" _type="MoveCaretCommand" caretOffset="1884" date="Sat Mar 19 20:00:36 EDT 2022" docOffset="1954" starttimestamp="1647716908162" timestamp="17528234" />
  <Command __id="3931" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 20:00:33 EDT 2022" docASTNodeCount="334" docActiveCodeLength="2115" docExpressionCount="283" docLength="2115" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17525308">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\controls\AConsoleSceneView.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package controls;

import java.beans.PropertyChangeEvent;

import factories.AFactory;
import graphics.ProducerConsumerScene;

public class AConsoleSceneView implements ConsoleSceneView {

	public AConsoleSceneView(int chefs, int patrons) {
		ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();
				
		for (int i=0; i<chefs; i++) {
			scene.getChefList().get(i).getChef().getHead().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getTorso().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getNeck().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getText().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getArms().getLeftLine().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getArms().getRightLine().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getLegs().getRightLine().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getLegs().getLeftLine().addPropertyChangeListener(this);
		}
		
		for (int i=0; i<patrons; i++) {
			scene.getPatronList().get(i).getPatron().getHead().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getTorso().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getNeck().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getText().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getArms().getLeftLine().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getArms().getRightLine().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getLegs().getRightLine().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getLegs().getLeftLine().addPropertyChangeListener(this);
		}
		
		scene.addPropertyChangeListener(this);
		scene.getBuffer().addPropertyChangeListener(this);
	}

	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		System.out.println(evt);
	}
}
]]></snapshot>
  </Command>
  <Command __id="3937" _type="PauseCommand" date="Sat Mar 19 20:00:37 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17529778">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1544]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3938" _type="InsertStringCommand" date="Sat Mar 19 20:00:37 EDT 2022" starttimestamp="1647716908162" timestamp="17529791" timestamp2="17529791">
    <data><![CDATA[/]]></data>
  </Command>
  <DocumentChange __id="3936" _type="Insert" date="Sat Mar 19 20:00:37 EDT 2022" docASTNodeCount="334" docActiveCodeLength="2116" docExpressionCount="283" docLength="2116" length="1" offset="1954" starttimestamp="1647716908162" timestamp="17529778">
    <text><![CDATA[/]]></text>
  </DocumentChange>
  <Command __id="3940" _type="PauseCommand" date="Sat Mar 19 20:00:39 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17531786">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1995]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3941" _type="InsertStringCommand" date="Sat Mar 19 20:00:39 EDT 2022" starttimestamp="1647716908162" timestamp="17531809" timestamp2="17531809">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3943" _type="PauseCommand" date="Sat Mar 19 20:00:43 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17534978">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3169]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3942" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 20:00:43 EDT 2022" starttimestamp="1647716908162" timestamp="17534978" />
  <Command __id="3944" _type="EclipseCommand" commandID="" date="Sat Mar 19 20:00:43 EDT 2022" starttimestamp="1647716908162" timestamp="17535061" />
  <Command __id="3945" _type="EclipseCommand" commandID="" date="Sat Mar 19 20:00:43 EDT 2022" starttimestamp="1647716908162" timestamp="17535103" />
  <DocumentChange __id="3939" _type="Insert" date="Sat Mar 19 20:00:39 EDT 2022" docASTNodeCount="327" docActiveCodeLength="2065" docExpressionCount="277" docLength="2117" length="1" offset="1955" starttimestamp="1647716908162" timestamp="17531786">
    <text><![CDATA[/]]></text>
  </DocumentChange>
  <Command __id="3947" _type="PauseCommand" date="Sat Mar 19 20:00:44 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17536724">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1621]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3948" _type="MoveCaretCommand" caretOffset="0" date="Sat Mar 19 20:00:45 EDT 2022" docOffset="0" starttimestamp="1647716908162" timestamp="17537060" />
  <Command __id="3950" _type="PauseCommand" date="Sat Mar 19 20:00:50 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17542047">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4987]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3949" _type="MoveCaretCommand" caretOffset="1970" date="Sat Mar 19 20:00:50 EDT 2022" docOffset="2570" starttimestamp="1647716908162" timestamp="17542047" />
  <Command __id="3952" _type="InsertStringCommand" date="Sat Mar 19 20:00:50 EDT 2022" starttimestamp="1647716908162" timestamp="17542678" timestamp2="17542678">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3954" _type="InsertStringCommand" date="Sat Mar 19 20:00:50 EDT 2022" starttimestamp="1647716908162" timestamp="17542756" timestamp2="17542756">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="3955" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 20:00:51 EDT 2022" starttimestamp="1647716908162" timestamp="17543354" />
  <Command __id="3956" _type="EclipseCommand" commandID="" date="Sat Mar 19 20:00:51 EDT 2022" starttimestamp="1647716908162" timestamp="17543806" />
  <Command __id="3957" _type="EclipseCommand" commandID="" date="Sat Mar 19 20:00:51 EDT 2022" starttimestamp="1647716908162" timestamp="17543831" />
  <Command __id="3946" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 20:00:44 EDT 2022" docASTNodeCount="836" docActiveCodeLength="4508" docExpressionCount="642" docLength="4590" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17536724">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\controls\APainter.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package controls;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.ImageObserver;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.JComponent;
import javax.swing.JPanel;

import factories.AFactory;
import graphics.Angle;
import graphics.ProducerConsumerScene;
import graphics.Avatar;
import graphics.Chef;
import graphics.Head;
import graphics.Line;
import graphics.Patron;
import graphics.StringShape;
import graphics.Table;
import net.sf.saxon.expr.Component;
import util.annotations.Visible;

public class APainter extends JComponent implements Painter {
	int numberOfChefs;
	int numberOfPatrons;
	
	public APainter(int chefs, int patrons) {
		
		numberOfChefs = chefs;
		numberOfPatrons = patrons;
		ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();
		
		for (int i=0; i<chefs; i++) {
			scene.getChefList().get(i).getChef().getHead().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getTorso().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getNeck().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getText().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getArms().getLeftLine().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getArms().getRightLine().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getLegs().getRightLine().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getLegs().getLeftLine().addPropertyChangeListener(this);
		}
		
		for (int i=0; i<patrons; i++) {
			scene.getPatronList().get(i).getPatron().getHead().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getTorso().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getNeck().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getText().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getArms().getLeftLine().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getArms().getRightLine().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getLegs().getRightLine().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getLegs().getLeftLine().addPropertyChangeListener(this);
		}
		
		scene.addPropertyChangeListener(this);
		
		scene.getBuffer().addPropertyChangeListener(this);
	}
	
	@Override
	public void paint(Graphics g) {
		ProducerConsumerScene scene = factories.AFactory.arrayBasedSceneFactoryMethod();
		Graphics2D g2 = (Graphics2D) g;
		
		for (int i=0; i<numberOfChefs; i++) {
			draw(g2, scene.getChefList().get(i));
		}
		for (int i=0; i<numberOfPatrons; i++) {
			draw(g2, scene.getPatronList().get(i));
		}
	}
	
	@Override
	public void draw(Graphics g, Chef aChef) {
		draw(g, aChef.getChef());
		draw(g, aChef.getStove());
	}
	
	@Override
	public void draw(Graphics g, Patron aPatron) {
		draw(g, aPatron.getPatron());
		draw(g, aPatron.getTable());
	}
	
	@Override
	public void draw(Graphics g, Avatar avatar) {
		draw(g, avatar.getArms());
		draw(g, avatar.getLegs());
		draw(g, avatar.getHead());
		draw(g, avatar.getNeck());
		draw(g, avatar.getTorso());
		draw(g, avatar.getText());
	}
	
	@Override
	public void draw(Graphics g, Angle angle) {
		draw(g, angle.getLeftLine());
		draw(g, angle.getRightLine());
	}
	
	@Override
	public void draw(Graphics g, Line aLine) {
		g.drawLine(aLine.getX(), aLine.getY(), aLine.getX() + aLine.getWidth(), aLine.getY() + aLine.getHeight());
	}
	
	@Override
	public void draw(Graphics g, StringShape string) {
		g = (Graphics2D) g;
		String s = string.getText();
		g.drawString(s, string.getX(), string.getY());
	}
	
	@Override
	public void draw(Graphics g, Head aHead) {
		Image img = Toolkit.getDefaultToolkit().getImage(aHead.getImageFileName());
		//g.drawImage(img, aHead.getX(), aHead.getY(), (ImageObserver) ((Component)this));
	}
	
	@Override
	public void draw(Graphics g, Table aTable) {
		draw(g, aTable.getBottom());
		draw(g, aTable.getLeft());
		draw(g, aTable.getLeftDiagonal());
		draw(g, aTable.getRight());
		draw(g, aTable.getRightDiagonal());
		draw(g, aTable.getTableLeg());
		draw(g, aTable.getTop());
	}

	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		repaint();
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="3951" _type="Insert" date="Sat Mar 19 20:00:50 EDT 2022" docASTNodeCount="829" docActiveCodeLength="4458" docExpressionCount="636" docLength="4592" length="2" offset="2570" repeat="2" starttimestamp="1647716908162" timestamp="17542661" timestamp2="17542738">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="3959" _type="PauseCommand" date="Sat Mar 19 20:00:56 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17548673">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4842]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3960" _type="MoveCaretCommand" caretOffset="1956" date="Sat Mar 19 20:00:57 EDT 2022" docOffset="2917" starttimestamp="1647716908162" timestamp="17549057" />
  <Command __id="3958" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 20:00:56 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17548673">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3962" _type="PauseCommand" date="Sat Mar 19 20:01:02 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="17554157">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5100]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3963" _type="MoveCaretCommand" caretOffset="1972" date="Sat Mar 19 20:01:02 EDT 2022" docOffset="2572" starttimestamp="1647716908162" timestamp="17554482" />
  <Command __id="3964" _type="MoveCaretCommand" caretOffset="1941" date="Sat Mar 19 20:01:03 EDT 2022" docOffset="2541" starttimestamp="1647716908162" timestamp="17554891" />
  <Command __id="3966" _type="PauseCommand" date="Sat Mar 19 20:01:11 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="17563206">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8315]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3965" _type="MoveCaretCommand" caretOffset="585" date="Sat Mar 19 20:01:11 EDT 2022" docOffset="585" starttimestamp="1647716908162" timestamp="17563206" />
  <Command __id="3967" _type="SelectTextCommand" caretOffset="587" date="Sat Mar 19 20:01:11 EDT 2022" end="587" start="584" starttimestamp="1647716908162" timestamp="17563349" />
  <Command __id="3968" _type="SelectTextCommand" caretOffset="614" date="Sat Mar 19 20:01:11 EDT 2022" end="614" start="577" starttimestamp="1647716908162" timestamp="17563497" />
  <Command __id="3961" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 20:01:02 EDT 2022" docASTNodeCount="829" docActiveCodeLength="4458" docExpressionCount="636" docLength="4592" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17554157">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\controls\APainter.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package controls;¶¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.Image;¶import java.awt.Toolkit;¶import java.awt.image.ImageObserver;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import javax.swing.JComponent;¶import javax.swing.JPanel;¶¶import factories.AFactory;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Chef;¶import graphics.Head;¶import graphics.Line;¶import graphics.Patron;¶import graphics.StringShape;¶import graphics.Table;¶import net.sf.saxon.expr.Component;¶import util.annotations.Visible;¶¶public class APainter extends JComponent implements Painter {¶	int numberOfChefs;¶	int numberOfPatrons;¶	¶	public APainter(int chefs, int patrons) {¶		¶		numberOfChefs = chefs;¶		numberOfPatrons = patrons;¶		ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶		¶		for (int i=0; i<chefs; i++) {¶			scene.getChefList().get(i).getChef().getHead().addPropertyChangeListener(this);¶			scene.getChefList().get(i).getChef().getTorso().addPropertyChangeListener(this);¶			scene.getChefList().get(i).getChef().getNeck().addPropertyChangeListener(this);¶			scene.getChefList().get(i).getChef().getText().addPropertyChangeListener(this);¶			scene.getChefList().get(i).getChef().getArms().getLeftLine().addPropertyChangeListener(this);¶			scene.getChefList().get(i).getChef().getArms().getRightLine().addPropertyChangeListener(this);¶			scene.getChefList().get(i).getChef().getLegs().getRightLine().addPropertyChangeListener(this);¶			scene.getChefList().get(i).getChef().getLegs().getLeftLine().addPropertyChangeListener(this);¶		}¶		¶		for (int i=0; i<patrons; i++) {¶			scene.getPatronList().get(i).getPatron().getHead().addPropertyChangeListener(this);¶			scene.getPatronList().get(i).getPatron().getTorso().addPropertyChangeListener(this);¶			scene.getPatronList().get(i).getPatron().getNeck().addPropertyChangeListener(this);¶			scene.getPatronList().get(i).getPatron().getText().addPropertyChangeListener(this);¶			scene.getPatronList().get(i).getPatron().getArms().getLeftLine().addPropertyChangeListener(this);¶			scene.getPatronList().get(i).getPatron().getArms().getRightLine().addPropertyChangeListener(this);¶			scene.getPatronList().get(i).getPatron().getLegs().getRightLine().addPropertyChangeListener(this);¶			scene.getPatronList().get(i).getPatron().getLegs().getLeftLine().addPropertyChangeListener(this);¶		}¶		¶		scene.addPropertyChangeListener(this);¶		¶		"), Diff(INSERT,"//"), Diff(EQUAL,"scene.getBuffer().addPropertyChangeListener(this);¶	}¶	¶	@Override¶	public void paint(Graphics g) {¶		ProducerConsumerScene scene = factories.AFactory.arrayBasedSceneFactoryMethod();¶		Graphics2D g2 = (Graphics2D) g;¶		¶		for (int i=0; i<numberOfChefs; i++) {¶			draw(g2, scene.getChefList().get(i));¶		}¶		for (int i=0; i<numberOfPatrons; i++) {¶			draw(g2, scene.getPatronList().get(i));¶		}¶	}¶	¶	@Override¶	public void draw(Graphics g, Chef aChef) {¶		draw(g, aChef.getChef());¶		draw(g, aChef.getStove());¶	}¶	¶	@Override¶	public void draw(Graphics g, Patron aPatron) {¶		draw(g, aPatron.getPatron());¶		draw(g, aPatron.getTable());¶	}¶	¶	@Override¶	public void draw(Graphics g, Avatar avatar) {¶		draw(g, avatar.getArms());¶		draw(g, avatar.getLegs());¶		draw(g, avatar.getHead());¶		draw(g, avatar.getNeck());¶		draw(g, avatar.getTorso());¶		draw(g, avatar.getText());¶	}¶	¶	@Override¶	public void draw(Graphics g, Angle angle) {¶		draw(g, angle.getLeftLine());¶		draw(g, angle.getRightLine());¶	}¶	¶	@Override¶	public void draw(Graphics g, Line aLine) {¶		g.drawLine(aLine.getX(), aLine.getY(), aLine.getX() + aLine.getWidth(), aLine.getY() + aLine.getHeight());¶	}¶	¶	@Override¶	public void draw(Graphics g, StringShape string) {¶		g = (Graphics2D) g;¶		String s = string.getText();¶		g.drawString(s, string.getX(), string.getY());¶	}¶	¶	@Override¶	public void draw(Graphics g, Head aHead) {¶		Image img = Toolkit.getDefaultToolkit().getImage(aHead.getImageFileName());¶		//g.drawImage(img, aHead.getX(), aHead.getY(), (ImageObserver) ((Component)this));¶	}¶	¶	@Override¶	public void draw(Graphics g, Table aTable) {¶		draw(g, aTable.getBottom());¶		draw(g, aTable.getLeft());¶		draw(g, aTable.getLeftDiagonal());¶		draw(g, aTable.getRight());¶		draw(g, aTable.getRightDiagonal());¶		draw(g, aTable.getTableLeg());¶		draw(g, aTable.getTop());¶	}¶¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		repaint();¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package controls;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.ImageObserver;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.JComponent;
import javax.swing.JPanel;

import factories.AFactory;
import graphics.Angle;
import graphics.ProducerConsumerScene;
import graphics.Avatar;
import graphics.Chef;
import graphics.Head;
import graphics.Line;
import graphics.Patron;
import graphics.StringShape;
import graphics.Table;
import net.sf.saxon.expr.Component;
import util.annotations.Visible;

public class APainter extends JComponent implements Painter {
	int numberOfChefs;
	int numberOfPatrons;
	
	public APainter(int chefs, int patrons) {
		
		numberOfChefs = chefs;
		numberOfPatrons = patrons;
		ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();
		
		for (int i=0; i<chefs; i++) {
			scene.getChefList().get(i).getChef().getHead().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getTorso().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getNeck().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getText().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getArms().getLeftLine().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getArms().getRightLine().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getLegs().getRightLine().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getLegs().getLeftLine().addPropertyChangeListener(this);
		}
		
		for (int i=0; i<patrons; i++) {
			scene.getPatronList().get(i).getPatron().getHead().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getTorso().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getNeck().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getText().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getArms().getLeftLine().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getArms().getRightLine().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getLegs().getRightLine().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getLegs().getLeftLine().addPropertyChangeListener(this);
		}
		
		scene.addPropertyChangeListener(this);
		
		//scene.getBuffer().addPropertyChangeListener(this);
	}
	
	@Override
	public void paint(Graphics g) {
		ProducerConsumerScene scene = factories.AFactory.arrayBasedSceneFactoryMethod();
		Graphics2D g2 = (Graphics2D) g;
		
		for (int i=0; i<numberOfChefs; i++) {
			draw(g2, scene.getChefList().get(i));
		}
		for (int i=0; i<numberOfPatrons; i++) {
			draw(g2, scene.getPatronList().get(i));
		}
	}
	
	@Override
	public void draw(Graphics g, Chef aChef) {
		draw(g, aChef.getChef());
		draw(g, aChef.getStove());
	}
	
	@Override
	public void draw(Graphics g, Patron aPatron) {
		draw(g, aPatron.getPatron());
		draw(g, aPatron.getTable());
	}
	
	@Override
	public void draw(Graphics g, Avatar avatar) {
		draw(g, avatar.getArms());
		draw(g, avatar.getLegs());
		draw(g, avatar.getHead());
		draw(g, avatar.getNeck());
		draw(g, avatar.getTorso());
		draw(g, avatar.getText());
	}
	
	@Override
	public void draw(Graphics g, Angle angle) {
		draw(g, angle.getLeftLine());
		draw(g, angle.getRightLine());
	}
	
	@Override
	public void draw(Graphics g, Line aLine) {
		g.drawLine(aLine.getX(), aLine.getY(), aLine.getX() + aLine.getWidth(), aLine.getY() + aLine.getHeight());
	}
	
	@Override
	public void draw(Graphics g, StringShape string) {
		g = (Graphics2D) g;
		String s = string.getText();
		g.drawString(s, string.getX(), string.getY());
	}
	
	@Override
	public void draw(Graphics g, Head aHead) {
		Image img = Toolkit.getDefaultToolkit().getImage(aHead.getImageFileName());
		//g.drawImage(img, aHead.getX(), aHead.getY(), (ImageObserver) ((Component)this));
	}
	
	@Override
	public void draw(Graphics g, Table aTable) {
		draw(g, aTable.getBottom());
		draw(g, aTable.getLeft());
		draw(g, aTable.getLeftDiagonal());
		draw(g, aTable.getRight());
		draw(g, aTable.getRightDiagonal());
		draw(g, aTable.getTableLeg());
		draw(g, aTable.getTop());
	}

	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		repaint();
	}

}
]]></snapshot>
  </Command>
  <Command __id="3970" _type="PauseCommand" date="Sat Mar 19 20:01:13 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17564844">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1347]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3971" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Sat Mar 19 20:01:13 EDT 2022" starttimestamp="1647716908162" timestamp="17564879" />
  <Command __id="3973" _type="PauseCommand" date="Sat Mar 19 20:01:14 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17565907">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1028]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3972" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Sat Mar 19 20:01:14 EDT 2022" starttimestamp="1647716908162" timestamp="17565907" />
  <Command __id="3974" _type="EclipseCommand" commandID="" date="Sat Mar 19 20:01:14 EDT 2022" starttimestamp="1647716908162" timestamp="17566028" />
  <Command __id="3975" _type="EclipseCommand" commandID="" date="Sat Mar 19 20:01:14 EDT 2022" starttimestamp="1647716908162" timestamp="17566084" />
  <DocumentChange __id="3969" _type="Delete" date="Sat Mar 19 20:01:13 EDT 2022" docASTNodeCount="819" docActiveCodeLength="4421" docExpressionCount="627" docLength="4555" endLine="24" length="37" offset="577" startLine="23" starttimestamp="1647716908162" timestamp="17564844">
    <text><![CDATA[import net.sf.saxon.expr.Component;
]]></text>
  </DocumentChange>
  <Command __id="3977" _type="PauseCommand" date="Sat Mar 19 20:01:16 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17568419">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2335]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3981" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 20:01:20 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17571873" type="Run" />
  <Command __id="3983" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 20:01:20 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17571873" type="Run" />
  <Command __id="3985" _type="PauseCommand" date="Sat Mar 19 20:01:21 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17573086">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1213]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3984" _type="ConsoleOutput" date="Sat Mar 19 20:01:21 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17573086" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"class java.lang.Error¶java.lang.Error: Unresolved compilation problem: ¶	The method addPropertyChangeListener(AConsoleSceneView) is undefined for the type BoundedBufferView¶¶	at controls.AConsoleSceneView.<init>(AConsoleSceneView.java:36)¶	at factories.AFactory.ConsoleSceneViewFactoryMethod(AFactory.java:24)¶	at graphics.AProducerConsumerScene.initScene(AProducerConsumerScene.java:109)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:564)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2002)¶	at bus.uigen.controller.models.AnInteractiveMethodInvoker.invokeDynamicCommand(AnInteractiveMethodInvoker.java:247)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:564)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:233)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)¶	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)¶	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)¶	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)¶	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)¶	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)¶	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)¶	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)¶	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)¶	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)¶	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:279)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6636)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6401)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263"), Diff(INSERT,"W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener"), Diff(EQUAL,")¶")]]]></diff>
  </Command>
  <Command __id="3986" _type="ShellCommand" date="Sat Mar 19 20:01:21 EDT 2022" starttimestamp="1647716908162" timestamp="17573395" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3988" _type="PauseCommand" date="Sat Mar 19 20:01:22 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17574734">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1339]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3987" _type="ConsoleOutput" date="Sat Mar 19 20:01:22 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17574734" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3989" _type="ConsoleOutput" date="Sat Mar 19 20:01:23 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17574943" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"ZIndex"), Diff(INSERT,"plate"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"nAvatar"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="3990" _type="ConsoleOutput" date="Sat Mar 19 20:01:23 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17575040" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"Table"), Diff(EQUAL,".addPropertyChangeListener("), Diff(DELETE,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use"), Diff(INSERT," should be associated with"), Diff(EQUAL," annotation"), Diff(INSERT,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. "), Diff(INSERT,"Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3991" _type="ConsoleOutput" date="Sat Mar 19 20:01:23 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17575178" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(INSERT," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Tab"), Diff(INSERT,"nAng"), Diff(EQUAL,"le.addPropertyChangeListener("), Diff(INSERT,"graphics.Angle,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with annotation: @ObserverReg"), Diff(INSERT,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeL"), Diff(EQUAL,"iste"), Diff(DELETE,"r"), Diff(INSERT,"n"), Diff(EQUAL,"er("), Diff(INSERT,"graphics.Angle,java.beans."), Diff(EQUAL,"Property"), Diff(DELETE," "), Diff(INSERT,"Change"), Diff(EQUAL,"Listener)¶")]]]></diff>
  </Command>
  <Command __id="3992" _type="ConsoleOutput" date="Sat Mar 19 20:01:23 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17575317" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 

W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visible
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. ¶¶W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visible¶E***Could not find image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3993" _type="ConsoleOutput" date="Sat Mar 19 20:01:23 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17575665" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. ¶¶W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visible¶E***Could not find image file:"), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3994" _type="ConsoleOutput" date="Sat Mar 19 20:01:23 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17575758" type="ConsoleOutput">
    <outputString><![CDATA[W*** The Y property of .chefList.0.chef.head = -49 is < 0. Parts of it may not be visible
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"The Y property of .chefList.0.chef.head = -49 is < 0. Parts of it may not be visible¶E***Could not find image file:"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3996" _type="PauseCommand" date="Sat Mar 19 20:01:25 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17577094">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1336]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3995" _type="ConsoleOutput" date="Sat Mar 19 20:01:25 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17577094" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Producer-Consumer Scene.Patron List.1:.Patron.Head not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"The Y property of .chefList.0.chef.head = -49 is < 0. Parts of it may not be visible¶E***Coul"), Diff(INSERT,"Value: null of Producer-Consumer Scene.Patron List.1:.Patron.Hea"), Diff(EQUAL,"d not "), Diff(DELETE,"f"), Diff(EQUAL,"in"), Diff(DELETE,"d image file:"), Diff(INSERT," range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3997" _type="ConsoleOutput" date="Sat Mar 19 20:01:25 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="17577521" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Producer-Consumer Scene.Chef List.1:.Chef.Head not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Producer-Consumer Scene."), Diff(DELETE,"Patron"), Diff(INSERT,"Chef"), Diff(EQUAL," List.1:."), Diff(DELETE,"Patron"), Diff(INSERT,"Chef"), Diff(EQUAL,".Head not in range.¶")]]]></diff>
  </Command>
  <Command __id="3999" _type="PauseCommand" date="Sat Mar 19 20:01:30 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17582138">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4617]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="3998" _type="ExceptionCommand" date="Sat Mar 19 20:01:30 EDT 2022" starttimestamp="1647716908162" timestamp="17582138" type="Exception">
    <exceptionString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@73294df5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@73294df5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@73294df5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@73294df5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5683bb49]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5683bb49]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5683bb49]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5683bb49]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@e4b96ab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@e4b96ab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@e4b96ab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@e4b96ab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4d062cb3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4d062cb3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4d062cb3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4d062cb3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@74f98603]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@74f98603]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@74f98603]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@74f98603]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3feb3226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3feb3226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@3feb3226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@3feb3226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@6d4715be]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@6d4715be]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@6d4715be]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@6d4715be]
Moving the stove: 

E**: exception invoking imageFileName methods
java.lang.NullPointerException: Cannot invoke "shapes.ImageModel.getImageFileName()" because "imageShape" is null
	at bus.uigen.oadapters.ImageShapeAdapter.recalculateViewObject(ImageShapeAdapter.java:116)
	at bus.uigen.oadapters.ShapeObjectAdapter.recalculateViewObject(ShapeObjectAdapter.java:553)
	at bus.uigen.oadapters.ShapeObjectAdapter.refreshValueButNotAtomic(ShapeObjectAdapter.java:608)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
	at bus.uigen.oadapters.ClassAdapter.refreshChild(ClassAdapter.java:487)
	at bus.uigen.oadapters.ClassAdapter.refreshChildren(ClassAdapter.java:457)
	at bus.uigen.oadapters.ClassAdapter.refreshValueButNotAtomic(ClassAdapter.java:371)
	at bus.uigen.oadapters.ClassAdapter.refreshValue(ClassAdapter.java:357)
	at bus.uigen.oadapters.CompositeAdapter.refreshValue(CompositeAdapter.java:212)
	at bus.uigen.oadapters.VectorAdapter.refreshValue(VectorAdapter.java:2055)
	at bus.uigen.oadapters.ClassAdapter.refresh(ClassAdapter.java:672)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="4001" _type="PauseCommand" date="Sat Mar 19 20:05:48 EDT 2022" range="2m-5m" starttimestamp="1647716908162" timestamp="17840319">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[258181]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4002" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 20:05:50 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17842429" type="Run" />
  <Command __id="4004" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Sat Mar 19 20:05:50 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17842429" type="Run" />
  <Command __id="4006" _type="PauseCommand" date="Sat Mar 19 20:05:51 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17843472">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1043]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4005" _type="ShellCommand" date="Sat Mar 19 20:05:51 EDT 2022" starttimestamp="1647716908162" timestamp="17843472" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4008" _type="PauseCommand" date="Sat Mar 19 20:05:53 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17845391">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1919]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4007" _type="ShellCommand" date="Sat Mar 19 20:05:53 EDT 2022" starttimestamp="1647716908162" timestamp="17845391" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4010" _type="PauseCommand" date="Sat Mar 19 20:05:54 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="17846464">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1073]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4009" _type="ShellCommand" date="Sat Mar 19 20:05:54 EDT 2022" starttimestamp="1647716908162" timestamp="17846464" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4012" _type="PauseCommand" date="Sat Mar 19 20:06:21 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="17873046">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[26582]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4011" _type="ShellCommand" date="Sat Mar 19 20:06:21 EDT 2022" starttimestamp="1647716908162" timestamp="17873046" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4014" _type="PauseCommand" date="Sat Mar 19 20:06:23 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="17875422">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2376]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4013" _type="ShellCommand" date="Sat Mar 19 20:06:23 EDT 2022" starttimestamp="1647716908162" timestamp="17875422" type="ECLIPSE_MINIMIZED" />
  <Command __id="4015" _type="ShellCommand" date="Sat Mar 19 20:06:23 EDT 2022" starttimestamp="1647716908162" timestamp="17875437" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4017" _type="PauseCommand" date="Sun Mar 20 15:54:52 EDT 2022" range=">1h" starttimestamp="1647716908162" timestamp="89184737">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[71309292]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="4016" _type="BalloonCommand" date="Sun Mar 20 15:54:52 EDT 2022" message="*******************************************
Worked 15 minutes(fixed)/21 minutes(context based) from
Sat Mar 19 19:45:23 EDT 2022 to Sat Mar 19 20:06:23 EDT 2022
Edited 1 Projects: 
	ProducersConsumer
Edited 6 Files: 
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ABoundedBufferView.java
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\BoundedBufferView.java
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\controls\APainter.java
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ProducerConsumerScene.java
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\controls\AConsoleSceneView.java
Number of insert: 226
Number of delete: 111
" starttimestamp="1647716908162" timestamp="89184729">
    <fineGrainedWorkTime><![CDATA[21]]></fineGrainedWorkTime>
    <insert><![CDATA[226]]></insert>
    <startTime><![CDATA[1647733523265]]></startTime>
    <endTime><![CDATA[1647734783599]]></endTime>
    <workTime><![CDATA[15]]></workTime>
    <delete><![CDATA[111]]></delete>
  </Command>
  <Command __id="4019" _type="PauseCommand" date="Sun Mar 20 16:53:29 EDT 2022" range="30m-1h" starttimestamp="1647716908162" timestamp="92701548">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[3516818]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4018" _type="ShellCommand" date="Sun Mar 20 16:53:29 EDT 2022" starttimestamp="1647716908162" timestamp="92701547" type="ECLIPSE_MAXIMIZED" />
  <Command __id="4020" _type="ShellCommand" date="Sun Mar 20 16:53:30 EDT 2022" starttimestamp="1647716908162" timestamp="92701943" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4022" _type="PauseCommand" date="Sun Mar 20 16:53:31 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="92703446">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1503]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4021" _type="ShellCommand" date="Sun Mar 20 16:53:31 EDT 2022" starttimestamp="1647716908162" timestamp="92703446" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4023" _type="ShellCommand" date="Sun Mar 20 16:53:31 EDT 2022" starttimestamp="1647716908162" timestamp="92703538" type="ECLIPSE_MINIMIZED" />
  <Command __id="4025" _type="PauseCommand" date="Sun Mar 20 20:29:38 EDT 2022" range=">1h" starttimestamp="1647716908162" timestamp="105670029">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[12966490]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4024" _type="ShellCommand" date="Sun Mar 20 20:29:38 EDT 2022" starttimestamp="1647716908162" timestamp="105670028" type="ECLIPSE_MAXIMIZED" />
  <Command __id="4026" _type="ShellCommand" date="Sun Mar 20 20:29:38 EDT 2022" starttimestamp="1647716908162" timestamp="105670423" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4027" _type="ShellCommand" date="Sun Mar 20 20:29:38 EDT 2022" starttimestamp="1647716908162" timestamp="105670716" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4028" _type="ShellCommand" date="Sun Mar 20 20:29:39 EDT 2022" starttimestamp="1647716908162" timestamp="105670862" type="ECLIPSE_MINIMIZED" />
  <Command __id="4030" _type="PauseCommand" date="Mon Mar 21 07:54:04 EDT 2022" range=">1h" starttimestamp="1647716908162" timestamp="146736768">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[41065905]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4029" _type="ShellCommand" date="Mon Mar 21 07:54:04 EDT 2022" starttimestamp="1647716908162" timestamp="146736767" type="ECLIPSE_MAXIMIZED" />
  <Command __id="4031" _type="ShellCommand" date="Mon Mar 21 07:54:05 EDT 2022" starttimestamp="1647716908162" timestamp="146736931" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4032" _type="ShellCommand" date="Mon Mar 21 07:54:06 EDT 2022" starttimestamp="1647716908162" timestamp="146737912" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4033" _type="ShellCommand" date="Mon Mar 21 07:54:06 EDT 2022" starttimestamp="1647716908162" timestamp="146738019" type="ECLIPSE_MINIMIZED" />
  <Command __id="4035" _type="PauseCommand" date="Tue Mar 22 16:27:17 EDT 2022" range=">1h" starttimestamp="1647716908162" timestamp="263929074">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[117191035]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4034" _type="ShellCommand" date="Tue Mar 22 16:27:17 EDT 2022" starttimestamp="1647716908162" timestamp="263929054" type="ECLIPSE_MAXIMIZED" />
  <Command __id="4036" _type="ShellCommand" date="Tue Mar 22 16:27:17 EDT 2022" starttimestamp="1647716908162" timestamp="263929561" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3976" _type="DiffBasedFileOpenCommand" date="Sat Mar 19 20:01:16 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="17568419">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4038" _type="PauseCommand" date="Tue Mar 22 16:27:31 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="263943728">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14165]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4039" _type="MoveCaretCommand" caretOffset="1886" date="Tue Mar 22 16:27:32 EDT 2022" docOffset="1956" starttimestamp="1647716908162" timestamp="263944511" />
  <Command __id="4037" _type="DiffBasedFileOpenCommand" date="Tue Mar 22 16:27:31 EDT 2022" docASTNodeCount="327" docActiveCodeLength="2065" docExpressionCount="277" docLength="2117" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="263943726">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\controls\AConsoleSceneView.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package controls;¶¶import java.beans.PropertyChangeEvent;¶¶import factories.AFactory;¶import graphics.ProducerConsumerScene;¶¶public class AConsoleSceneView implements ConsoleSceneView {¶¶	public AConsoleSceneView(int chefs, int patrons) {¶		ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶				¶		for (int i=0; i<chefs; i++) {¶			scene.getChefList().get(i).getChef().getHead().addPropertyChangeListener(this);¶			scene.getChefList().get(i).getChef().getTorso().addPropertyChangeListener(this);¶			scene.getChefList().get(i).getChef().getNeck().addPropertyChangeListener(this);¶			scene.getChefList().get(i).getChef().getText().addPropertyChangeListener(this);¶			scene.getChefList().get(i).getChef().getArms().getLeftLine().addPropertyChangeListener(this);¶			scene.getChefList().get(i).getChef().getArms().getRightLine().addPropertyChangeListener(this);¶			scene.getChefList().get(i).getChef().getLegs().getRightLine().addPropertyChangeListener(this);¶			scene.getChefList().get(i).getChef().getLegs().getLeftLine().addPropertyChangeListener(this);¶		}¶		¶		for (int i=0; i<patrons; i++) {¶			scene.getPatronList().get(i).getPatron().getHead().addPropertyChangeListener(this);¶			scene.getPatronList().get(i).getPatron().getTorso().addPropertyChangeListener(this);¶			scene.getPatronList().get(i).getPatron().getNeck().addPropertyChangeListener(this);¶			scene.getPatronList().get(i).getPatron().getText().addPropertyChangeListener(this);¶			scene.getPatronList().get(i).getPatron().getArms().getLeftLine().addPropertyChangeListener(this);¶			scene.getPatronList().get(i).getPatron().getArms().getRightLine().addPropertyChangeListener(this);¶			scene.getPatronList().get(i).getPatron().getLegs().getRightLine().addPropertyChangeListener(this);¶			scene.getPatronList().get(i).getPatron().getLegs().getLeftLine().addPropertyChangeListener(this);¶		}¶		¶		scene.addPropertyChangeListener(this);¶		"), Diff(INSERT,"//"), Diff(EQUAL,"scene.getBuffer().addPropertyChangeListener(this);¶	}¶¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		System.out.println(evt);¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package controls;

import java.beans.PropertyChangeEvent;

import factories.AFactory;
import graphics.ProducerConsumerScene;

public class AConsoleSceneView implements ConsoleSceneView {

	public AConsoleSceneView(int chefs, int patrons) {
		ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();
				
		for (int i=0; i<chefs; i++) {
			scene.getChefList().get(i).getChef().getHead().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getTorso().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getNeck().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getText().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getArms().getLeftLine().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getArms().getRightLine().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getLegs().getRightLine().addPropertyChangeListener(this);
			scene.getChefList().get(i).getChef().getLegs().getLeftLine().addPropertyChangeListener(this);
		}
		
		for (int i=0; i<patrons; i++) {
			scene.getPatronList().get(i).getPatron().getHead().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getTorso().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getNeck().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getText().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getArms().getLeftLine().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getArms().getRightLine().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getLegs().getRightLine().addPropertyChangeListener(this);
			scene.getPatronList().get(i).getPatron().getLegs().getLeftLine().addPropertyChangeListener(this);
		}
		
		scene.addPropertyChangeListener(this);
		//scene.getBuffer().addPropertyChangeListener(this);
	}

	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		System.out.println(evt);
	}
}
]]></snapshot>
  </Command>
  <Command __id="4041" _type="PauseCommand" date="Tue Mar 22 16:27:33 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="263945721">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1209]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4042" _type="MoveCaretCommand" caretOffset="11299" date="Tue Mar 22 16:27:34 EDT 2022" docOffset="11995" starttimestamp="1647716908162" timestamp="263946163" />
  <Command __id="4044" _type="PauseCommand" date="Tue Mar 22 16:29:03 EDT 2022" range="1m-2m" starttimestamp="1647716908162" timestamp="264035396">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[89233]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4043" _type="MoveCaretCommand" caretOffset="457" date="Tue Mar 22 16:29:03 EDT 2022" docOffset="1153" starttimestamp="1647716908162" timestamp="264035396" />
  <Command __id="4045" _type="MoveCaretCommand" caretOffset="457" date="Tue Mar 22 16:29:03 EDT 2022" docOffset="1153" starttimestamp="1647716908162" timestamp="264035396" />
  <Command __id="4047" _type="PauseCommand" date="Tue Mar 22 16:29:07 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="264039708">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4312]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4046" _type="MoveCaretCommand" caretOffset="582" date="Tue Mar 22 16:29:07 EDT 2022" docOffset="1278" starttimestamp="1647716908162" timestamp="264039708" />
  <Command __id="4048" _type="MoveCaretCommand" caretOffset="582" date="Tue Mar 22 16:29:07 EDT 2022" docOffset="1278" starttimestamp="1647716908162" timestamp="264039708" />
  <Command __id="4050" _type="PauseCommand" date="Tue Mar 22 16:29:18 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="264050122">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10414]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4049" _type="MoveCaretCommand" caretOffset="559" date="Tue Mar 22 16:29:18 EDT 2022" docOffset="1255" starttimestamp="1647716908162" timestamp="264050122" />
  <Command __id="4051" _type="MoveCaretCommand" caretOffset="559" date="Tue Mar 22 16:29:18 EDT 2022" docOffset="1255" starttimestamp="1647716908162" timestamp="264050122" />
  <Command __id="4053" _type="PauseCommand" date="Tue Mar 22 16:29:22 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="264054204">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4082]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4052" _type="MoveCaretCommand" caretOffset="582" date="Tue Mar 22 16:29:22 EDT 2022" docOffset="1278" starttimestamp="1647716908162" timestamp="264054204" />
  <Command __id="4054" _type="MoveCaretCommand" caretOffset="582" date="Tue Mar 22 16:29:22 EDT 2022" docOffset="1278" starttimestamp="1647716908162" timestamp="264054204" />
  <Command __id="4056" _type="PauseCommand" date="Tue Mar 22 16:29:42 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="264074260">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[20055]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4055" _type="ShellCommand" date="Tue Mar 22 16:29:42 EDT 2022" starttimestamp="1647716908162" timestamp="264074259" type="ECLIPSE_MINIMIZED" />
  <Command __id="4057" _type="ShellCommand" date="Tue Mar 22 16:29:42 EDT 2022" starttimestamp="1647716908162" timestamp="264074291" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4059" _type="PauseCommand" date="Tue Mar 22 16:32:35 EDT 2022" range="2m-5m" starttimestamp="1647716908162" timestamp="264247835">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[173544]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="4058" _type="BalloonCommand" date="Tue Mar 22 16:32:35 EDT 2022" message="*******************************************
Worked 0 minutes(fixed)/2 minutes(context based) from
Tue Mar 22 16:27:17 EDT 2022 to Tue Mar 22 16:29:42 EDT 2022
Edited 0 Projects: 
Edited 0 Files: 
Number of insert: 0
Number of delete: 0
" starttimestamp="1647716908162" timestamp="264247835">
    <fineGrainedWorkTime><![CDATA[2]]></fineGrainedWorkTime>
    <insert><![CDATA[0]]></insert>
    <startTime><![CDATA[1647980837216]]></startTime>
    <endTime><![CDATA[1647980982453]]></endTime>
    <workTime><![CDATA[0]]></workTime>
    <delete><![CDATA[0]]></delete>
  </Command>
  <Command __id="4061" _type="PauseCommand" date="Tue Mar 22 16:39:37 EDT 2022" range="5m-10m" starttimestamp="1647716908162" timestamp="264669060">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[421225]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4060" _type="ShellCommand" date="Tue Mar 22 16:39:37 EDT 2022" starttimestamp="1647716908162" timestamp="264669060" type="ECLIPSE_MAXIMIZED" />
  <Command __id="4062" _type="ShellCommand" date="Tue Mar 22 16:39:37 EDT 2022" starttimestamp="1647716908162" timestamp="264669633" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4064" _type="PauseCommand" date="Tue Mar 22 16:39:40 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="264672180">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2547]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4063" _type="ShellCommand" date="Tue Mar 22 16:39:40 EDT 2022" starttimestamp="1647716908162" timestamp="264672180" type="ECLIPSE_MINIMIZED" />
  <Command __id="4065" _type="ShellCommand" date="Tue Mar 22 16:39:40 EDT 2022" starttimestamp="1647716908162" timestamp="264672217" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4067" _type="PauseCommand" date="Wed Mar 23 15:44:19 EDT 2022" range=">1h" starttimestamp="1647716908162" timestamp="347750924">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[83078697]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4066" _type="ShellCommand" date="Wed Mar 23 15:44:19 EDT 2022" starttimestamp="1647716908162" timestamp="347750914" type="ECLIPSE_MAXIMIZED" />
  <Command __id="4068" _type="ShellCommand" date="Wed Mar 23 15:44:19 EDT 2022" starttimestamp="1647716908162" timestamp="347751817" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4069" _type="ShellCommand" date="Wed Mar 23 15:44:20 EDT 2022" starttimestamp="1647716908162" timestamp="347751915" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4070" _type="ShellCommand" date="Wed Mar 23 15:44:20 EDT 2022" starttimestamp="1647716908162" timestamp="347751967" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4071" _type="ShellCommand" date="Wed Mar 23 15:44:21 EDT 2022" starttimestamp="1647716908162" timestamp="347752880" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4073" _type="PauseCommand" date="Wed Mar 23 15:44:27 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="347759472">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6592]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4074" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:44:33 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="347764873" type="Run" />
  <Command __id="4076" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:44:33 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="347764875" type="Run" />
  <Command __id="4077" _type="ConsoleOutput" date="Wed Mar 23 15:44:33 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="347765637" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of "), Diff(INSERT,"public void graphics.A"), Diff(EQUAL,"Producer"), Diff(DELETE,"-"), Diff(EQUAL,"Consumer"), Diff(DELETE," "), Diff(EQUAL,"Scene."), Diff(DELETE,"Chef List.1:.Chef.Head not in range."), Diff(INSERT,"addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4078" _type="ShellCommand" date="Wed Mar 23 15:44:34 EDT 2022" starttimestamp="1647716908162" timestamp="347765888" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4079" _type="ConsoleOutput" date="Wed Mar 23 15:44:34 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="347766624" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 

W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. ¶¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron"), Diff(EQUAL,".addPropertyChangeListener("), Diff(INSERT,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with"), Diff(INSERT,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"Property Listener)"), Diff(INSERT,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4080" _type="ConsoleOutput" date="Wed Mar 23 15:44:34 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="347766743" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 

W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visible
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. ¶¶W*** Use annotation @ObserverReg"), Diff(INSERT,"public void graphics.ATable.addPropertyChangeL"), Diff(EQUAL,"iste"), Diff(DELETE,"r"), Diff(INSERT,"n"), Diff(EQUAL,"er("), Diff(DELETE,"interface "), Diff(EQUAL,"java.beans.PropertyChangeListener) "), Diff(DELETE,"for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans."), Diff(INSERT,"should be associated with annotation: @ObserverRegisterer("), Diff(EQUAL,"Property"), Diff(DELETE,"Change"), Diff(INSERT," "), Diff(EQUAL,"Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public "), Diff(DELETE,"abstract "), Diff(EQUAL,"void graphics."), Diff(DELETE,"Patron"), Diff(INSERT,"AnAngle"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Patron"), Diff(INSERT,"Angle"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public "), Diff(INSERT,"abstract "), Diff(EQUAL,"void graphics.An"), Diff(DELETE,"Avatar"), Diff(INSERT,"gle"), Diff(EQUAL,".addPropertyChangeListener(graphics.A"), Diff(DELETE,"vatar"), Diff(INSERT,"ngle"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Head"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"¶W*** The Y property of .patronList.0.patron.head = -49 is < 0. Parts of it may not be visible¶E***Could not find image file:¶")]]]></diff>
  </Command>
  <Command __id="4081" _type="ConsoleOutput" date="Wed Mar 23 15:44:35 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="347766982" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** The Y property of .chefList.0.chef.head = -49 is < 0. Parts of it may not be visible
E***Could not find image file:
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶"), Diff(EQUAL,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.A"), Diff(DELETE,"nAngle"), Diff(INSERT,"Chef"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** "), Diff(DELETE,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. ¶¶W*** The Y property of .patron"), Diff(INSERT,"The Y property of .chef"), Diff(EQUAL,"List.0."), Diff(DELETE,"patron"), Diff(INSERT,"chef"), Diff(EQUAL,".head = -49 is < 0. Parts of it may not be visible¶E***Could not find image file:¶")]]]></diff>
  </Command>
  <Command __id="4082" _type="ConsoleOutput" date="Wed Mar 23 15:44:35 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="347767576" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Producer-Consumer Scene.Patron List.1:.Patron.Head not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** The Y property of .chefList.0.chef.head = -49 is < 0. Parts of it may not be visible¶E***Coul"), Diff(INSERT,"Value: null of Producer-Consumer Scene.Patron List.1:.Patron.Hea"), Diff(EQUAL,"d not "), Diff(DELETE,"f"), Diff(EQUAL,"in"), Diff(DELETE,"d image file:"), Diff(INSERT," range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4083" _type="ConsoleOutput" date="Wed Mar 23 15:44:35 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="347767680" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Producer-Consumer Scene.Chef List.1:.Chef.Head not in range.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Value: null of Producer-Consumer Scene."), Diff(DELETE,"Patron"), Diff(INSERT,"Chef"), Diff(EQUAL," List.1:."), Diff(DELETE,"Patron"), Diff(INSERT,"Chef"), Diff(EQUAL,".Head not in range.¶")]]]></diff>
  </Command>
  <Command __id="4085" _type="PauseCommand" date="Wed Mar 23 15:44:40 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347771862">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4182]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4084" _type="ShellCommand" date="Wed Mar 23 15:44:40 EDT 2022" starttimestamp="1647716908162" timestamp="347771862" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4087" _type="PauseCommand" date="Wed Mar 23 15:44:44 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347776448">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4586]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4086" _type="MoveCaretCommand" caretOffset="1721" date="Wed Mar 23 15:44:44 EDT 2022" docOffset="2417" starttimestamp="1647716908162" timestamp="347776448" />
  <Command __id="4088" _type="MoveCaretCommand" caretOffset="1721" date="Wed Mar 23 15:44:44 EDT 2022" docOffset="2417" starttimestamp="1647716908162" timestamp="347776449" />
  <Command __id="4090" _type="PauseCommand" date="Wed Mar 23 15:44:51 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="347783621">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7172]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4089" _type="MoveCaretCommand" caretOffset="1758" date="Wed Mar 23 15:44:51 EDT 2022" docOffset="2454" starttimestamp="1647716908162" timestamp="347783621" />
  <Command __id="4091" _type="MoveCaretCommand" caretOffset="1758" date="Wed Mar 23 15:44:51 EDT 2022" docOffset="2454" starttimestamp="1647716908162" timestamp="347783621" />
  <Command __id="4040" _type="DiffBasedFileOpenCommand" date="Tue Mar 22 16:27:33 EDT 2022" docASTNodeCount="1941" docActiveCodeLength="10822" docExpressionCount="1496" docLength="12067" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="263945720">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer-Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		patronList.add(0, new APatron());¶		chefList = new ArrayList<AChef>();¶		chefList.add(0, new AChef());¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶//		bufferView = new ABoundedBufferView();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶		¶		patronList.clear();¶		chefList.clear();¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	public BoundedBufferView getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		"), Diff(INSERT,"//"), Diff(EQUAL,"bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
@Label("Producer-Consumer Scene")
public class AProducerConsumerScene implements ProducerConsumerScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AProducerConsumerScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AProducerConsumerScene() {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		patronList.add(0, new APatron());
		chefList = new ArrayList<AChef>();
		chefList.add(0, new AChef());
	}
	
	@Label("Init Scene")
	public void initScene(int patronAmount, int chefAmount) {
//		bufferView = new ABoundedBufferView();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
		
		patronList.clear();
		chefList.clear();
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	
	
	@Override
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	public BoundedBufferView getBuffer() {
		return bufferView;
	}
	
	@Override
	@Label("Chef to the table")
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		//bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="4093" _type="PauseCommand" date="Wed Mar 23 15:44:53 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347784927">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1306]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4094" _type="InsertStringCommand" date="Wed Mar 23 15:44:53 EDT 2022" starttimestamp="1647716908162" timestamp="347784953" timestamp2="347784953">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4095" _type="InsertStringCommand" date="Wed Mar 23 15:44:53 EDT 2022" starttimestamp="1647716908162" timestamp="347784954" timestamp2="347784954">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="4092" _type="Insert" date="Wed Mar 23 15:44:53 EDT 2022" docASTNodeCount="1941" docActiveCodeLength="10826" docExpressionCount="1496" docLength="12071" length="4" offset="2454" starttimestamp="1647716908162" timestamp="347784927">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="4097" _type="PauseCommand" date="Wed Mar 23 15:44:55 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347786936">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1982]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4098" _type="InsertStringCommand" date="Wed Mar 23 15:44:55 EDT 2022" starttimestamp="1647716908162" timestamp="347786953" timestamp2="347786953">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4099" _type="InsertStringCommand" date="Wed Mar 23 15:44:55 EDT 2022" starttimestamp="1647716908162" timestamp="347786953" timestamp2="347786953">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4101" _type="InsertStringCommand" date="Wed Mar 23 15:44:55 EDT 2022" starttimestamp="1647716908162" timestamp="347787037" timestamp2="347787037">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4102" _type="InsertStringCommand" date="Wed Mar 23 15:44:55 EDT 2022" starttimestamp="1647716908162" timestamp="347787038" timestamp2="347787038">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4104" _type="InsertStringCommand" date="Wed Mar 23 15:44:55 EDT 2022" starttimestamp="1647716908162" timestamp="347787175" timestamp2="347787175">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4105" _type="InsertStringCommand" date="Wed Mar 23 15:44:55 EDT 2022" starttimestamp="1647716908162" timestamp="347787175" timestamp2="347787175">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4107" _type="InsertStringCommand" date="Wed Mar 23 15:44:55 EDT 2022" starttimestamp="1647716908162" timestamp="347787327" timestamp2="347787327">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4108" _type="InsertStringCommand" date="Wed Mar 23 15:44:55 EDT 2022" starttimestamp="1647716908162" timestamp="347787328" timestamp2="347787328">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4110" _type="InsertStringCommand" date="Wed Mar 23 15:44:55 EDT 2022" starttimestamp="1647716908162" timestamp="347787399" timestamp2="347787399">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4111" _type="InsertStringCommand" date="Wed Mar 23 15:44:55 EDT 2022" starttimestamp="1647716908162" timestamp="347787399" timestamp2="347787399">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4113" _type="InsertStringCommand" date="Wed Mar 23 15:44:55 EDT 2022" starttimestamp="1647716908162" timestamp="347787496" timestamp2="347787496">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4114" _type="InsertStringCommand" date="Wed Mar 23 15:44:55 EDT 2022" starttimestamp="1647716908162" timestamp="347787497" timestamp2="347787497">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4116" _type="InsertStringCommand" date="Wed Mar 23 15:44:55 EDT 2022" starttimestamp="1647716908162" timestamp="347787716" timestamp2="347787716">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4117" _type="InsertStringCommand" date="Wed Mar 23 15:44:55 EDT 2022" starttimestamp="1647716908162" timestamp="347787717" timestamp2="347787717">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4119" _type="InsertStringCommand" date="Wed Mar 23 15:44:56 EDT 2022" starttimestamp="1647716908162" timestamp="347787896" timestamp2="347787896">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4120" _type="InsertStringCommand" date="Wed Mar 23 15:44:56 EDT 2022" starttimestamp="1647716908162" timestamp="347787897" timestamp2="347787897">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4122" _type="InsertStringCommand" date="Wed Mar 23 15:44:56 EDT 2022" starttimestamp="1647716908162" timestamp="347787973" timestamp2="347787973">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4123" _type="InsertStringCommand" date="Wed Mar 23 15:44:56 EDT 2022" starttimestamp="1647716908162" timestamp="347787975" timestamp2="347787975">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4125" _type="InsertStringCommand" date="Wed Mar 23 15:44:56 EDT 2022" starttimestamp="1647716908162" timestamp="347788078" timestamp2="347788078">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4126" _type="InsertStringCommand" date="Wed Mar 23 15:44:56 EDT 2022" starttimestamp="1647716908162" timestamp="347788080" timestamp2="347788080">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4128" _type="InsertStringCommand" date="Wed Mar 23 15:44:56 EDT 2022" starttimestamp="1647716908162" timestamp="347788163" timestamp2="347788163">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4129" _type="InsertStringCommand" date="Wed Mar 23 15:44:56 EDT 2022" starttimestamp="1647716908162" timestamp="347788165" timestamp2="347788165">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4130" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:44:56 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347788172" />
  <DocumentChange __id="4096" _type="Insert" date="Wed Mar 23 15:44:55 EDT 2022" docASTNodeCount="1943" docActiveCodeLength="10837" docExpressionCount="1498" docLength="12082" length="11" offset="2458" repeat="11" starttimestamp="1647716908162" timestamp="347786936" timestamp2="347788146">
    <text><![CDATA[patronList.]]></text>
  </DocumentChange>
  <Command __id="4132" _type="PauseCommand" date="Wed Mar 23 15:44:59 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347791099">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2927]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="4131" _type="Insert" date="Wed Mar 23 15:44:59 EDT 2022" docASTNodeCount="1945" docActiveCodeLength="10840" docExpressionCount="1498" docLength="12085" length="3" offset="2469" repeat="3" starttimestamp="1647716908162" timestamp="347791099" timestamp2="347791312">
    <text><![CDATA[get]]></text>
  </DocumentChange>
  <Command __id="4135" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:45:00 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347791911" />
  <DocumentChange __id="4136" _type="Replace" date="Wed Mar 23 15:45:00 EDT 2022" docASTNodeCount="1946" docActiveCodeLength="10851" docExpressionCount="1500" docLength="12096" endLine="82" insertionLength="14" int_docASTNodeCount="1943" int_docActiveCodeLength="10837" int_docExpressionCount="1498" int_docLength="12082" length="3" offset="2469" startLine="82" starttimestamp="1647716908162" timestamp="347791924">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[get(AvatarA_Y)]]></insertedText>
  </DocumentChange>
  <Command __id="4137" _type="InsertStringCommand" date="Wed Mar 23 15:45:00 EDT 2022" starttimestamp="1647716908162" timestamp="347792076" timestamp2="347792076">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4138" _type="InsertStringCommand" date="Wed Mar 23 15:45:00 EDT 2022" starttimestamp="1647716908162" timestamp="347792077" timestamp2="347792077">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="4139" _type="Replace" date="Wed Mar 23 15:45:00 EDT 2022" docASTNodeCount="1946" docActiveCodeLength="10843" docExpressionCount="1500" docLength="12088" endLine="82" insertionLength="1" int_docASTNodeCount="1945" int_docActiveCodeLength="10842" int_docExpressionCount="1499" int_docLength="12087" length="9" offset="2473" startLine="82" starttimestamp="1647716908162" timestamp="347792833">
    <deletedText><![CDATA[AvatarA_Y]]></deletedText>
    <insertedText><![CDATA[0]]></insertedText>
  </DocumentChange>
  <Command __id="4140" _type="InsertStringCommand" date="Wed Mar 23 15:45:01 EDT 2022" starttimestamp="1647716908162" timestamp="347792860" timestamp2="347792860">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4141" _type="InsertStringCommand" date="Wed Mar 23 15:45:01 EDT 2022" starttimestamp="1647716908162" timestamp="347792861" timestamp2="347792861">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4142" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:01 EDT 2022" starttimestamp="1647716908162" timestamp="347793200" />
  <Command __id="4143" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:01 EDT 2022" starttimestamp="1647716908162" timestamp="347793200" />
  <Command __id="4145" _type="InsertStringCommand" date="Wed Mar 23 15:45:02 EDT 2022" starttimestamp="1647716908162" timestamp="347793866" timestamp2="347793866">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4146" _type="InsertStringCommand" date="Wed Mar 23 15:45:02 EDT 2022" starttimestamp="1647716908162" timestamp="347793867" timestamp2="347793867">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4147" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:45:02 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347793881" />
  <Command __id="4148" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:45:03 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347794860" />
  <Command __id="4150" _type="InsertStringCommand" date="Wed Mar 23 15:45:03 EDT 2022" starttimestamp="1647716908162" timestamp="347794887" timestamp2="347794887">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4151" _type="InsertStringCommand" date="Wed Mar 23 15:45:03 EDT 2022" starttimestamp="1647716908162" timestamp="347794888" timestamp2="347794888">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4153" _type="InsertStringCommand" date="Wed Mar 23 15:45:03 EDT 2022" starttimestamp="1647716908162" timestamp="347795305" timestamp2="347795305">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4154" _type="InsertStringCommand" date="Wed Mar 23 15:45:03 EDT 2022" starttimestamp="1647716908162" timestamp="347795305" timestamp2="347795305">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4155" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:45:03 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347795307" />
  <Command __id="4159" _type="PauseCommand" date="Wed Mar 23 15:45:06 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347798246">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2939]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4158" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:45:06 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347798246" />
  <Command __id="4161" _type="InsertStringCommand" date="Wed Mar 23 15:45:06 EDT 2022" starttimestamp="1647716908162" timestamp="347798380" timestamp2="347798380">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4162" _type="InsertStringCommand" date="Wed Mar 23 15:45:06 EDT 2022" starttimestamp="1647716908162" timestamp="347798381" timestamp2="347798381">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4163" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:45:07 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347799202" />
  <DocumentChange __id="4144" _type="Insert" date="Wed Mar 23 15:45:02 EDT 2022" docASTNodeCount="1952" docActiveCodeLength="10853" docExpressionCount="1506" docLength="12098" length="10" offset="2475" repeat="5" starttimestamp="1647716908162" timestamp="347793845" timestamp2="347796531">
    <text><![CDATA[.patron.mo]]></text>
  </DocumentChange>
  <DocumentChange __id="4160" _type="Replace" date="Wed Mar 23 15:45:06 EDT 2022" docASTNodeCount="1952" docActiveCodeLength="10875" docExpressionCount="1506" docLength="12120" endLine="82" insertionLength="24" int_docASTNodeCount="1948" int_docActiveCodeLength="10851" int_docExpressionCount="1503" int_docLength="12096" length="2" offset="2483" startLine="82" starttimestamp="1647716908162" timestamp="347798252">
    <deletedText><![CDATA[mo]]></deletedText>
    <insertedText><![CDATA[move(Chef_X, AvatarA_Y);]]></insertedText>
  </DocumentChange>
  <Command __id="4165" _type="PauseCommand" date="Wed Mar 23 15:45:16 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="347808565">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[9363]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="4164" _type="Replace" date="Wed Mar 23 15:45:16 EDT 2022" docASTNodeCount="1952" docActiveCodeLength="10870" docExpressionCount="1506" docLength="12115" endLine="82" insertionLength="1" int_docASTNodeCount="1951" int_docActiveCodeLength="10869" int_docExpressionCount="1505" int_docLength="12114" length="6" offset="2488" startLine="82" starttimestamp="1647716908162" timestamp="347808565">
    <deletedText><![CDATA[Chef_X]]></deletedText>
    <insertedText><![CDATA[p]]></insertedText>
  </DocumentChange>
  <Command __id="4166" _type="InsertStringCommand" date="Wed Mar 23 15:45:16 EDT 2022" starttimestamp="1647716908162" timestamp="347808583" timestamp2="347808583">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4167" _type="InsertStringCommand" date="Wed Mar 23 15:45:16 EDT 2022" starttimestamp="1647716908162" timestamp="347808583" timestamp2="347808583">
    <data><![CDATA[p]]></data>
  </Command>
  <DocumentChange __id="4168" _type="Insert" date="Wed Mar 23 15:45:16 EDT 2022" docASTNodeCount="1952" docActiveCodeLength="10880" docExpressionCount="1506" docLength="12125" length="10" offset="2489" repeat="10" starttimestamp="1647716908162" timestamp="347808636" timestamp2="347810792">
    <text><![CDATA[atronXVlau]]></text>
  </DocumentChange>
  <Command __id="4169" _type="InsertStringCommand" date="Wed Mar 23 15:45:16 EDT 2022" starttimestamp="1647716908162" timestamp="347808645" timestamp2="347808645">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4170" _type="InsertStringCommand" date="Wed Mar 23 15:45:16 EDT 2022" starttimestamp="1647716908162" timestamp="347808645" timestamp2="347808645">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4172" _type="InsertStringCommand" date="Wed Mar 23 15:45:16 EDT 2022" starttimestamp="1647716908162" timestamp="347808764" timestamp2="347808764">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4173" _type="InsertStringCommand" date="Wed Mar 23 15:45:16 EDT 2022" starttimestamp="1647716908162" timestamp="347808764" timestamp2="347808764">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4175" _type="InsertStringCommand" date="Wed Mar 23 15:45:17 EDT 2022" starttimestamp="1647716908162" timestamp="347808915" timestamp2="347808915">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4176" _type="InsertStringCommand" date="Wed Mar 23 15:45:17 EDT 2022" starttimestamp="1647716908162" timestamp="347808915" timestamp2="347808915">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4178" _type="InsertStringCommand" date="Wed Mar 23 15:45:17 EDT 2022" starttimestamp="1647716908162" timestamp="347808998" timestamp2="347808998">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4179" _type="InsertStringCommand" date="Wed Mar 23 15:45:17 EDT 2022" starttimestamp="1647716908162" timestamp="347808998" timestamp2="347808998">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4181" _type="InsertStringCommand" date="Wed Mar 23 15:45:17 EDT 2022" starttimestamp="1647716908162" timestamp="347809093" timestamp2="347809093">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4182" _type="InsertStringCommand" date="Wed Mar 23 15:45:17 EDT 2022" starttimestamp="1647716908162" timestamp="347809093" timestamp2="347809093">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4184" _type="InsertStringCommand" date="Wed Mar 23 15:45:17 EDT 2022" starttimestamp="1647716908162" timestamp="347809580" timestamp2="347809580">
    <data><![CDATA[X]]></data>
  </Command>
  <Command __id="4185" _type="InsertStringCommand" date="Wed Mar 23 15:45:17 EDT 2022" starttimestamp="1647716908162" timestamp="347809580" timestamp2="347809580">
    <data><![CDATA[X]]></data>
  </Command>
  <Command __id="4187" _type="InsertStringCommand" date="Wed Mar 23 15:45:18 EDT 2022" starttimestamp="1647716908162" timestamp="347810140" timestamp2="347810140">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="4188" _type="InsertStringCommand" date="Wed Mar 23 15:45:18 EDT 2022" starttimestamp="1647716908162" timestamp="347810140" timestamp2="347810140">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="4190" _type="InsertStringCommand" date="Wed Mar 23 15:45:18 EDT 2022" starttimestamp="1647716908162" timestamp="347810364" timestamp2="347810364">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4191" _type="InsertStringCommand" date="Wed Mar 23 15:45:18 EDT 2022" starttimestamp="1647716908162" timestamp="347810364" timestamp2="347810364">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4193" _type="InsertStringCommand" date="Wed Mar 23 15:45:18 EDT 2022" starttimestamp="1647716908162" timestamp="347810440" timestamp2="347810440">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4194" _type="InsertStringCommand" date="Wed Mar 23 15:45:18 EDT 2022" starttimestamp="1647716908162" timestamp="347810440" timestamp2="347810440">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4196" _type="InsertStringCommand" date="Wed Mar 23 15:45:18 EDT 2022" starttimestamp="1647716908162" timestamp="347810801" timestamp2="347810801">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4197" _type="InsertStringCommand" date="Wed Mar 23 15:45:18 EDT 2022" starttimestamp="1647716908162" timestamp="347810801" timestamp2="347810801">
    <data><![CDATA[u]]></data>
  </Command>
  <DocumentChange __id="4198" _type="Delete" date="Wed Mar 23 15:45:19 EDT 2022" docASTNodeCount="1952" docActiveCodeLength="10877" docExpressionCount="1506" docLength="12122" endLine="82" length="3" offset="2496" repeat="3" startLine="82" starttimestamp="1647716908162" timestamp="347811106" timestamp2="347811353">
    <text><![CDATA[lau]]></text>
  </DocumentChange>
  <Command __id="4199" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:19 EDT 2022" starttimestamp="1647716908162" timestamp="347811116" />
  <Command __id="4200" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:19 EDT 2022" starttimestamp="1647716908162" timestamp="347811119" />
  <Command __id="4202" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:19 EDT 2022" starttimestamp="1647716908162" timestamp="347811240" />
  <Command __id="4203" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:19 EDT 2022" starttimestamp="1647716908162" timestamp="347811240" />
  <Command __id="4205" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:19 EDT 2022" starttimestamp="1647716908162" timestamp="347811366" />
  <Command __id="4206" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:19 EDT 2022" starttimestamp="1647716908162" timestamp="347811366" />
  <Command __id="4208" _type="InsertStringCommand" date="Wed Mar 23 15:45:19 EDT 2022" starttimestamp="1647716908162" timestamp="347811483" timestamp2="347811483">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4209" _type="InsertStringCommand" date="Wed Mar 23 15:45:19 EDT 2022" starttimestamp="1647716908162" timestamp="347811484" timestamp2="347811484">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4211" _type="InsertStringCommand" date="Wed Mar 23 15:45:19 EDT 2022" starttimestamp="1647716908162" timestamp="347811592" timestamp2="347811592">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4212" _type="InsertStringCommand" date="Wed Mar 23 15:45:19 EDT 2022" starttimestamp="1647716908162" timestamp="347811592" timestamp2="347811592">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4215" _type="PauseCommand" date="Wed Mar 23 15:45:21 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347812979">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1387]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="4214" _type="InsertStringCommand" date="Wed Mar 23 15:45:21 EDT 2022" starttimestamp="1647716908162" timestamp="347812979" timestamp2="347812979">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4216" _type="InsertStringCommand" date="Wed Mar 23 15:45:21 EDT 2022" starttimestamp="1647716908162" timestamp="347812979" timestamp2="347812979">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4218" _type="InsertStringCommand" date="Wed Mar 23 15:45:21 EDT 2022" starttimestamp="1647716908162" timestamp="347813125" timestamp2="347813125">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4219" _type="InsertStringCommand" date="Wed Mar 23 15:45:21 EDT 2022" starttimestamp="1647716908162" timestamp="347813125" timestamp2="347813125">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4221" _type="InsertStringCommand" date="Wed Mar 23 15:45:21 EDT 2022" starttimestamp="1647716908162" timestamp="347813266" timestamp2="347813266">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4222" _type="InsertStringCommand" date="Wed Mar 23 15:45:21 EDT 2022" starttimestamp="1647716908162" timestamp="347813266" timestamp2="347813266">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4224" _type="InsertStringCommand" date="Wed Mar 23 15:45:21 EDT 2022" starttimestamp="1647716908162" timestamp="347813623" timestamp2="347813623">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="4225" _type="InsertStringCommand" date="Wed Mar 23 15:45:21 EDT 2022" starttimestamp="1647716908162" timestamp="347813623" timestamp2="347813623">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="4227" _type="InsertStringCommand" date="Wed Mar 23 15:45:22 EDT 2022" starttimestamp="1647716908162" timestamp="347813955" timestamp2="347813955">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4228" _type="InsertStringCommand" date="Wed Mar 23 15:45:22 EDT 2022" starttimestamp="1647716908162" timestamp="347813955" timestamp2="347813955">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4229" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347814839" />
  <Command __id="4230" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347814839" />
  <Command __id="4231" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815027" />
  <Command __id="4232" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815028" />
  <Command __id="4233" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815461" />
  <Command __id="4234" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815461" />
  <Command __id="4235" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815488" />
  <Command __id="4236" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815488" />
  <Command __id="4237" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815508" />
  <Command __id="4238" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815508" />
  <Command __id="4239" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815530" />
  <Command __id="4240" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815530" />
  <Command __id="4241" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815557" />
  <Command __id="4242" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815557" />
  <Command __id="4243" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815579" />
  <Command __id="4244" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815579" />
  <Command __id="4245" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815605" />
  <Command __id="4246" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815605" />
  <Command __id="4247" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815630" />
  <Command __id="4248" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:23 EDT 2022" starttimestamp="1647716908162" timestamp="347815630" />
  <Command __id="4249" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:24 EDT 2022" starttimestamp="1647716908162" timestamp="347815888" />
  <Command __id="4250" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:24 EDT 2022" starttimestamp="1647716908162" timestamp="347815888" />
  <Command __id="4251" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:24 EDT 2022" starttimestamp="1647716908162" timestamp="347816033" />
  <Command __id="4252" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:24 EDT 2022" starttimestamp="1647716908162" timestamp="347816033" />
  <Command __id="4254" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:24 EDT 2022" starttimestamp="1647716908162" timestamp="347816377" />
  <Command __id="4255" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:24 EDT 2022" starttimestamp="1647716908162" timestamp="347816377" />
  <Command __id="4257" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:24 EDT 2022" starttimestamp="1647716908162" timestamp="347816526" />
  <Command __id="4258" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:24 EDT 2022" starttimestamp="1647716908162" timestamp="347816530" />
  <Command __id="4260" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:24 EDT 2022" starttimestamp="1647716908162" timestamp="347816675" />
  <Command __id="4261" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:24 EDT 2022" starttimestamp="1647716908162" timestamp="347816676" />
  <Command __id="4263" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:24 EDT 2022" starttimestamp="1647716908162" timestamp="347816812" />
  <Command __id="4264" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:24 EDT 2022" starttimestamp="1647716908162" timestamp="347816813" />
  <Command __id="4266" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:25 EDT 2022" starttimestamp="1647716908162" timestamp="347816947" />
  <Command __id="4267" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:25 EDT 2022" starttimestamp="1647716908162" timestamp="347816949" />
  <Command __id="4269" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:25 EDT 2022" starttimestamp="1647716908162" timestamp="347817083" />
  <Command __id="4270" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:25 EDT 2022" starttimestamp="1647716908162" timestamp="347817083" />
  <Command __id="4272" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:25 EDT 2022" starttimestamp="1647716908162" timestamp="347817225" />
  <Command __id="4273" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:25 EDT 2022" starttimestamp="1647716908162" timestamp="347817225" />
  <Command __id="4275" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:25 EDT 2022" starttimestamp="1647716908162" timestamp="347817379" />
  <Command __id="4276" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:25 EDT 2022" starttimestamp="1647716908162" timestamp="347817379" />
  <Command __id="4278" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:25 EDT 2022" starttimestamp="1647716908162" timestamp="347817733" />
  <Command __id="4279" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:25 EDT 2022" starttimestamp="1647716908162" timestamp="347817733" />
  <Command __id="4281" _type="InsertStringCommand" date="Wed Mar 23 15:45:26 EDT 2022" starttimestamp="1647716908162" timestamp="347818013" timestamp2="347818013">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4282" _type="InsertStringCommand" date="Wed Mar 23 15:45:26 EDT 2022" starttimestamp="1647716908162" timestamp="347818013" timestamp2="347818013">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4284" _type="InsertStringCommand" date="Wed Mar 23 15:45:26 EDT 2022" starttimestamp="1647716908162" timestamp="347818190" timestamp2="347818190">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4285" _type="InsertStringCommand" date="Wed Mar 23 15:45:26 EDT 2022" starttimestamp="1647716908162" timestamp="347818190" timestamp2="347818190">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4287" _type="InsertStringCommand" date="Wed Mar 23 15:45:26 EDT 2022" starttimestamp="1647716908162" timestamp="347818340" timestamp2="347818340">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4288" _type="InsertStringCommand" date="Wed Mar 23 15:45:26 EDT 2022" starttimestamp="1647716908162" timestamp="347818340" timestamp2="347818340">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4290" _type="InsertStringCommand" date="Wed Mar 23 15:45:26 EDT 2022" starttimestamp="1647716908162" timestamp="347818481" timestamp2="347818481">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4291" _type="InsertStringCommand" date="Wed Mar 23 15:45:26 EDT 2022" starttimestamp="1647716908162" timestamp="347818481" timestamp2="347818481">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4293" _type="InsertStringCommand" date="Wed Mar 23 15:45:26 EDT 2022" starttimestamp="1647716908162" timestamp="347818579" timestamp2="347818579">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4294" _type="InsertStringCommand" date="Wed Mar 23 15:45:26 EDT 2022" starttimestamp="1647716908162" timestamp="347818579" timestamp2="347818579">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4296" _type="InsertStringCommand" date="Wed Mar 23 15:45:26 EDT 2022" starttimestamp="1647716908162" timestamp="347818651" timestamp2="347818651">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4297" _type="InsertStringCommand" date="Wed Mar 23 15:45:26 EDT 2022" starttimestamp="1647716908162" timestamp="347818652" timestamp2="347818652">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4299" _type="InsertStringCommand" date="Wed Mar 23 15:45:27 EDT 2022" starttimestamp="1647716908162" timestamp="347819427" timestamp2="347819427">
    <data><![CDATA[Y]]></data>
  </Command>
  <Command __id="4300" _type="InsertStringCommand" date="Wed Mar 23 15:45:27 EDT 2022" starttimestamp="1647716908162" timestamp="347819427" timestamp2="347819427">
    <data><![CDATA[Y]]></data>
  </Command>
  <Command __id="4302" _type="InsertStringCommand" date="Wed Mar 23 15:45:27 EDT 2022" starttimestamp="1647716908162" timestamp="347819798" timestamp2="347819798">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="4303" _type="InsertStringCommand" date="Wed Mar 23 15:45:27 EDT 2022" starttimestamp="1647716908162" timestamp="347819798" timestamp2="347819798">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="4305" _type="InsertStringCommand" date="Wed Mar 23 15:45:28 EDT 2022" starttimestamp="1647716908162" timestamp="347820084" timestamp2="347820084">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4306" _type="InsertStringCommand" date="Wed Mar 23 15:45:28 EDT 2022" starttimestamp="1647716908162" timestamp="347820084" timestamp2="347820084">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4308" _type="InsertStringCommand" date="Wed Mar 23 15:45:28 EDT 2022" starttimestamp="1647716908162" timestamp="347820168" timestamp2="347820168">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4309" _type="InsertStringCommand" date="Wed Mar 23 15:45:28 EDT 2022" starttimestamp="1647716908162" timestamp="347820168" timestamp2="347820168">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4311" _type="InsertStringCommand" date="Wed Mar 23 15:45:28 EDT 2022" starttimestamp="1647716908162" timestamp="347820298" timestamp2="347820298">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4312" _type="InsertStringCommand" date="Wed Mar 23 15:45:28 EDT 2022" starttimestamp="1647716908162" timestamp="347820298" timestamp2="347820298">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4314" _type="InsertStringCommand" date="Wed Mar 23 15:45:28 EDT 2022" starttimestamp="1647716908162" timestamp="347820371" timestamp2="347820371">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4315" _type="InsertStringCommand" date="Wed Mar 23 15:45:28 EDT 2022" starttimestamp="1647716908162" timestamp="347820371" timestamp2="347820371">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4317" _type="InsertStringCommand" date="Wed Mar 23 15:45:28 EDT 2022" starttimestamp="1647716908162" timestamp="347820504" timestamp2="347820504">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4318" _type="InsertStringCommand" date="Wed Mar 23 15:45:28 EDT 2022" starttimestamp="1647716908162" timestamp="347820504" timestamp2="347820504">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4320" _type="InsertStringCommand" date="Wed Mar 23 15:45:29 EDT 2022" starttimestamp="1647716908162" timestamp="347820965" timestamp2="347820965">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="4321" _type="InsertStringCommand" date="Wed Mar 23 15:45:29 EDT 2022" starttimestamp="1647716908162" timestamp="347820965" timestamp2="347820965">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="4323" _type="InsertStringCommand" date="Wed Mar 23 15:45:29 EDT 2022" starttimestamp="1647716908162" timestamp="347821221" timestamp2="347821221">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4324" _type="InsertStringCommand" date="Wed Mar 23 15:45:29 EDT 2022" starttimestamp="1647716908162" timestamp="347821221" timestamp2="347821221">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4326" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:29 EDT 2022" starttimestamp="1647716908162" timestamp="347821590" />
  <Command __id="4327" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:29 EDT 2022" starttimestamp="1647716908162" timestamp="347821590" />
  <Command __id="4329" _type="InsertStringCommand" date="Wed Mar 23 15:45:29 EDT 2022" starttimestamp="1647716908162" timestamp="347821761" timestamp2="347821761">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4330" _type="InsertStringCommand" date="Wed Mar 23 15:45:29 EDT 2022" starttimestamp="1647716908162" timestamp="347821761" timestamp2="347821761">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4331" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:30 EDT 2022" starttimestamp="1647716908162" timestamp="347822118" />
  <Command __id="4332" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:30 EDT 2022" starttimestamp="1647716908162" timestamp="347822118" />
  <Command __id="4333" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:30 EDT 2022" starttimestamp="1647716908162" timestamp="347822414" />
  <Command __id="4334" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:30 EDT 2022" starttimestamp="1647716908162" timestamp="347822414" />
  <Command __id="4336" _type="PauseCommand" date="Wed Mar 23 15:45:31 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347823836">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1422]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4335" _type="MoveCaretCommand" caretOffset="1828" date="Wed Mar 23 15:45:31 EDT 2022" docOffset="2524" starttimestamp="1647716908162" timestamp="347823836" />
  <Command __id="4337" _type="MoveCaretCommand" caretOffset="1828" date="Wed Mar 23 15:45:31 EDT 2022" docOffset="2524" starttimestamp="1647716908162" timestamp="347823836" />
  <Command __id="4339" _type="PauseCommand" date="Wed Mar 23 15:45:33 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347825719">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1883]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <DocumentChange __id="4207" _type="Insert" date="Wed Mar 23 15:45:19 EDT 2022" docASTNodeCount="1954" docActiveCodeLength="10885" docExpressionCount="1508" docLength="12130" length="8" offset="2496" repeat="7" starttimestamp="1647716908162" timestamp="347811475" timestamp2="347813942">
    <text><![CDATA[alues[0]]]></text>
  </DocumentChange>
  <DocumentChange __id="4253" _type="Delete" date="Wed Mar 23 15:45:24 EDT 2022" docASTNodeCount="1954" docActiveCodeLength="10876" docExpressionCount="1508" docLength="12121" endLine="82" length="9" offset="2506" repeat="9" startLine="82" starttimestamp="1647716908162" timestamp="347816365" timestamp2="347817722">
    <text><![CDATA[AvatarA_Y]]></text>
  </DocumentChange>
  <DocumentChange __id="4280" _type="Insert" date="Wed Mar 23 15:45:26 EDT 2022" docASTNodeCount="1956" docActiveCodeLength="10892" docExpressionCount="1510" docLength="12137" length="16" offset="2506" repeat="15" starttimestamp="1647716908162" timestamp="347818004" timestamp2="347821209">
    <text><![CDATA[patronYValues[o]]]></text>
  </DocumentChange>
  <DocumentChange __id="4325" _type="Delete" date="Wed Mar 23 15:45:29 EDT 2022" docASTNodeCount="1957" docActiveCodeLength="10891" docExpressionCount="1509" docLength="12136" endLine="82" length="1" offset="2520" startLine="82" starttimestamp="1647716908162" timestamp="347821575">
    <text><![CDATA[o]]></text>
  </DocumentChange>
  <DocumentChange __id="4328" _type="Insert" date="Wed Mar 23 15:45:29 EDT 2022" docASTNodeCount="1956" docActiveCodeLength="10892" docExpressionCount="1510" docLength="12137" length="1" offset="2520" starttimestamp="1647716908162" timestamp="347821748">
    <text><![CDATA[0]]></text>
  </DocumentChange>
  <Command __id="4338" _type="MoveCaretCommand" caretOffset="1899" date="Wed Mar 23 15:45:33 EDT 2022" docOffset="2595" starttimestamp="1647716908162" timestamp="347825719" />
  <Command __id="4340" _type="MoveCaretCommand" caretOffset="1899" date="Wed Mar 23 15:45:33 EDT 2022" docOffset="2595" starttimestamp="1647716908162" timestamp="347825719" />
  <DocumentChange __id="4341" _type="Insert" date="Wed Mar 23 15:45:34 EDT 2022" docASTNodeCount="1960" docActiveCodeLength="10908" docExpressionCount="1513" docLength="12153" length="16" offset="2595" repeat="13" starttimestamp="1647716908162" timestamp="347826074" timestamp2="347829524">
    <text><![CDATA[
		chefList.get]]></text>
  </DocumentChange>
  <Command __id="4342" _type="InsertStringCommand" date="Wed Mar 23 15:45:34 EDT 2022" starttimestamp="1647716908162" timestamp="347826091" timestamp2="347826091">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4343" _type="InsertStringCommand" date="Wed Mar 23 15:45:34 EDT 2022" starttimestamp="1647716908162" timestamp="347826091" timestamp2="347826091">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4345" _type="InsertStringCommand" date="Wed Mar 23 15:45:34 EDT 2022" starttimestamp="1647716908162" timestamp="347826692" timestamp2="347826692">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4346" _type="InsertStringCommand" date="Wed Mar 23 15:45:34 EDT 2022" starttimestamp="1647716908162" timestamp="347826692" timestamp2="347826692">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4348" _type="InsertStringCommand" date="Wed Mar 23 15:45:34 EDT 2022" starttimestamp="1647716908162" timestamp="347826790" timestamp2="347826790">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4349" _type="InsertStringCommand" date="Wed Mar 23 15:45:34 EDT 2022" starttimestamp="1647716908162" timestamp="347826790" timestamp2="347826790">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4351" _type="InsertStringCommand" date="Wed Mar 23 15:45:35 EDT 2022" starttimestamp="1647716908162" timestamp="347826893" timestamp2="347826893">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4352" _type="InsertStringCommand" date="Wed Mar 23 15:45:35 EDT 2022" starttimestamp="1647716908162" timestamp="347826893" timestamp2="347826893">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4354" _type="InsertStringCommand" date="Wed Mar 23 15:45:35 EDT 2022" starttimestamp="1647716908162" timestamp="347827014" timestamp2="347827014">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4355" _type="InsertStringCommand" date="Wed Mar 23 15:45:35 EDT 2022" starttimestamp="1647716908162" timestamp="347827014" timestamp2="347827014">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4358" _type="PauseCommand" date="Wed Mar 23 15:45:36 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347828315">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1301]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="4357" _type="InsertStringCommand" date="Wed Mar 23 15:45:36 EDT 2022" starttimestamp="1647716908162" timestamp="347828315" timestamp2="347828315">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4359" _type="InsertStringCommand" date="Wed Mar 23 15:45:36 EDT 2022" starttimestamp="1647716908162" timestamp="347828315" timestamp2="347828315">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4361" _type="InsertStringCommand" date="Wed Mar 23 15:45:36 EDT 2022" starttimestamp="1647716908162" timestamp="347828470" timestamp2="347828470">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4362" _type="InsertStringCommand" date="Wed Mar 23 15:45:36 EDT 2022" starttimestamp="1647716908162" timestamp="347828470" timestamp2="347828470">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4364" _type="InsertStringCommand" date="Wed Mar 23 15:45:36 EDT 2022" starttimestamp="1647716908162" timestamp="347828526" timestamp2="347828526">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4365" _type="InsertStringCommand" date="Wed Mar 23 15:45:36 EDT 2022" starttimestamp="1647716908162" timestamp="347828527" timestamp2="347828527">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4367" _type="InsertStringCommand" date="Wed Mar 23 15:45:36 EDT 2022" starttimestamp="1647716908162" timestamp="347828638" timestamp2="347828638">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4368" _type="InsertStringCommand" date="Wed Mar 23 15:45:36 EDT 2022" starttimestamp="1647716908162" timestamp="347828638" timestamp2="347828638">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4370" _type="InsertStringCommand" date="Wed Mar 23 15:45:36 EDT 2022" starttimestamp="1647716908162" timestamp="347828795" timestamp2="347828795">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4371" _type="InsertStringCommand" date="Wed Mar 23 15:45:36 EDT 2022" starttimestamp="1647716908162" timestamp="347828796" timestamp2="347828796">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4372" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:45:36 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347828800" />
  <Command __id="4377" _type="PauseCommand" date="Wed Mar 23 15:45:38 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347829890">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1090]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4376" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:45:38 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347829890" />
  <Command __id="4379" _type="InsertStringCommand" date="Wed Mar 23 15:45:38 EDT 2022" starttimestamp="1647716908162" timestamp="347830320" timestamp2="347830320">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4380" _type="InsertStringCommand" date="Wed Mar 23 15:45:38 EDT 2022" starttimestamp="1647716908162" timestamp="347830322" timestamp2="347830322">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="4378" _type="Replace" date="Wed Mar 23 15:45:38 EDT 2022" docASTNodeCount="1961" docActiveCodeLength="10919" docExpressionCount="1514" docLength="12164" endLine="85" insertionLength="14" int_docASTNodeCount="1958" int_docActiveCodeLength="10905" int_docExpressionCount="1511" int_docLength="12150" length="3" offset="2608" startLine="85" starttimestamp="1647716908162" timestamp="347829900">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[get(AvatarA_Y)]]></insertedText>
  </DocumentChange>
  <Command __id="4382" _type="PauseCommand" date="Wed Mar 23 15:45:41 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347833012">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2690]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="4381" _type="Replace" date="Wed Mar 23 15:45:41 EDT 2022" docASTNodeCount="1961" docActiveCodeLength="10911" docExpressionCount="1514" docLength="12156" endLine="85" insertionLength="1" int_docASTNodeCount="1960" int_docActiveCodeLength="10910" int_docExpressionCount="1513" int_docLength="12155" length="9" offset="2612" startLine="85" starttimestamp="1647716908162" timestamp="347833012">
    <deletedText><![CDATA[AvatarA_Y]]></deletedText>
    <insertedText><![CDATA[0]]></insertedText>
  </DocumentChange>
  <Command __id="4383" _type="InsertStringCommand" date="Wed Mar 23 15:45:41 EDT 2022" starttimestamp="1647716908162" timestamp="347833095" timestamp2="347833095">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4384" _type="InsertStringCommand" date="Wed Mar 23 15:45:41 EDT 2022" starttimestamp="1647716908162" timestamp="347833095" timestamp2="347833095">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4385" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:41 EDT 2022" starttimestamp="1647716908162" timestamp="347833478" />
  <Command __id="4386" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:41 EDT 2022" starttimestamp="1647716908162" timestamp="347833478" />
  <Command __id="4388" _type="InsertStringCommand" date="Wed Mar 23 15:45:41 EDT 2022" starttimestamp="1647716908162" timestamp="347833817" timestamp2="347833817">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4389" _type="InsertStringCommand" date="Wed Mar 23 15:45:41 EDT 2022" starttimestamp="1647716908162" timestamp="347833818" timestamp2="347833818">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4390" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:45:42 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347833840" />
  <Command __id="4392" _type="PauseCommand" date="Wed Mar 23 15:45:44 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347836201">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2361]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4391" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:45:44 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347836201" />
  <Command __id="4394" _type="InsertStringCommand" date="Wed Mar 23 15:45:44 EDT 2022" starttimestamp="1647716908162" timestamp="347836231" timestamp2="347836231">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4395" _type="InsertStringCommand" date="Wed Mar 23 15:45:44 EDT 2022" starttimestamp="1647716908162" timestamp="347836231" timestamp2="347836231">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4397" _type="InsertStringCommand" date="Wed Mar 23 15:45:44 EDT 2022" starttimestamp="1647716908162" timestamp="347836670" timestamp2="347836670">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4398" _type="InsertStringCommand" date="Wed Mar 23 15:45:44 EDT 2022" starttimestamp="1647716908162" timestamp="347836670" timestamp2="347836670">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4399" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:45:44 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347836680" />
  <DocumentChange __id="4387" _type="Insert" date="Wed Mar 23 15:45:41 EDT 2022" docASTNodeCount="1961" docActiveCodeLength="10912" docExpressionCount="1514" docLength="12157" length="1" offset="2614" starttimestamp="1647716908162" timestamp="347833792">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="4393" _type="Insert" date="Wed Mar 23 15:45:44 EDT 2022" docASTNodeCount="1965" docActiveCodeLength="10917" docExpressionCount="1518" docLength="12162" length="5" offset="2615" repeat="2" starttimestamp="1647716908162" timestamp="347836218" timestamp2="347836615">
    <text><![CDATA[chef.]]></text>
  </DocumentChange>
  <Command __id="4401" _type="PauseCommand" date="Wed Mar 23 15:45:47 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347839408">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2728]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="4400" _type="Insert" date="Wed Mar 23 15:45:47 EDT 2022" docASTNodeCount="1967" docActiveCodeLength="10919" docExpressionCount="1520" docLength="12164" length="2" offset="2620" repeat="2" starttimestamp="1647716908162" timestamp="347839408" timestamp2="347839587">
    <text><![CDATA[mo]]></text>
  </DocumentChange>
  <Command __id="4403" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:45:48 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347839972" />
  <Command __id="4405" _type="InsertStringCommand" date="Wed Mar 23 15:45:48 EDT 2022" starttimestamp="1647716908162" timestamp="347840286" timestamp2="347840286">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4406" _type="InsertStringCommand" date="Wed Mar 23 15:45:48 EDT 2022" starttimestamp="1647716908162" timestamp="347840286" timestamp2="347840286">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="4404" _type="Replace" date="Wed Mar 23 15:45:48 EDT 2022" docASTNodeCount="1967" docActiveCodeLength="10941" docExpressionCount="1520" docLength="12186" endLine="85" insertionLength="24" int_docASTNodeCount="1965" int_docActiveCodeLength="10917" int_docExpressionCount="1518" int_docLength="12162" length="2" offset="2620" startLine="85" starttimestamp="1647716908162" timestamp="347839981">
    <deletedText><![CDATA[mo]]></deletedText>
    <insertedText><![CDATA[move(Chef_X, AvatarA_Y);]]></insertedText>
  </DocumentChange>
  <Command __id="4408" _type="PauseCommand" date="Wed Mar 23 15:45:51 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347842897">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2611]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="4407" _type="Replace" date="Wed Mar 23 15:45:51 EDT 2022" docASTNodeCount="1967" docActiveCodeLength="10936" docExpressionCount="1520" docLength="12181" endLine="85" insertionLength="1" int_docASTNodeCount="1966" int_docActiveCodeLength="10935" int_docExpressionCount="1519" int_docLength="12180" length="6" offset="2625" startLine="85" starttimestamp="1647716908162" timestamp="347842897">
    <deletedText><![CDATA[Chef_X]]></deletedText>
    <insertedText><![CDATA[c]]></insertedText>
  </DocumentChange>
  <Command __id="4409" _type="InsertStringCommand" date="Wed Mar 23 15:45:51 EDT 2022" starttimestamp="1647716908162" timestamp="347842984" timestamp2="347842984">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4410" _type="InsertStringCommand" date="Wed Mar 23 15:45:51 EDT 2022" starttimestamp="1647716908162" timestamp="347842984" timestamp2="347842984">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4412" _type="InsertStringCommand" date="Wed Mar 23 15:45:51 EDT 2022" starttimestamp="1647716908162" timestamp="347843051" timestamp2="347843051">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4413" _type="InsertStringCommand" date="Wed Mar 23 15:45:51 EDT 2022" starttimestamp="1647716908162" timestamp="347843052" timestamp2="347843052">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4415" _type="InsertStringCommand" date="Wed Mar 23 15:45:51 EDT 2022" starttimestamp="1647716908162" timestamp="347843115" timestamp2="347843115">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4416" _type="InsertStringCommand" date="Wed Mar 23 15:45:51 EDT 2022" starttimestamp="1647716908162" timestamp="347843115" timestamp2="347843115">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4418" _type="InsertStringCommand" date="Wed Mar 23 15:45:51 EDT 2022" starttimestamp="1647716908162" timestamp="347843186" timestamp2="347843186">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4419" _type="InsertStringCommand" date="Wed Mar 23 15:45:51 EDT 2022" starttimestamp="1647716908162" timestamp="347843186" timestamp2="347843186">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4421" _type="InsertStringCommand" date="Wed Mar 23 15:45:51 EDT 2022" starttimestamp="1647716908162" timestamp="347843693" timestamp2="347843693">
    <data><![CDATA[X]]></data>
  </Command>
  <Command __id="4422" _type="InsertStringCommand" date="Wed Mar 23 15:45:51 EDT 2022" starttimestamp="1647716908162" timestamp="347843693" timestamp2="347843693">
    <data><![CDATA[X]]></data>
  </Command>
  <Command __id="4424" _type="InsertStringCommand" date="Wed Mar 23 15:45:52 EDT 2022" starttimestamp="1647716908162" timestamp="347844072" timestamp2="347844072">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4425" _type="InsertStringCommand" date="Wed Mar 23 15:45:52 EDT 2022" starttimestamp="1647716908162" timestamp="347844072" timestamp2="347844072">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4427" _type="InsertStringCommand" date="Wed Mar 23 15:45:52 EDT 2022" starttimestamp="1647716908162" timestamp="347844316" timestamp2="347844316">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4428" _type="InsertStringCommand" date="Wed Mar 23 15:45:52 EDT 2022" starttimestamp="1647716908162" timestamp="347844317" timestamp2="347844317">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4430" _type="InsertStringCommand" date="Wed Mar 23 15:45:52 EDT 2022" starttimestamp="1647716908162" timestamp="347844387" timestamp2="347844387">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4431" _type="InsertStringCommand" date="Wed Mar 23 15:45:52 EDT 2022" starttimestamp="1647716908162" timestamp="347844387" timestamp2="347844387">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4433" _type="InsertStringCommand" date="Wed Mar 23 15:45:52 EDT 2022" starttimestamp="1647716908162" timestamp="347844466" timestamp2="347844466">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4434" _type="InsertStringCommand" date="Wed Mar 23 15:45:52 EDT 2022" starttimestamp="1647716908162" timestamp="347844466" timestamp2="347844466">
    <data><![CDATA[t]]></data>
  </Command>
  <DocumentChange __id="4411" _type="Insert" date="Wed Mar 23 15:45:51 EDT 2022" docASTNodeCount="1967" docActiveCodeLength="10944" docExpressionCount="1520" docLength="12189" length="8" offset="2626" repeat="8" starttimestamp="1647716908162" timestamp="347843015" timestamp2="347844432">
    <text><![CDATA[hefXList]]></text>
  </DocumentChange>
  <Command __id="4436" _type="PauseCommand" date="Wed Mar 23 15:45:53 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347845635">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1169]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="4435" _type="Delete" date="Wed Mar 23 15:45:53 EDT 2022" docASTNodeCount="1967" docActiveCodeLength="10940" docExpressionCount="1520" docLength="12185" endLine="85" length="4" offset="2630" repeat="4" startLine="85" starttimestamp="1647716908162" timestamp="347845635" timestamp2="347846224">
    <text><![CDATA[List]]></text>
  </DocumentChange>
  <Command __id="4437" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:53 EDT 2022" starttimestamp="1647716908162" timestamp="347845699" />
  <Command __id="4438" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:53 EDT 2022" starttimestamp="1647716908162" timestamp="347845700" />
  <Command __id="4440" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:53 EDT 2022" starttimestamp="1647716908162" timestamp="347845806" />
  <Command __id="4441" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:53 EDT 2022" starttimestamp="1647716908162" timestamp="347845806" />
  <Command __id="4443" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:54 EDT 2022" starttimestamp="1647716908162" timestamp="347846108" />
  <Command __id="4444" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:54 EDT 2022" starttimestamp="1647716908162" timestamp="347846108" />
  <Command __id="4446" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:54 EDT 2022" starttimestamp="1647716908162" timestamp="347846284" />
  <Command __id="4447" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:54 EDT 2022" starttimestamp="1647716908162" timestamp="347846284" />
  <Command __id="4449" _type="InsertStringCommand" date="Wed Mar 23 15:45:54 EDT 2022" starttimestamp="1647716908162" timestamp="347846718" timestamp2="347846718">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="4450" _type="InsertStringCommand" date="Wed Mar 23 15:45:54 EDT 2022" starttimestamp="1647716908162" timestamp="347846718" timestamp2="347846718">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="4452" _type="InsertStringCommand" date="Wed Mar 23 15:45:55 EDT 2022" starttimestamp="1647716908162" timestamp="347846895" timestamp2="347846895">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4453" _type="InsertStringCommand" date="Wed Mar 23 15:45:55 EDT 2022" starttimestamp="1647716908162" timestamp="347846895" timestamp2="347846895">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4455" _type="InsertStringCommand" date="Wed Mar 23 15:45:55 EDT 2022" starttimestamp="1647716908162" timestamp="347846994" timestamp2="347846994">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4456" _type="InsertStringCommand" date="Wed Mar 23 15:45:55 EDT 2022" starttimestamp="1647716908162" timestamp="347846994" timestamp2="347846994">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4458" _type="InsertStringCommand" date="Wed Mar 23 15:45:55 EDT 2022" starttimestamp="1647716908162" timestamp="347847109" timestamp2="347847109">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4459" _type="InsertStringCommand" date="Wed Mar 23 15:45:55 EDT 2022" starttimestamp="1647716908162" timestamp="347847109" timestamp2="347847109">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4461" _type="InsertStringCommand" date="Wed Mar 23 15:45:55 EDT 2022" starttimestamp="1647716908162" timestamp="347847201" timestamp2="347847201">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4462" _type="InsertStringCommand" date="Wed Mar 23 15:45:55 EDT 2022" starttimestamp="1647716908162" timestamp="347847201" timestamp2="347847201">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4464" _type="InsertStringCommand" date="Wed Mar 23 15:45:55 EDT 2022" starttimestamp="1647716908162" timestamp="347847336" timestamp2="347847336">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4465" _type="InsertStringCommand" date="Wed Mar 23 15:45:55 EDT 2022" starttimestamp="1647716908162" timestamp="347847336" timestamp2="347847336">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4467" _type="InsertStringCommand" date="Wed Mar 23 15:45:55 EDT 2022" starttimestamp="1647716908162" timestamp="347847657" timestamp2="347847657">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="4468" _type="InsertStringCommand" date="Wed Mar 23 15:45:55 EDT 2022" starttimestamp="1647716908162" timestamp="347847657" timestamp2="347847657">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="4470" _type="InsertStringCommand" date="Wed Mar 23 15:45:56 EDT 2022" starttimestamp="1647716908162" timestamp="347848494" timestamp2="347848494">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4471" _type="InsertStringCommand" date="Wed Mar 23 15:45:56 EDT 2022" starttimestamp="1647716908162" timestamp="347848494" timestamp2="347848494">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4472" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:56 EDT 2022" starttimestamp="1647716908162" timestamp="347848731" />
  <Command __id="4473" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:56 EDT 2022" starttimestamp="1647716908162" timestamp="347848731" />
  <Command __id="4474" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849183" />
  <Command __id="4475" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849183" />
  <Command __id="4476" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849202" />
  <Command __id="4477" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849202" />
  <Command __id="4478" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849218" />
  <Command __id="4479" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849218" />
  <Command __id="4480" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849234" />
  <Command __id="4481" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849236" />
  <Command __id="4482" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849286" />
  <Command __id="4483" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849286" />
  <Command __id="4484" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849303" />
  <Command __id="4485" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849303" />
  <Command __id="4486" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849318" />
  <Command __id="4487" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849318" />
  <Command __id="4488" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849333" />
  <Command __id="4489" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849333" />
  <Command __id="4490" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849727" />
  <Command __id="4491" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:57 EDT 2022" starttimestamp="1647716908162" timestamp="347849727" />
  <Command __id="4492" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:58 EDT 2022" starttimestamp="1647716908162" timestamp="347849896" />
  <Command __id="4493" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:58 EDT 2022" starttimestamp="1647716908162" timestamp="347849897" />
  <Command __id="4494" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:58 EDT 2022" starttimestamp="1647716908162" timestamp="347850056" />
  <Command __id="4495" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:45:58 EDT 2022" starttimestamp="1647716908162" timestamp="347850056" />
  <Command __id="4497" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:58 EDT 2022" starttimestamp="1647716908162" timestamp="347850460" />
  <Command __id="4498" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:58 EDT 2022" starttimestamp="1647716908162" timestamp="347850461" />
  <Command __id="4500" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347850911" />
  <Command __id="4501" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347850911" />
  <Command __id="4503" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347850968" />
  <Command __id="4504" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347850968" />
  <Command __id="4506" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347851016" />
  <Command __id="4507" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347851017" />
  <Command __id="4509" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347851144" />
  <Command __id="4510" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347851145" />
  <Command __id="4512" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347851303" />
  <Command __id="4513" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347851303" />
  <Command __id="4515" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347851472" />
  <Command __id="4516" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347851472" />
  <Command __id="4518" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347851631" />
  <Command __id="4519" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347851631" />
  <Command __id="4521" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347851787" />
  <Command __id="4522" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:45:59 EDT 2022" starttimestamp="1647716908162" timestamp="347851787" />
  <Command __id="4524" _type="InsertStringCommand" date="Wed Mar 23 15:46:00 EDT 2022" starttimestamp="1647716908162" timestamp="347852367" timestamp2="347852367">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4525" _type="InsertStringCommand" date="Wed Mar 23 15:46:00 EDT 2022" starttimestamp="1647716908162" timestamp="347852367" timestamp2="347852367">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4527" _type="InsertStringCommand" date="Wed Mar 23 15:46:00 EDT 2022" starttimestamp="1647716908162" timestamp="347852523" timestamp2="347852523">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4528" _type="InsertStringCommand" date="Wed Mar 23 15:46:00 EDT 2022" starttimestamp="1647716908162" timestamp="347852524" timestamp2="347852524">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4530" _type="InsertStringCommand" date="Wed Mar 23 15:46:00 EDT 2022" starttimestamp="1647716908162" timestamp="347852692" timestamp2="347852692">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4531" _type="InsertStringCommand" date="Wed Mar 23 15:46:00 EDT 2022" starttimestamp="1647716908162" timestamp="347852692" timestamp2="347852692">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4533" _type="InsertStringCommand" date="Wed Mar 23 15:46:00 EDT 2022" starttimestamp="1647716908162" timestamp="347852828" timestamp2="347852828">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4534" _type="InsertStringCommand" date="Wed Mar 23 15:46:00 EDT 2022" starttimestamp="1647716908162" timestamp="347852828" timestamp2="347852828">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4536" _type="InsertStringCommand" date="Wed Mar 23 15:46:01 EDT 2022" starttimestamp="1647716908162" timestamp="347852910" timestamp2="347852910">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4537" _type="InsertStringCommand" date="Wed Mar 23 15:46:01 EDT 2022" starttimestamp="1647716908162" timestamp="347852910" timestamp2="347852910">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4539" _type="InsertStringCommand" date="Wed Mar 23 15:46:01 EDT 2022" starttimestamp="1647716908162" timestamp="347853047" timestamp2="347853047">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4540" _type="InsertStringCommand" date="Wed Mar 23 15:46:01 EDT 2022" starttimestamp="1647716908162" timestamp="347853047" timestamp2="347853047">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4542" _type="InsertStringCommand" date="Wed Mar 23 15:46:01 EDT 2022" starttimestamp="1647716908162" timestamp="347853493" timestamp2="347853493">
    <data><![CDATA[Y]]></data>
  </Command>
  <Command __id="4543" _type="InsertStringCommand" date="Wed Mar 23 15:46:01 EDT 2022" starttimestamp="1647716908162" timestamp="347853493" timestamp2="347853493">
    <data><![CDATA[Y]]></data>
  </Command>
  <Command __id="4545" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:01 EDT 2022" starttimestamp="1647716908162" timestamp="347853801" />
  <Command __id="4546" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:01 EDT 2022" starttimestamp="1647716908162" timestamp="347853803" />
  <Command __id="4548" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:02 EDT 2022" starttimestamp="1647716908162" timestamp="347853945" />
  <Command __id="4549" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:02 EDT 2022" starttimestamp="1647716908162" timestamp="347853945" />
  <Command __id="4551" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:02 EDT 2022" starttimestamp="1647716908162" timestamp="347854086" />
  <Command __id="4552" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:02 EDT 2022" starttimestamp="1647716908162" timestamp="347854087" />
  <Command __id="4554" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:02 EDT 2022" starttimestamp="1647716908162" timestamp="347854230" />
  <Command __id="4555" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:02 EDT 2022" starttimestamp="1647716908162" timestamp="347854230" />
  <Command __id="4557" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:02 EDT 2022" starttimestamp="1647716908162" timestamp="347854379" />
  <Command __id="4558" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:02 EDT 2022" starttimestamp="1647716908162" timestamp="347854379" />
  <Command __id="4560" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:02 EDT 2022" starttimestamp="1647716908162" timestamp="347854532" />
  <Command __id="4561" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:02 EDT 2022" starttimestamp="1647716908162" timestamp="347854532" />
  <Command __id="4563" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:02 EDT 2022" starttimestamp="1647716908162" timestamp="347854680" />
  <Command __id="4564" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:02 EDT 2022" starttimestamp="1647716908162" timestamp="347854681" />
  <Command __id="4566" _type="InsertStringCommand" date="Wed Mar 23 15:46:03 EDT 2022" starttimestamp="1647716908162" timestamp="347854901" timestamp2="347854901">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4567" _type="InsertStringCommand" date="Wed Mar 23 15:46:03 EDT 2022" starttimestamp="1647716908162" timestamp="347854902" timestamp2="347854902">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4569" _type="InsertStringCommand" date="Wed Mar 23 15:46:03 EDT 2022" starttimestamp="1647716908162" timestamp="347855073" timestamp2="347855073">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4570" _type="InsertStringCommand" date="Wed Mar 23 15:46:03 EDT 2022" starttimestamp="1647716908162" timestamp="347855073" timestamp2="347855073">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4572" _type="InsertStringCommand" date="Wed Mar 23 15:46:03 EDT 2022" starttimestamp="1647716908162" timestamp="347855163" timestamp2="347855163">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4573" _type="InsertStringCommand" date="Wed Mar 23 15:46:03 EDT 2022" starttimestamp="1647716908162" timestamp="347855163" timestamp2="347855163">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4575" _type="InsertStringCommand" date="Wed Mar 23 15:46:03 EDT 2022" starttimestamp="1647716908162" timestamp="347855247" timestamp2="347855247">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4576" _type="InsertStringCommand" date="Wed Mar 23 15:46:03 EDT 2022" starttimestamp="1647716908162" timestamp="347855247" timestamp2="347855247">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4578" _type="InsertStringCommand" date="Wed Mar 23 15:46:03 EDT 2022" starttimestamp="1647716908162" timestamp="347855501" timestamp2="347855501">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4579" _type="InsertStringCommand" date="Wed Mar 23 15:46:03 EDT 2022" starttimestamp="1647716908162" timestamp="347855501" timestamp2="347855501">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4581" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:03 EDT 2022" starttimestamp="1647716908162" timestamp="347855819" />
  <Command __id="4582" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:03 EDT 2022" starttimestamp="1647716908162" timestamp="347855821" />
  <Command __id="4584" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:04 EDT 2022" starttimestamp="1647716908162" timestamp="347855946" />
  <Command __id="4585" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:04 EDT 2022" starttimestamp="1647716908162" timestamp="347855947" />
  <Command __id="4587" _type="InsertStringCommand" date="Wed Mar 23 15:46:04 EDT 2022" starttimestamp="1647716908162" timestamp="347856088" timestamp2="347856088">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4588" _type="InsertStringCommand" date="Wed Mar 23 15:46:04 EDT 2022" starttimestamp="1647716908162" timestamp="347856089" timestamp2="347856089">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4590" _type="InsertStringCommand" date="Wed Mar 23 15:46:04 EDT 2022" starttimestamp="1647716908162" timestamp="347856402" timestamp2="347856402">
    <data><![CDATA[X]]></data>
  </Command>
  <Command __id="4591" _type="InsertStringCommand" date="Wed Mar 23 15:46:04 EDT 2022" starttimestamp="1647716908162" timestamp="347856402" timestamp2="347856402">
    <data><![CDATA[X]]></data>
  </Command>
  <Command __id="4593" _type="InsertStringCommand" date="Wed Mar 23 15:46:05 EDT 2022" starttimestamp="1647716908162" timestamp="347857027" timestamp2="347857027">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="4594" _type="InsertStringCommand" date="Wed Mar 23 15:46:05 EDT 2022" starttimestamp="1647716908162" timestamp="347857027" timestamp2="347857027">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="4596" _type="InsertStringCommand" date="Wed Mar 23 15:46:05 EDT 2022" starttimestamp="1647716908162" timestamp="347857322" timestamp2="347857322">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4597" _type="InsertStringCommand" date="Wed Mar 23 15:46:05 EDT 2022" starttimestamp="1647716908162" timestamp="347857322" timestamp2="347857322">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4599" _type="InsertStringCommand" date="Wed Mar 23 15:46:05 EDT 2022" starttimestamp="1647716908162" timestamp="347857387" timestamp2="347857387">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4600" _type="InsertStringCommand" date="Wed Mar 23 15:46:05 EDT 2022" starttimestamp="1647716908162" timestamp="347857387" timestamp2="347857387">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="4602" _type="InsertStringCommand" date="Wed Mar 23 15:46:05 EDT 2022" starttimestamp="1647716908162" timestamp="347857574" timestamp2="347857574">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4603" _type="InsertStringCommand" date="Wed Mar 23 15:46:05 EDT 2022" starttimestamp="1647716908162" timestamp="347857574" timestamp2="347857574">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="4605" _type="InsertStringCommand" date="Wed Mar 23 15:46:05 EDT 2022" starttimestamp="1647716908162" timestamp="347857693" timestamp2="347857693">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4606" _type="InsertStringCommand" date="Wed Mar 23 15:46:05 EDT 2022" starttimestamp="1647716908162" timestamp="347857693" timestamp2="347857693">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4608" _type="InsertStringCommand" date="Wed Mar 23 15:46:05 EDT 2022" starttimestamp="1647716908162" timestamp="347857827" timestamp2="347857827">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4609" _type="InsertStringCommand" date="Wed Mar 23 15:46:05 EDT 2022" starttimestamp="1647716908162" timestamp="347857827" timestamp2="347857827">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4611" _type="InsertStringCommand" date="Wed Mar 23 15:46:06 EDT 2022" starttimestamp="1647716908162" timestamp="347858073" timestamp2="347858073">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="4612" _type="InsertStringCommand" date="Wed Mar 23 15:46:06 EDT 2022" starttimestamp="1647716908162" timestamp="347858073" timestamp2="347858073">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="4614" _type="InsertStringCommand" date="Wed Mar 23 15:46:06 EDT 2022" starttimestamp="1647716908162" timestamp="347858766" timestamp2="347858766">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4615" _type="InsertStringCommand" date="Wed Mar 23 15:46:06 EDT 2022" starttimestamp="1647716908162" timestamp="347858766" timestamp2="347858766">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4616" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:07 EDT 2022" starttimestamp="1647716908162" timestamp="347859086" />
  <Command __id="4617" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:07 EDT 2022" starttimestamp="1647716908162" timestamp="347859087" />
  <Command __id="4618" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:07 EDT 2022" starttimestamp="1647716908162" timestamp="347859336" />
  <Command __id="4619" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:07 EDT 2022" starttimestamp="1647716908162" timestamp="347859336" />
  <Command __id="4620" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:07 EDT 2022" starttimestamp="1647716908162" timestamp="347859575" />
  <Command __id="4621" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:07 EDT 2022" starttimestamp="1647716908162" timestamp="347859575" />
  <Command __id="4623" _type="PauseCommand" date="Wed Mar 23 15:46:09 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347860938">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1363]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4622" _type="MoveCaretCommand" caretOffset="1926" date="Wed Mar 23 15:46:09 EDT 2022" docOffset="2622" starttimestamp="1647716908162" timestamp="347860938" />
  <Command __id="4624" _type="MoveCaretCommand" caretOffset="1926" date="Wed Mar 23 15:46:09 EDT 2022" docOffset="2622" starttimestamp="1647716908162" timestamp="347860939" />
  <Command __id="4626" _type="PauseCommand" date="Wed Mar 23 15:46:10 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347861970">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1031]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4625" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Mar 23 15:46:10 EDT 2022" starttimestamp="1647716908162" timestamp="347861970" />
  <Command __id="4627" _type="EclipseCommand" commandID="" date="Wed Mar 23 15:46:10 EDT 2022" starttimestamp="1647716908162" timestamp="347862043" />
  <Command __id="4628" _type="EclipseCommand" commandID="" date="Wed Mar 23 15:46:10 EDT 2022" starttimestamp="1647716908162" timestamp="347862118" />
  <Command __id="4630" _type="PauseCommand" date="Wed Mar 23 15:46:11 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347863795">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1677]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4629" _type="MoveCaretCommand" caretOffset="1899" date="Wed Mar 23 15:46:11 EDT 2022" docOffset="2595" starttimestamp="1647716908162" timestamp="347863795" />
  <Command __id="4631" _type="MoveCaretCommand" caretOffset="1899" date="Wed Mar 23 15:46:11 EDT 2022" docOffset="2595" starttimestamp="1647716908162" timestamp="347863795" />
  <Command __id="4633" _type="PauseCommand" date="Wed Mar 23 15:46:14 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347866157">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2361]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4632" _type="MoveCaretCommand" caretOffset="1828" date="Wed Mar 23 15:46:14 EDT 2022" docOffset="2524" starttimestamp="1647716908162" timestamp="347866156" />
  <Command __id="4634" _type="MoveCaretCommand" caretOffset="1828" date="Wed Mar 23 15:46:14 EDT 2022" docOffset="2524" starttimestamp="1647716908162" timestamp="347866157" />
  <Command __id="4636" _type="InsertStringCommand" date="Wed Mar 23 15:46:14 EDT 2022" starttimestamp="1647716908162" timestamp="347866516" timestamp2="347866516">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4637" _type="InsertStringCommand" date="Wed Mar 23 15:46:14 EDT 2022" starttimestamp="1647716908162" timestamp="347866516" timestamp2="347866516">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4639" _type="InsertStringCommand" date="Wed Mar 23 15:46:15 EDT 2022" starttimestamp="1647716908162" timestamp="347867039" timestamp2="347867039">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4640" _type="InsertStringCommand" date="Wed Mar 23 15:46:15 EDT 2022" starttimestamp="1647716908162" timestamp="347867039" timestamp2="347867039">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="4642" _type="InsertStringCommand" date="Wed Mar 23 15:46:15 EDT 2022" starttimestamp="1647716908162" timestamp="347867178" timestamp2="347867178">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4643" _type="InsertStringCommand" date="Wed Mar 23 15:46:15 EDT 2022" starttimestamp="1647716908162" timestamp="347867178" timestamp2="347867178">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4645" _type="InsertStringCommand" date="Wed Mar 23 15:46:15 EDT 2022" starttimestamp="1647716908162" timestamp="347867302" timestamp2="347867302">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4646" _type="InsertStringCommand" date="Wed Mar 23 15:46:15 EDT 2022" starttimestamp="1647716908162" timestamp="347867303" timestamp2="347867303">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4648" _type="InsertStringCommand" date="Wed Mar 23 15:46:15 EDT 2022" starttimestamp="1647716908162" timestamp="347867444" timestamp2="347867444">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4649" _type="InsertStringCommand" date="Wed Mar 23 15:46:15 EDT 2022" starttimestamp="1647716908162" timestamp="347867445" timestamp2="347867445">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="4651" _type="InsertStringCommand" date="Wed Mar 23 15:46:15 EDT 2022" starttimestamp="1647716908162" timestamp="347867536" timestamp2="347867536">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4652" _type="InsertStringCommand" date="Wed Mar 23 15:46:15 EDT 2022" starttimestamp="1647716908162" timestamp="347867536" timestamp2="347867536">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="4654" _type="InsertStringCommand" date="Wed Mar 23 15:46:15 EDT 2022" starttimestamp="1647716908162" timestamp="347867620" timestamp2="347867620">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4655" _type="InsertStringCommand" date="Wed Mar 23 15:46:15 EDT 2022" starttimestamp="1647716908162" timestamp="347867621" timestamp2="347867621">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="4657" _type="InsertStringCommand" date="Wed Mar 23 15:46:16 EDT 2022" starttimestamp="1647716908162" timestamp="347867883" timestamp2="347867883">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4658" _type="InsertStringCommand" date="Wed Mar 23 15:46:16 EDT 2022" starttimestamp="1647716908162" timestamp="347867883" timestamp2="347867883">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4660" _type="InsertStringCommand" date="Wed Mar 23 15:46:16 EDT 2022" starttimestamp="1647716908162" timestamp="347868076" timestamp2="347868076">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4661" _type="InsertStringCommand" date="Wed Mar 23 15:46:16 EDT 2022" starttimestamp="1647716908162" timestamp="347868077" timestamp2="347868077">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4663" _type="InsertStringCommand" date="Wed Mar 23 15:46:16 EDT 2022" starttimestamp="1647716908162" timestamp="347868135" timestamp2="347868135">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4664" _type="InsertStringCommand" date="Wed Mar 23 15:46:16 EDT 2022" starttimestamp="1647716908162" timestamp="347868136" timestamp2="347868136">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4666" _type="InsertStringCommand" date="Wed Mar 23 15:46:16 EDT 2022" starttimestamp="1647716908162" timestamp="347868234" timestamp2="347868234">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4667" _type="InsertStringCommand" date="Wed Mar 23 15:46:16 EDT 2022" starttimestamp="1647716908162" timestamp="347868234" timestamp2="347868234">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4669" _type="InsertStringCommand" date="Wed Mar 23 15:46:16 EDT 2022" starttimestamp="1647716908162" timestamp="347868401" timestamp2="347868401">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4670" _type="InsertStringCommand" date="Wed Mar 23 15:46:16 EDT 2022" starttimestamp="1647716908162" timestamp="347868402" timestamp2="347868402">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4671" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:46:16 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347868404" />
  <Command __id="4676" _type="PauseCommand" date="Wed Mar 23 15:46:17 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347869484">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1080]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4675" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:46:17 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347869484" />
  <Command __id="4678" _type="InsertStringCommand" date="Wed Mar 23 15:46:17 EDT 2022" starttimestamp="1647716908162" timestamp="347869796" timestamp2="347869796">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4679" _type="InsertStringCommand" date="Wed Mar 23 15:46:17 EDT 2022" starttimestamp="1647716908162" timestamp="347869796" timestamp2="347869796">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4681" _type="InsertStringCommand" date="Wed Mar 23 15:46:18 EDT 2022" starttimestamp="1647716908162" timestamp="347869914" timestamp2="347869914">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4682" _type="InsertStringCommand" date="Wed Mar 23 15:46:18 EDT 2022" starttimestamp="1647716908162" timestamp="347869914" timestamp2="347869914">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4683" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:18 EDT 2022" starttimestamp="1647716908162" timestamp="347870483" />
  <Command __id="4684" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:18 EDT 2022" starttimestamp="1647716908162" timestamp="347870483" />
  <Command __id="4686" _type="InsertStringCommand" date="Wed Mar 23 15:46:19 EDT 2022" starttimestamp="1647716908162" timestamp="347871323" timestamp2="347871323">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4687" _type="InsertStringCommand" date="Wed Mar 23 15:46:19 EDT 2022" starttimestamp="1647716908162" timestamp="347871324" timestamp2="347871324">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4688" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:46:19 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347871363" />
  <Command __id="4691" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:46:20 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347872154" />
  <Command __id="4693" _type="InsertStringCommand" date="Wed Mar 23 15:46:20 EDT 2022" starttimestamp="1647716908162" timestamp="347872193" timestamp2="347872193">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4694" _type="InsertStringCommand" date="Wed Mar 23 15:46:20 EDT 2022" starttimestamp="1647716908162" timestamp="347872193" timestamp2="347872193">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4696" _type="InsertStringCommand" date="Wed Mar 23 15:46:21 EDT 2022" starttimestamp="1647716908162" timestamp="347873210" timestamp2="347873210">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4697" _type="InsertStringCommand" date="Wed Mar 23 15:46:21 EDT 2022" starttimestamp="1647716908162" timestamp="347873210" timestamp2="347873210">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4698" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:46:21 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347873215" />
  <Command __id="4703" _type="PauseCommand" date="Wed Mar 23 15:46:25 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347877544">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[4329]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4702" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:46:25 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347877544" />
  <Command __id="4705" _type="InsertStringCommand" date="Wed Mar 23 15:46:25 EDT 2022" starttimestamp="1647716908162" timestamp="347877686" timestamp2="347877686">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4706" _type="InsertStringCommand" date="Wed Mar 23 15:46:25 EDT 2022" starttimestamp="1647716908162" timestamp="347877686" timestamp2="347877686">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4707" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:46:26 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347878656" />
  <DocumentChange __id="4448" _type="Insert" date="Wed Mar 23 15:45:54 EDT 2022" docASTNodeCount="1969" docActiveCodeLength="10949" docExpressionCount="1522" docLength="12194" length="9" offset="2630" repeat="8" starttimestamp="1647716908162" timestamp="347846686" timestamp2="347848446">
    <text><![CDATA[Values[0]]]></text>
  </DocumentChange>
  <DocumentChange __id="4496" _type="Delete" date="Wed Mar 23 15:45:58 EDT 2022" docASTNodeCount="1969" docActiveCodeLength="10940" docExpressionCount="1522" docLength="12185" endLine="85" length="9" offset="2641" repeat="9" startLine="85" starttimestamp="1647716908162" timestamp="347850404" timestamp2="347851740">
    <text><![CDATA[AvatarA_Y]]></text>
  </DocumentChange>
  <DocumentChange __id="4523" _type="Insert" date="Wed Mar 23 15:46:00 EDT 2022" docASTNodeCount="1969" docActiveCodeLength="10947" docExpressionCount="1522" docLength="12192" length="7" offset="2641" repeat="7" starttimestamp="1647716908162" timestamp="347852346" timestamp2="347853457">
    <text><![CDATA[patronY]]></text>
  </DocumentChange>
  <DocumentChange __id="4544" _type="Delete" date="Wed Mar 23 15:46:01 EDT 2022" docASTNodeCount="1969" docActiveCodeLength="10940" docExpressionCount="1522" docLength="12185" endLine="85" length="7" offset="2641" repeat="7" startLine="85" starttimestamp="1647716908162" timestamp="347853751" timestamp2="347854620">
    <text><![CDATA[patronY]]></text>
  </DocumentChange>
  <DocumentChange __id="4565" _type="Insert" date="Wed Mar 23 15:46:03 EDT 2022" docASTNodeCount="1969" docActiveCodeLength="10945" docExpressionCount="1522" docLength="12190" length="5" offset="2641" repeat="5" starttimestamp="1647716908162" timestamp="347854862" timestamp2="347855465">
    <text><![CDATA[cheef]]></text>
  </DocumentChange>
  <DocumentChange __id="4580" _type="Delete" date="Wed Mar 23 15:46:03 EDT 2022" docASTNodeCount="1969" docActiveCodeLength="10943" docExpressionCount="1522" docLength="12188" endLine="85" length="2" offset="2644" repeat="2" startLine="85" starttimestamp="1647716908162" timestamp="347855773" timestamp2="347855901">
    <text><![CDATA[ef]]></text>
  </DocumentChange>
  <DocumentChange __id="4586" _type="Insert" date="Wed Mar 23 15:46:04 EDT 2022" docASTNodeCount="1971" docActiveCodeLength="10954" docExpressionCount="1524" docLength="12199" length="11" offset="2644" repeat="10" starttimestamp="1647716908162" timestamp="347856039" timestamp2="347858742">
    <text><![CDATA[fXValues[0]]]></text>
  </DocumentChange>
  <DocumentChange __id="4635" _type="Insert" date="Wed Mar 23 15:46:14 EDT 2022" docASTNodeCount="1975" docActiveCodeLength="10972" docExpressionCount="1526" docLength="12217" length="18" offset="2524" repeat="15" starttimestamp="1647716908162" timestamp="347866471" timestamp2="347868768">
    <text><![CDATA[
		patronList.get]]></text>
  </DocumentChange>
  <DocumentChange __id="4677" _type="Replace" date="Wed Mar 23 15:46:17 EDT 2022" docASTNodeCount="1976" docActiveCodeLength="10983" docExpressionCount="1528" docLength="12228" endLine="83" insertionLength="14" int_docASTNodeCount="1973" int_docActiveCodeLength="10969" int_docExpressionCount="1526" int_docLength="12214" length="3" offset="2539" startLine="83" starttimestamp="1647716908162" timestamp="347869495">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[get(AvatarA_Y)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4680" _type="Replace" date="Wed Mar 23 15:46:17 EDT 2022" docASTNodeCount="1976" docActiveCodeLength="10975" docExpressionCount="1528" docLength="12220" endLine="83" insertionLength="1" int_docASTNodeCount="1975" int_docActiveCodeLength="10974" int_docExpressionCount="1527" int_docLength="12219" length="9" offset="2543" startLine="83" starttimestamp="1647716908162" timestamp="347869831">
    <deletedText><![CDATA[AvatarA_Y]]></deletedText>
    <insertedText><![CDATA[0]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4685" _type="Insert" date="Wed Mar 23 15:46:19 EDT 2022" docASTNodeCount="1980" docActiveCodeLength="10978" docExpressionCount="1532" docLength="12223" length="3" offset="2545" repeat="3" starttimestamp="1647716908162" timestamp="347871291" timestamp2="347871853">
    <text><![CDATA[.pa]]></text>
  </DocumentChange>
  <DocumentChange __id="4692" _type="Replace" date="Wed Mar 23 15:46:20 EDT 2022" docASTNodeCount="1980" docActiveCodeLength="10982" docExpressionCount="1532" docLength="12227" endLine="83" insertionLength="6" int_docASTNodeCount="1976" int_docActiveCodeLength="10976" int_docExpressionCount="1529" int_docLength="12221" length="2" offset="2546" startLine="83" starttimestamp="1647716908162" timestamp="347872162">
    <deletedText><![CDATA[pa]]></deletedText>
    <insertedText><![CDATA[patron]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4695" _type="Insert" date="Wed Mar 23 15:46:21 EDT 2022" docASTNodeCount="1982" docActiveCodeLength="10986" docExpressionCount="1534" docLength="12231" length="4" offset="2552" repeat="4" starttimestamp="1647716908162" timestamp="347873166" timestamp2="347873540">
    <text><![CDATA[.set]]></text>
  </DocumentChange>
  <DocumentChange __id="4704" _type="Replace" date="Wed Mar 23 15:46:25 EDT 2022" docASTNodeCount="1981" docActiveCodeLength="10997" docExpressionCount="1533" docLength="12242" endLine="83" insertionLength="14" int_docASTNodeCount="1978" int_docActiveCodeLength="10983" int_docExpressionCount="1531" int_docLength="12228" length="3" offset="2553" startLine="83" starttimestamp="1647716908162" timestamp="347877553">
    <deletedText><![CDATA[set]]></deletedText>
    <insertedText><![CDATA[setHead(null);]]></insertedText>
  </DocumentChange>
  <Command __id="4709" _type="PauseCommand" date="Wed Mar 23 15:46:31 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347883164">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[4508]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="4708" _type="Replace" date="Wed Mar 23 15:46:31 EDT 2022" docASTNodeCount="1981" docActiveCodeLength="10994" docExpressionCount="1533" docLength="12239" endLine="83" insertionLength="1" int_docASTNodeCount="1980" int_docActiveCodeLength="10993" int_docExpressionCount="1532" int_docLength="12238" length="4" offset="2561" startLine="83" starttimestamp="1647716908162" timestamp="347883164">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[c]]></insertedText>
  </DocumentChange>
  <Command __id="4710" _type="InsertStringCommand" date="Wed Mar 23 15:46:31 EDT 2022" starttimestamp="1647716908162" timestamp="347883260" timestamp2="347883260">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4711" _type="InsertStringCommand" date="Wed Mar 23 15:46:31 EDT 2022" starttimestamp="1647716908162" timestamp="347883260" timestamp2="347883260">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4713" _type="InsertStringCommand" date="Wed Mar 23 15:46:31 EDT 2022" starttimestamp="1647716908162" timestamp="347883336" timestamp2="347883336">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4714" _type="InsertStringCommand" date="Wed Mar 23 15:46:31 EDT 2022" starttimestamp="1647716908162" timestamp="347883337" timestamp2="347883337">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4716" _type="InsertStringCommand" date="Wed Mar 23 15:46:31 EDT 2022" starttimestamp="1647716908162" timestamp="347883583" timestamp2="347883583">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4717" _type="InsertStringCommand" date="Wed Mar 23 15:46:31 EDT 2022" starttimestamp="1647716908162" timestamp="347883584" timestamp2="347883584">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4719" _type="InsertStringCommand" date="Wed Mar 23 15:46:31 EDT 2022" starttimestamp="1647716908162" timestamp="347883628" timestamp2="347883628">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4720" _type="InsertStringCommand" date="Wed Mar 23 15:46:31 EDT 2022" starttimestamp="1647716908162" timestamp="347883628" timestamp2="347883628">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4722" _type="InsertStringCommand" date="Wed Mar 23 15:46:31 EDT 2022" starttimestamp="1647716908162" timestamp="347883804" timestamp2="347883804">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="4723" _type="InsertStringCommand" date="Wed Mar 23 15:46:31 EDT 2022" starttimestamp="1647716908162" timestamp="347883804" timestamp2="347883804">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="4725" _type="InsertStringCommand" date="Wed Mar 23 15:46:32 EDT 2022" starttimestamp="1647716908162" timestamp="347883953" timestamp2="347883953">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4726" _type="InsertStringCommand" date="Wed Mar 23 15:46:32 EDT 2022" starttimestamp="1647716908162" timestamp="347883954" timestamp2="347883954">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4728" _type="InsertStringCommand" date="Wed Mar 23 15:46:32 EDT 2022" starttimestamp="1647716908162" timestamp="347884056" timestamp2="347884056">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4729" _type="InsertStringCommand" date="Wed Mar 23 15:46:32 EDT 2022" starttimestamp="1647716908162" timestamp="347884056" timestamp2="347884056">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4731" _type="InsertStringCommand" date="Wed Mar 23 15:46:32 EDT 2022" starttimestamp="1647716908162" timestamp="347884138" timestamp2="347884138">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4732" _type="InsertStringCommand" date="Wed Mar 23 15:46:32 EDT 2022" starttimestamp="1647716908162" timestamp="347884139" timestamp2="347884139">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4734" _type="InsertStringCommand" date="Wed Mar 23 15:46:32 EDT 2022" starttimestamp="1647716908162" timestamp="347884251" timestamp2="347884251">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4735" _type="InsertStringCommand" date="Wed Mar 23 15:46:32 EDT 2022" starttimestamp="1647716908162" timestamp="347884251" timestamp2="347884251">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4737" _type="InsertStringCommand" date="Wed Mar 23 15:46:32 EDT 2022" starttimestamp="1647716908162" timestamp="347884398" timestamp2="347884398">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4738" _type="InsertStringCommand" date="Wed Mar 23 15:46:32 EDT 2022" starttimestamp="1647716908162" timestamp="347884399" timestamp2="347884399">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4740" _type="InsertStringCommand" date="Wed Mar 23 15:46:33 EDT 2022" starttimestamp="1647716908162" timestamp="347884967" timestamp2="347884967">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="4741" _type="InsertStringCommand" date="Wed Mar 23 15:46:33 EDT 2022" starttimestamp="1647716908162" timestamp="347884968" timestamp2="347884968">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="4743" _type="InsertStringCommand" date="Wed Mar 23 15:46:33 EDT 2022" starttimestamp="1647716908162" timestamp="347885199" timestamp2="347885199">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4744" _type="InsertStringCommand" date="Wed Mar 23 15:46:33 EDT 2022" starttimestamp="1647716908162" timestamp="347885199" timestamp2="347885199">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4745" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:33 EDT 2022" starttimestamp="1647716908162" timestamp="347885614" />
  <Command __id="4746" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:33 EDT 2022" starttimestamp="1647716908162" timestamp="347885615" />
  <Command __id="4747" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:33 EDT 2022" starttimestamp="1647716908162" timestamp="347885791" />
  <Command __id="4748" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:33 EDT 2022" starttimestamp="1647716908162" timestamp="347885793" />
  <Command __id="4750" _type="PauseCommand" date="Wed Mar 23 15:46:40 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="347892678">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6885]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4749" _type="SelectTextCommand" caretOffset="1857" date="Wed Mar 23 15:46:40 EDT 2022" end="1880" start="1857" starttimestamp="1647716908162" timestamp="347892678" />
  <Command __id="4751" _type="SelectTextCommand" caretOffset="1857" date="Wed Mar 23 15:46:40 EDT 2022" end="1880" start="1857" starttimestamp="1647716908162" timestamp="347892679" />
  <Command __id="4753" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:41 EDT 2022" starttimestamp="1647716908162" timestamp="347893435" />
  <Command __id="4754" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:41 EDT 2022" starttimestamp="1647716908162" timestamp="347893435" />
  <Command __id="4756" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:41 EDT 2022" starttimestamp="1647716908162" timestamp="347893477" />
  <Command __id="4757" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:46:41 EDT 2022" starttimestamp="1647716908162" timestamp="347893477" />
  <Command __id="4759" _type="InsertStringCommand" date="Wed Mar 23 15:46:41 EDT 2022" starttimestamp="1647716908162" timestamp="347893809" timestamp2="347893809">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4760" _type="InsertStringCommand" date="Wed Mar 23 15:46:41 EDT 2022" starttimestamp="1647716908162" timestamp="347893809" timestamp2="347893809">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4761" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:46:41 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347893817" />
  <Command __id="4766" _type="PauseCommand" date="Wed Mar 23 15:46:46 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347897939">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[4122]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4765" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:46:46 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347897939" />
  <Command __id="4768" _type="InsertStringCommand" date="Wed Mar 23 15:46:46 EDT 2022" starttimestamp="1647716908162" timestamp="347897982" timestamp2="347897982">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4769" _type="InsertStringCommand" date="Wed Mar 23 15:46:46 EDT 2022" starttimestamp="1647716908162" timestamp="347897982" timestamp2="347897982">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4771" _type="InsertStringCommand" date="Wed Mar 23 15:46:46 EDT 2022" starttimestamp="1647716908162" timestamp="347898334" timestamp2="347898334">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4772" _type="InsertStringCommand" date="Wed Mar 23 15:46:46 EDT 2022" starttimestamp="1647716908162" timestamp="347898335" timestamp2="347898335">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4773" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:46:46 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347898342" />
  <Command __id="4777" _type="PauseCommand" date="Wed Mar 23 15:46:48 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347900086">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1744]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4776" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:46:48 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347900086" />
  <Command __id="4779" _type="InsertStringCommand" date="Wed Mar 23 15:46:48 EDT 2022" starttimestamp="1647716908162" timestamp="347900270" timestamp2="347900270">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4780" _type="InsertStringCommand" date="Wed Mar 23 15:46:48 EDT 2022" starttimestamp="1647716908162" timestamp="347900270" timestamp2="347900270">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4782" _type="PauseCommand" date="Wed Mar 23 15:46:49 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347901467">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1197]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4781" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:46:49 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347901467" />
  <DocumentChange __id="4712" _type="Insert" date="Wed Mar 23 15:46:31 EDT 2022" docASTNodeCount="1983" docActiveCodeLength="11006" docExpressionCount="1535" docLength="12251" length="12" offset="2562" repeat="11" starttimestamp="1647716908162" timestamp="347883296" timestamp2="347885155">
    <text><![CDATA[hefImages[0]]]></text>
  </DocumentChange>
  <DocumentChange __id="4752" _type="Delete" date="Wed Mar 23 15:46:41 EDT 2022" docASTNodeCount="1980" docActiveCodeLength="10982" docExpressionCount="1532" docLength="12227" endLine="83" length="24" offset="2552" repeat="2" startLine="83" starttimestamp="1647716908162" timestamp="347893399" timestamp2="347893453">
    <text><![CDATA[.setHead(chefImages[0]);]]></text>
  </DocumentChange>
  <DocumentChange __id="4758" _type="Insert" date="Wed Mar 23 15:46:41 EDT 2022" docASTNodeCount="1982" docActiveCodeLength="10986" docExpressionCount="1534" docLength="12231" length="4" offset="2552" repeat="4" starttimestamp="1647716908162" timestamp="347893753" timestamp2="347894948">
    <text><![CDATA[.get]]></text>
  </DocumentChange>
  <DocumentChange __id="4767" _type="Replace" date="Wed Mar 23 15:46:46 EDT 2022" docASTNodeCount="1980" docActiveCodeLength="10992" docExpressionCount="1532" docLength="12237" endLine="83" insertionLength="9" int_docASTNodeCount="1978" int_docActiveCodeLength="10983" int_docExpressionCount="1531" int_docLength="12228" length="3" offset="2553" startLine="83" starttimestamp="1647716908162" timestamp="347897951">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4770" _type="Insert" date="Wed Mar 23 15:46:46 EDT 2022" docASTNodeCount="1984" docActiveCodeLength="10995" docExpressionCount="1536" docLength="12240" length="3" offset="2562" repeat="3" starttimestamp="1647716908162" timestamp="347898265" timestamp2="347898810">
    <text><![CDATA[.se]]></text>
  </DocumentChange>
  <DocumentChange __id="4778" _type="Replace" date="Wed Mar 23 15:46:48 EDT 2022" docASTNodeCount="1983" docActiveCodeLength="11016" docExpressionCount="1535" docLength="12261" endLine="83" insertionLength="23" int_docASTNodeCount="1980" int_docActiveCodeLength="10993" int_docExpressionCount="1533" int_docLength="12238" length="2" offset="2563" startLine="83" starttimestamp="1647716908162" timestamp="347900094">
    <deletedText><![CDATA[se]]></deletedText>
    <insertedText><![CDATA[setImageFileName(null);]]></insertedText>
  </DocumentChange>
  <Command __id="4784" _type="PauseCommand" date="Wed Mar 23 15:46:53 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347904930">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3463]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="4783" _type="Replace" date="Wed Mar 23 15:46:53 EDT 2022" docASTNodeCount="1983" docActiveCodeLength="11013" docExpressionCount="1535" docLength="12258" endLine="83" insertionLength="1" int_docASTNodeCount="1982" int_docActiveCodeLength="11012" int_docExpressionCount="1534" int_docLength="12257" length="4" offset="2580" startLine="83" starttimestamp="1647716908162" timestamp="347904930">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[c]]></insertedText>
  </DocumentChange>
  <Command __id="4785" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905029" timestamp2="347905029">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4786" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905029" timestamp2="347905029">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4788" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905094" timestamp2="347905094">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4789" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905094" timestamp2="347905094">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4791" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905139" timestamp2="347905139">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4792" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905139" timestamp2="347905139">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4794" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905184" timestamp2="347905184">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4795" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905184" timestamp2="347905184">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4797" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905479" timestamp2="347905479">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="4798" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905479" timestamp2="347905479">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="4800" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905607" timestamp2="347905607">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4801" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905607" timestamp2="347905607">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="4803" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905650" timestamp2="347905650">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4804" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905650" timestamp2="347905650">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="4806" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905746" timestamp2="347905746">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4807" _type="InsertStringCommand" date="Wed Mar 23 15:46:53 EDT 2022" starttimestamp="1647716908162" timestamp="347905746" timestamp2="347905746">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="4809" _type="InsertStringCommand" date="Wed Mar 23 15:46:54 EDT 2022" starttimestamp="1647716908162" timestamp="347905855" timestamp2="347905855">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4810" _type="InsertStringCommand" date="Wed Mar 23 15:46:54 EDT 2022" starttimestamp="1647716908162" timestamp="347905855" timestamp2="347905855">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4812" _type="InsertStringCommand" date="Wed Mar 23 15:46:54 EDT 2022" starttimestamp="1647716908162" timestamp="347906018" timestamp2="347906018">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4813" _type="InsertStringCommand" date="Wed Mar 23 15:46:54 EDT 2022" starttimestamp="1647716908162" timestamp="347906018" timestamp2="347906018">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4815" _type="InsertStringCommand" date="Wed Mar 23 15:46:54 EDT 2022" starttimestamp="1647716908162" timestamp="347906629" timestamp2="347906629">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="4816" _type="InsertStringCommand" date="Wed Mar 23 15:46:54 EDT 2022" starttimestamp="1647716908162" timestamp="347906629" timestamp2="347906629">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="4818" _type="InsertStringCommand" date="Wed Mar 23 15:46:54 EDT 2022" starttimestamp="1647716908162" timestamp="347906814" timestamp2="347906814">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4819" _type="InsertStringCommand" date="Wed Mar 23 15:46:54 EDT 2022" starttimestamp="1647716908162" timestamp="347906814" timestamp2="347906814">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4820" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:55 EDT 2022" starttimestamp="1647716908162" timestamp="347907169" />
  <Command __id="4821" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:55 EDT 2022" starttimestamp="1647716908162" timestamp="347907170" />
  <Command __id="4822" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:55 EDT 2022" starttimestamp="1647716908162" timestamp="347907388" />
  <Command __id="4823" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:46:55 EDT 2022" starttimestamp="1647716908162" timestamp="347907390" />
  <Command __id="4825" _type="PauseCommand" date="Wed Mar 23 15:46:57 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347909471">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2080]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4824" _type="MoveCaretCommand" caretOffset="2032" date="Wed Mar 23 15:46:57 EDT 2022" docOffset="2728" starttimestamp="1647716908162" timestamp="347909470" />
  <Command __id="4826" _type="MoveCaretCommand" caretOffset="2032" date="Wed Mar 23 15:46:57 EDT 2022" docOffset="2728" starttimestamp="1647716908162" timestamp="347909471" />
  <Command __id="4828" _type="InsertStringCommand" date="Wed Mar 23 15:46:57 EDT 2022" starttimestamp="1647716908162" timestamp="347909721" timestamp2="347909721">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4829" _type="InsertStringCommand" date="Wed Mar 23 15:46:57 EDT 2022" starttimestamp="1647716908162" timestamp="347909721" timestamp2="347909721">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4831" _type="InsertStringCommand" date="Wed Mar 23 15:46:58 EDT 2022" starttimestamp="1647716908162" timestamp="347910661" timestamp2="347910661">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4832" _type="InsertStringCommand" date="Wed Mar 23 15:46:58 EDT 2022" starttimestamp="1647716908162" timestamp="347910661" timestamp2="347910661">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="4834" _type="InsertStringCommand" date="Wed Mar 23 15:46:58 EDT 2022" starttimestamp="1647716908162" timestamp="347910723" timestamp2="347910723">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4835" _type="InsertStringCommand" date="Wed Mar 23 15:46:58 EDT 2022" starttimestamp="1647716908162" timestamp="347910724" timestamp2="347910724">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="4837" _type="InsertStringCommand" date="Wed Mar 23 15:46:58 EDT 2022" starttimestamp="1647716908162" timestamp="347910781" timestamp2="347910781">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4838" _type="InsertStringCommand" date="Wed Mar 23 15:46:58 EDT 2022" starttimestamp="1647716908162" timestamp="347910781" timestamp2="347910781">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="4840" _type="InsertStringCommand" date="Wed Mar 23 15:46:59 EDT 2022" starttimestamp="1647716908162" timestamp="347910874" timestamp2="347910874">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4841" _type="InsertStringCommand" date="Wed Mar 23 15:46:59 EDT 2022" starttimestamp="1647716908162" timestamp="347910874" timestamp2="347910874">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="4843" _type="InsertStringCommand" date="Wed Mar 23 15:46:59 EDT 2022" starttimestamp="1647716908162" timestamp="347911284" timestamp2="347911284">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4844" _type="InsertStringCommand" date="Wed Mar 23 15:46:59 EDT 2022" starttimestamp="1647716908162" timestamp="347911284" timestamp2="347911284">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="4846" _type="InsertStringCommand" date="Wed Mar 23 15:46:59 EDT 2022" starttimestamp="1647716908162" timestamp="347911407" timestamp2="347911407">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4847" _type="InsertStringCommand" date="Wed Mar 23 15:46:59 EDT 2022" starttimestamp="1647716908162" timestamp="347911407" timestamp2="347911407">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="4849" _type="InsertStringCommand" date="Wed Mar 23 15:46:59 EDT 2022" starttimestamp="1647716908162" timestamp="347911476" timestamp2="347911476">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4850" _type="InsertStringCommand" date="Wed Mar 23 15:46:59 EDT 2022" starttimestamp="1647716908162" timestamp="347911476" timestamp2="347911476">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="4852" _type="InsertStringCommand" date="Wed Mar 23 15:46:59 EDT 2022" starttimestamp="1647716908162" timestamp="347911579" timestamp2="347911579">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4853" _type="InsertStringCommand" date="Wed Mar 23 15:46:59 EDT 2022" starttimestamp="1647716908162" timestamp="347911579" timestamp2="347911579">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="4855" _type="InsertStringCommand" date="Wed Mar 23 15:46:59 EDT 2022" starttimestamp="1647716908162" timestamp="347911676" timestamp2="347911676">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4856" _type="InsertStringCommand" date="Wed Mar 23 15:46:59 EDT 2022" starttimestamp="1647716908162" timestamp="347911676" timestamp2="347911676">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4857" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:46:59 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347911678" />
  <Command __id="4862" _type="PauseCommand" date="Wed Mar 23 15:47:01 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347912983">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1305]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <DocumentChange __id="4787" _type="Insert" date="Wed Mar 23 15:46:53 EDT 2022" docASTNodeCount="1985" docActiveCodeLength="11025" docExpressionCount="1537" docLength="12270" length="12" offset="2581" repeat="11" starttimestamp="1647716908162" timestamp="347905069" timestamp2="347906775">
    <text><![CDATA[hefImages[0]]]></text>
  </DocumentChange>
  <DocumentChange __id="4827" _type="Insert" date="Wed Mar 23 15:46:57 EDT 2022" docASTNodeCount="1989" docActiveCodeLength="11041" docExpressionCount="1540" docLength="12286" length="16" offset="2728" repeat="13" starttimestamp="1647716908162" timestamp="347909684" timestamp2="347912025">
    <text><![CDATA[
		chefList.get]]></text>
  </DocumentChange>
  <DocumentChange __id="4863" _type="Replace" date="Wed Mar 23 15:47:01 EDT 2022" docASTNodeCount="1990" docActiveCodeLength="11052" docExpressionCount="1541" docLength="12297" endLine="87" insertionLength="14" int_docASTNodeCount="1987" int_docActiveCodeLength="11038" int_docExpressionCount="1538" int_docLength="12283" length="3" offset="2741" startLine="87" starttimestamp="1647716908162" timestamp="347913002">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[get(AvatarA_Y)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4866" _type="Replace" date="Wed Mar 23 15:47:01 EDT 2022" docASTNodeCount="1990" docActiveCodeLength="11044" docExpressionCount="1541" docLength="12289" endLine="87" insertionLength="1" int_docASTNodeCount="1989" int_docActiveCodeLength="11043" int_docExpressionCount="1540" int_docLength="12288" length="9" offset="2745" startLine="87" starttimestamp="1647716908162" timestamp="347913392">
    <deletedText><![CDATA[AvatarA_Y]]></deletedText>
    <insertedText><![CDATA[0]]></insertedText>
  </DocumentChange>
  <Command __id="4861" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:47:01 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347912983" />
  <Command __id="4864" _type="InsertStringCommand" date="Wed Mar 23 15:47:01 EDT 2022" starttimestamp="1647716908162" timestamp="347913344" timestamp2="347913344">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4865" _type="InsertStringCommand" date="Wed Mar 23 15:47:01 EDT 2022" starttimestamp="1647716908162" timestamp="347913344" timestamp2="347913344">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4867" _type="InsertStringCommand" date="Wed Mar 23 15:47:01 EDT 2022" starttimestamp="1647716908162" timestamp="347913435" timestamp2="347913435">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4868" _type="InsertStringCommand" date="Wed Mar 23 15:47:01 EDT 2022" starttimestamp="1647716908162" timestamp="347913435" timestamp2="347913435">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="4869" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:47:02 EDT 2022" starttimestamp="1647716908162" timestamp="347913956" />
  <Command __id="4870" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:47:02 EDT 2022" starttimestamp="1647716908162" timestamp="347913956" />
  <Command __id="4872" _type="InsertStringCommand" date="Wed Mar 23 15:47:02 EDT 2022" starttimestamp="1647716908162" timestamp="347914328" timestamp2="347914328">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4873" _type="InsertStringCommand" date="Wed Mar 23 15:47:02 EDT 2022" starttimestamp="1647716908162" timestamp="347914328" timestamp2="347914328">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4874" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:47:02 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347914354" />
  <Command __id="4879" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:47:03 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347915250" />
  <Command __id="4880" _type="InsertStringCommand" date="Wed Mar 23 15:47:03 EDT 2022" starttimestamp="1647716908162" timestamp="347915262" timestamp2="347915262">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4881" _type="InsertStringCommand" date="Wed Mar 23 15:47:03 EDT 2022" starttimestamp="1647716908162" timestamp="347915262" timestamp2="347915262">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4884" _type="PauseCommand" date="Wed Mar 23 15:47:04 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347916562">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1300]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="4883" _type="InsertStringCommand" date="Wed Mar 23 15:47:04 EDT 2022" starttimestamp="1647716908162" timestamp="347916562" timestamp2="347916562">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4885" _type="InsertStringCommand" date="Wed Mar 23 15:47:04 EDT 2022" starttimestamp="1647716908162" timestamp="347916562" timestamp2="347916562">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4886" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:47:04 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347916571" />
  <Command __id="4892" _type="PauseCommand" date="Wed Mar 23 15:47:06 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347917961">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1390]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4891" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:47:06 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347917961" />
  <Command __id="4894" _type="InsertStringCommand" date="Wed Mar 23 15:47:06 EDT 2022" starttimestamp="1647716908162" timestamp="347918246" timestamp2="347918246">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4895" _type="InsertStringCommand" date="Wed Mar 23 15:47:06 EDT 2022" starttimestamp="1647716908162" timestamp="347918246" timestamp2="347918246">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="4871" _type="Insert" date="Wed Mar 23 15:47:02 EDT 2022" docASTNodeCount="1996" docActiveCodeLength="11054" docExpressionCount="1547" docLength="12299" length="10" offset="2747" repeat="10" starttimestamp="1647716908162" timestamp="347914304" timestamp2="347917195">
    <text><![CDATA[.chef.move]]></text>
  </DocumentChange>
  <DocumentChange __id="4893" _type="Replace" date="Wed Mar 23 15:47:06 EDT 2022" docASTNodeCount="1996" docActiveCodeLength="11074" docExpressionCount="1547" docLength="12319" endLine="87" insertionLength="24" int_docASTNodeCount="1994" int_docActiveCodeLength="11050" int_docExpressionCount="1545" int_docLength="12295" length="4" offset="2753" startLine="87" starttimestamp="1647716908162" timestamp="347917970">
    <deletedText><![CDATA[move]]></deletedText>
    <insertedText><![CDATA[move(Chef_X, AvatarA_Y);]]></insertedText>
  </DocumentChange>
  <Command __id="4897" _type="PauseCommand" date="Wed Mar 23 15:47:16 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="347928198">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[9952]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="4898" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:47:16 EDT 2022" starttimestamp="1647716908162" timestamp="347928277" />
  <Command __id="4899" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:47:16 EDT 2022" starttimestamp="1647716908162" timestamp="347928278" />
  <Command __id="4901" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:47:16 EDT 2022" starttimestamp="1647716908162" timestamp="347928439" />
  <Command __id="4902" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:47:16 EDT 2022" starttimestamp="1647716908162" timestamp="347928439" />
  <Command __id="4904" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:47:16 EDT 2022" starttimestamp="1647716908162" timestamp="347928709" />
  <Command __id="4905" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:47:16 EDT 2022" starttimestamp="1647716908162" timestamp="347928710" />
  <Command __id="4907" _type="PauseCommand" date="Wed Mar 23 15:47:19 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347930891">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2181]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4906" _type="SelectTextCommand" caretOffset="2077" date="Wed Mar 23 15:47:19 EDT 2022" end="2077" start="2073" starttimestamp="1647716908162" timestamp="347930891" />
  <Command __id="4908" _type="SelectTextCommand" caretOffset="2077" date="Wed Mar 23 15:47:19 EDT 2022" end="2077" start="2073" starttimestamp="1647716908162" timestamp="347930891" />
  <Command __id="4910" _type="PauseCommand" date="Wed Mar 23 15:47:20 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347932232">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1341]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4909" _type="MoveCaretCommand" caretOffset="2073" date="Wed Mar 23 15:47:20 EDT 2022" docOffset="2769" starttimestamp="1647716908162" timestamp="347932232" />
  <Command __id="4911" _type="MoveCaretCommand" caretOffset="2073" date="Wed Mar 23 15:47:20 EDT 2022" docOffset="2769" starttimestamp="1647716908162" timestamp="347932233" />
  <Command __id="4913" _type="PauseCommand" date="Wed Mar 23 15:47:21 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347933321">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1088]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4912" _type="SelectTextCommand" caretOffset="2052" date="Wed Mar 23 15:47:21 EDT 2022" end="2073" start="2052" starttimestamp="1647716908162" timestamp="347933321" />
  <Command __id="4914" _type="SelectTextCommand" caretOffset="2052" date="Wed Mar 23 15:47:21 EDT 2022" end="2073" start="2052" starttimestamp="1647716908162" timestamp="347933321" />
  <Command __id="4916" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:47:21 EDT 2022" starttimestamp="1647716908162" timestamp="347933609" />
  <Command __id="4917" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:47:21 EDT 2022" starttimestamp="1647716908162" timestamp="347933609" />
  <Command __id="4919" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:47:21 EDT 2022" starttimestamp="1647716908162" timestamp="347933763" />
  <Command __id="4920" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:47:21 EDT 2022" starttimestamp="1647716908162" timestamp="347933763" />
  <DocumentChange __id="4896" _type="Delete" date="Wed Mar 23 15:47:16 EDT 2022" docASTNodeCount="1995" docActiveCodeLength="11066" docExpressionCount="1546" docLength="12311" endLine="87" length="8" offset="2756" repeat="3" startLine="87" starttimestamp="1647716908162" timestamp="347928198" timestamp2="347928651">
    <text><![CDATA[e(Chef_X]]></text>
  </DocumentChange>
  <DocumentChange __id="4915" _type="Delete" date="Wed Mar 23 15:47:21 EDT 2022" docASTNodeCount="1990" docActiveCodeLength="11044" docExpressionCount="1541" docLength="12289" endLine="87" length="22" offset="2747" repeat="2" startLine="87" starttimestamp="1647716908162" timestamp="347933561" timestamp2="347933713">
    <text><![CDATA[.chef.mov, AvatarA_Y);]]></text>
  </DocumentChange>
  <Command __id="4922" _type="PauseCommand" date="Wed Mar 23 15:48:13 EDT 2022" range="30s-1m" starttimestamp="1647716908162" timestamp="347985170">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[51407]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="4921" _type="Insert" date="Wed Mar 23 15:48:13 EDT 2022" docASTNodeCount="1994" docActiveCodeLength="11047" docExpressionCount="1545" docLength="12292" length="3" offset="2747" repeat="3" starttimestamp="1647716908162" timestamp="347985170" timestamp2="347986038">
    <text><![CDATA[.et]]></text>
  </DocumentChange>
  <Command __id="4923" _type="InsertStringCommand" date="Wed Mar 23 15:48:13 EDT 2022" starttimestamp="1647716908162" timestamp="347985249" timestamp2="347985249">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4924" _type="InsertStringCommand" date="Wed Mar 23 15:48:13 EDT 2022" starttimestamp="1647716908162" timestamp="347985249" timestamp2="347985249">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4925" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:48:13 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347985261" />
  <Command __id="4929" _type="PauseCommand" date="Wed Mar 23 15:48:14 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347986270">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1009]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="4928" _type="Delete" date="Wed Mar 23 15:48:14 EDT 2022" docASTNodeCount="1990" docActiveCodeLength="11045" docExpressionCount="1541" docLength="12290" endLine="87" length="2" offset="2748" repeat="2" startLine="87" starttimestamp="1647716908162" timestamp="347986270" timestamp2="347986397">
    <text><![CDATA[et]]></text>
  </DocumentChange>
  <DocumentChange __id="4931" _type="Insert" date="Wed Mar 23 15:48:14 EDT 2022" docASTNodeCount="1994" docActiveCodeLength="11048" docExpressionCount="1545" docLength="12293" length="3" offset="2748" repeat="3" starttimestamp="1647716908162" timestamp="347986466" timestamp2="347986691">
    <text><![CDATA[get]]></text>
  </DocumentChange>
  <Command __id="4935" _type="PauseCommand" date="Wed Mar 23 15:48:16 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347988259">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1793]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="4934" _type="Delete" date="Wed Mar 23 15:48:16 EDT 2022" docASTNodeCount="1990" docActiveCodeLength="11045" docExpressionCount="1541" docLength="12290" endLine="87" length="3" offset="2748" repeat="3" startLine="87" starttimestamp="1647716908162" timestamp="347988259" timestamp2="347988600">
    <text><![CDATA[get]]></text>
  </DocumentChange>
  <Command __id="4939" _type="PauseCommand" date="Wed Mar 23 15:48:19 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347991215">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Delete]]></prev>
    <pause><![CDATA[2956]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="4938" _type="Insert" date="Wed Mar 23 15:48:19 EDT 2022" docASTNodeCount="1994" docActiveCodeLength="11046" docExpressionCount="1545" docLength="12291" length="1" offset="2748" starttimestamp="1647716908162" timestamp="347991215">
    <text><![CDATA[h]]></text>
  </DocumentChange>
  <DocumentChange __id="4940" _type="Delete" date="Wed Mar 23 15:48:19 EDT 2022" docASTNodeCount="1990" docActiveCodeLength="11045" docExpressionCount="1541" docLength="12290" endLine="87" length="1" offset="2748" startLine="87" starttimestamp="1647716908162" timestamp="347991481">
    <text><![CDATA[h]]></text>
  </DocumentChange>
  <DocumentChange __id="4941" _type="Insert" date="Wed Mar 23 15:48:19 EDT 2022" docASTNodeCount="1994" docActiveCodeLength="11049" docExpressionCount="1545" docLength="12294" length="4" offset="2748" repeat="4" starttimestamp="1647716908162" timestamp="347991635" timestamp2="347991853">
    <text><![CDATA[chef]]></text>
  </DocumentChange>
  <Command __id="4945" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:48:20 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347991982" />
  <DocumentChange __id="4946" _type="Replace" date="Wed Mar 23 15:48:20 EDT 2022" docASTNodeCount="1994" docActiveCodeLength="11050" docExpressionCount="1545" docLength="12295" endLine="87" insertionLength="5" int_docASTNodeCount="1990" int_docActiveCodeLength="11045" int_docExpressionCount="1541" int_docLength="12290" length="4" offset="2748" startLine="87" starttimestamp="1647716908162" timestamp="347991998">
    <deletedText><![CDATA[chef]]></deletedText>
    <insertedText><![CDATA[chef.]]></insertedText>
  </DocumentChange>
  <Command __id="4947" _type="InsertStringCommand" date="Wed Mar 23 15:48:20 EDT 2022" starttimestamp="1647716908162" timestamp="347992063" timestamp2="347992063">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4948" _type="InsertStringCommand" date="Wed Mar 23 15:48:20 EDT 2022" starttimestamp="1647716908162" timestamp="347992063" timestamp2="347992063">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4949" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:48:20 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347992105" />
  <Command __id="4954" _type="PauseCommand" date="Wed Mar 23 15:48:23 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="347995238">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2579]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4953" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:48:23 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347995238" />
  <Command __id="4956" _type="InsertStringCommand" date="Wed Mar 23 15:48:23 EDT 2022" starttimestamp="1647716908162" timestamp="347995295" timestamp2="347995295">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4957" _type="InsertStringCommand" date="Wed Mar 23 15:48:23 EDT 2022" starttimestamp="1647716908162" timestamp="347995295" timestamp2="347995295">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="4950" _type="Insert" date="Wed Mar 23 15:48:20 EDT 2022" docASTNodeCount="1996" docActiveCodeLength="11053" docExpressionCount="1547" docLength="12298" length="3" offset="2753" repeat="3" starttimestamp="1647716908162" timestamp="347992659" timestamp2="347992878">
    <text><![CDATA[get]]></text>
  </DocumentChange>
  <DocumentChange __id="4955" _type="Replace" date="Wed Mar 23 15:48:23 EDT 2022" docASTNodeCount="1994" docActiveCodeLength="11059" docExpressionCount="1545" docLength="12304" endLine="87" insertionLength="9" int_docASTNodeCount="1994" int_docActiveCodeLength="11050" int_docExpressionCount="1545" int_docLength="12295" length="3" offset="2753" startLine="87" starttimestamp="1647716908162" timestamp="347995247">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="4959" _type="PauseCommand" date="Wed Mar 23 15:48:24 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347996362">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1067]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <DocumentChange __id="4958" _type="Insert" date="Wed Mar 23 15:48:24 EDT 2022" docASTNodeCount="1998" docActiveCodeLength="11063" docExpressionCount="1549" docLength="12308" length="4" offset="2762" repeat="4" starttimestamp="1647716908162" timestamp="347996362" timestamp2="347997092">
    <text><![CDATA[.mov]]></text>
  </DocumentChange>
  <Command __id="4960" _type="InsertStringCommand" date="Wed Mar 23 15:48:24 EDT 2022" starttimestamp="1647716908162" timestamp="347996430" timestamp2="347996430">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4961" _type="InsertStringCommand" date="Wed Mar 23 15:48:24 EDT 2022" starttimestamp="1647716908162" timestamp="347996430" timestamp2="347996430">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4962" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:48:24 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="347996441" />
  <Command __id="4967" _type="PauseCommand" date="Wed Mar 23 15:48:25 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="347997635">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1194]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4966" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:48:25 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="347997635" />
  <Command __id="4969" _type="InsertStringCommand" date="Wed Mar 23 15:48:26 EDT 2022" starttimestamp="1647716908162" timestamp="347998139" timestamp2="347998139">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="4970" _type="InsertStringCommand" date="Wed Mar 23 15:48:26 EDT 2022" starttimestamp="1647716908162" timestamp="347998140" timestamp2="347998140">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="4968" _type="Replace" date="Wed Mar 23 15:48:25 EDT 2022" docASTNodeCount="1998" docActiveCodeLength="11084" docExpressionCount="1549" docLength="12329" endLine="87" insertionLength="24" int_docASTNodeCount="1994" int_docActiveCodeLength="11060" int_docExpressionCount="1545" int_docLength="12305" length="3" offset="2763" startLine="87" starttimestamp="1647716908162" timestamp="347997644">
    <deletedText><![CDATA[mov]]></deletedText>
    <insertedText><![CDATA[move(Chef_X, AvatarA_Y);]]></insertedText>
  </DocumentChange>
  <Command __id="4972" _type="PauseCommand" date="Wed Mar 23 15:48:29 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348001372">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3232]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="4973" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:29 EDT 2022" starttimestamp="1647716908162" timestamp="348001423" />
  <Command __id="4974" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:29 EDT 2022" starttimestamp="1647716908162" timestamp="348001423" />
  <Command __id="4976" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:29 EDT 2022" starttimestamp="1647716908162" timestamp="348001565" />
  <Command __id="4977" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:29 EDT 2022" starttimestamp="1647716908162" timestamp="348001565" />
  <Command __id="4979" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:29 EDT 2022" starttimestamp="1647716908162" timestamp="348001702" />
  <Command __id="4980" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:29 EDT 2022" starttimestamp="1647716908162" timestamp="348001702" />
  <Command __id="4982" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:29 EDT 2022" starttimestamp="1647716908162" timestamp="348001825" />
  <Command __id="4983" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:29 EDT 2022" starttimestamp="1647716908162" timestamp="348001825" />
  <Command __id="4985" _type="PauseCommand" date="Wed Mar 23 15:48:33 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348005291">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3466]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4984" _type="SelectTextCommand" caretOffset="2066" date="Wed Mar 23 15:48:33 EDT 2022" end="2082" start="2066" starttimestamp="1647716908162" timestamp="348005291" />
  <Command __id="4986" _type="SelectTextCommand" caretOffset="2066" date="Wed Mar 23 15:48:33 EDT 2022" end="2082" start="2066" starttimestamp="1647716908162" timestamp="348005292" />
  <Command __id="4988" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:33 EDT 2022" starttimestamp="1647716908162" timestamp="348005671" />
  <Command __id="4989" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:33 EDT 2022" starttimestamp="1647716908162" timestamp="348005671" />
  <Command __id="4991" _type="InsertStringCommand" date="Wed Mar 23 15:48:34 EDT 2022" starttimestamp="1647716908162" timestamp="348006291" timestamp2="348006291">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4992" _type="InsertStringCommand" date="Wed Mar 23 15:48:34 EDT 2022" starttimestamp="1647716908162" timestamp="348006292" timestamp2="348006292">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="4993" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:48:34 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="348006299" />
  <Command __id="4997" _type="PauseCommand" date="Wed Mar 23 15:48:37 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348009418">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3119]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="4996" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:48:37 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="348009418" />
  <Command __id="4999" _type="InsertStringCommand" date="Wed Mar 23 15:48:37 EDT 2022" starttimestamp="1647716908162" timestamp="348009617" timestamp2="348009617">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5000" _type="InsertStringCommand" date="Wed Mar 23 15:48:37 EDT 2022" starttimestamp="1647716908162" timestamp="348009617" timestamp2="348009617">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5002" _type="PauseCommand" date="Wed Mar 23 15:48:42 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348014585">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4968]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="5001" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:48:42 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="348014585" />
  <Command __id="5003" _type="MoveCaretCommand" caretOffset="1888" date="Wed Mar 23 15:48:42 EDT 2022" docOffset="2584" starttimestamp="1647716908162" timestamp="348014671" />
  <Command __id="5004" _type="MoveCaretCommand" caretOffset="1888" date="Wed Mar 23 15:48:42 EDT 2022" docOffset="2584" starttimestamp="1647716908162" timestamp="348014671" />
  <Command __id="5006" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:43 EDT 2022" starttimestamp="1647716908162" timestamp="348015010" />
  <Command __id="5007" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:43 EDT 2022" starttimestamp="1647716908162" timestamp="348015011" />
  <Command __id="5009" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:43 EDT 2022" starttimestamp="1647716908162" timestamp="348015306" />
  <Command __id="5010" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:43 EDT 2022" starttimestamp="1647716908162" timestamp="348015306" />
  <Command __id="5012" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:43 EDT 2022" starttimestamp="1647716908162" timestamp="348015352" />
  <Command __id="5013" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:43 EDT 2022" starttimestamp="1647716908162" timestamp="348015352" />
  <Command __id="5015" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:43 EDT 2022" starttimestamp="1647716908162" timestamp="348015441" />
  <Command __id="5016" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:48:43 EDT 2022" starttimestamp="1647716908162" timestamp="348015441" />
  <Command __id="5018" _type="InsertStringCommand" date="Wed Mar 23 15:48:44 EDT 2022" starttimestamp="1647716908162" timestamp="348016014" timestamp2="348016014">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5019" _type="InsertStringCommand" date="Wed Mar 23 15:48:44 EDT 2022" starttimestamp="1647716908162" timestamp="348016015" timestamp2="348016015">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5021" _type="InsertStringCommand" date="Wed Mar 23 15:48:44 EDT 2022" starttimestamp="1647716908162" timestamp="348016147" timestamp2="348016147">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5022" _type="InsertStringCommand" date="Wed Mar 23 15:48:44 EDT 2022" starttimestamp="1647716908162" timestamp="348016147" timestamp2="348016147">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5024" _type="InsertStringCommand" date="Wed Mar 23 15:48:44 EDT 2022" starttimestamp="1647716908162" timestamp="348016282" timestamp2="348016282">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5025" _type="InsertStringCommand" date="Wed Mar 23 15:48:44 EDT 2022" starttimestamp="1647716908162" timestamp="348016282" timestamp2="348016282">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5027" _type="InsertStringCommand" date="Wed Mar 23 15:48:44 EDT 2022" starttimestamp="1647716908162" timestamp="348016431" timestamp2="348016431">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5028" _type="InsertStringCommand" date="Wed Mar 23 15:48:44 EDT 2022" starttimestamp="1647716908162" timestamp="348016432" timestamp2="348016432">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="5030" _type="InsertStringCommand" date="Wed Mar 23 15:48:44 EDT 2022" starttimestamp="1647716908162" timestamp="348016510" timestamp2="348016510">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5031" _type="InsertStringCommand" date="Wed Mar 23 15:48:44 EDT 2022" starttimestamp="1647716908162" timestamp="348016510" timestamp2="348016510">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="5033" _type="InsertStringCommand" date="Wed Mar 23 15:48:44 EDT 2022" starttimestamp="1647716908162" timestamp="348016581" timestamp2="348016581">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5034" _type="InsertStringCommand" date="Wed Mar 23 15:48:44 EDT 2022" starttimestamp="1647716908162" timestamp="348016581" timestamp2="348016581">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5036" _type="PauseCommand" date="Wed Mar 23 15:48:45 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348017698">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1117]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5035" _type="MoveCaretCommand" caretOffset="2089" date="Wed Mar 23 15:48:45 EDT 2022" docOffset="2785" starttimestamp="1647716908162" timestamp="348017698" />
  <Command __id="5037" _type="MoveCaretCommand" caretOffset="2089" date="Wed Mar 23 15:48:45 EDT 2022" docOffset="2785" starttimestamp="1647716908162" timestamp="348017701" />
  <Command __id="5038" _type="SelectTextCommand" caretOffset="2090" date="Wed Mar 23 15:48:45 EDT 2022" end="2090" start="2086" starttimestamp="1647716908162" timestamp="348017820" />
  <Command __id="5039" _type="SelectTextCommand" caretOffset="2090" date="Wed Mar 23 15:48:45 EDT 2022" end="2090" start="2086" starttimestamp="1647716908162" timestamp="348017820" />
  <Command __id="5041" _type="InsertStringCommand" date="Wed Mar 23 15:48:46 EDT 2022" starttimestamp="1647716908162" timestamp="348018497" timestamp2="348018497">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="5042" _type="InsertStringCommand" date="Wed Mar 23 15:48:46 EDT 2022" starttimestamp="1647716908162" timestamp="348018497" timestamp2="348018497">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="5044" _type="InsertStringCommand" date="Wed Mar 23 15:48:46 EDT 2022" starttimestamp="1647716908162" timestamp="348018553" timestamp2="348018553">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5045" _type="InsertStringCommand" date="Wed Mar 23 15:48:46 EDT 2022" starttimestamp="1647716908162" timestamp="348018554" timestamp2="348018554">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="5047" _type="InsertStringCommand" date="Wed Mar 23 15:48:46 EDT 2022" starttimestamp="1647716908162" timestamp="348018613" timestamp2="348018613">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5048" _type="InsertStringCommand" date="Wed Mar 23 15:48:46 EDT 2022" starttimestamp="1647716908162" timestamp="348018613" timestamp2="348018613">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5050" _type="InsertStringCommand" date="Wed Mar 23 15:48:46 EDT 2022" starttimestamp="1647716908162" timestamp="348018662" timestamp2="348018662">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5051" _type="InsertStringCommand" date="Wed Mar 23 15:48:46 EDT 2022" starttimestamp="1647716908162" timestamp="348018663" timestamp2="348018663">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="5053" _type="InsertStringCommand" date="Wed Mar 23 15:48:47 EDT 2022" starttimestamp="1647716908162" timestamp="348018913" timestamp2="348018913">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="5054" _type="InsertStringCommand" date="Wed Mar 23 15:48:47 EDT 2022" starttimestamp="1647716908162" timestamp="348018913" timestamp2="348018913">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="5056" _type="InsertStringCommand" date="Wed Mar 23 15:48:47 EDT 2022" starttimestamp="1647716908162" timestamp="348019076" timestamp2="348019076">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5057" _type="InsertStringCommand" date="Wed Mar 23 15:48:47 EDT 2022" starttimestamp="1647716908162" timestamp="348019076" timestamp2="348019076">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="5059" _type="InsertStringCommand" date="Wed Mar 23 15:48:47 EDT 2022" starttimestamp="1647716908162" timestamp="348019136" timestamp2="348019136">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5060" _type="InsertStringCommand" date="Wed Mar 23 15:48:47 EDT 2022" starttimestamp="1647716908162" timestamp="348019137" timestamp2="348019137">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5062" _type="InsertStringCommand" date="Wed Mar 23 15:48:47 EDT 2022" starttimestamp="1647716908162" timestamp="348019222" timestamp2="348019222">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5063" _type="InsertStringCommand" date="Wed Mar 23 15:48:47 EDT 2022" starttimestamp="1647716908162" timestamp="348019222" timestamp2="348019222">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5065" _type="InsertStringCommand" date="Wed Mar 23 15:48:47 EDT 2022" starttimestamp="1647716908162" timestamp="348019317" timestamp2="348019317">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5066" _type="InsertStringCommand" date="Wed Mar 23 15:48:47 EDT 2022" starttimestamp="1647716908162" timestamp="348019318" timestamp2="348019318">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5068" _type="InsertStringCommand" date="Wed Mar 23 15:48:47 EDT 2022" starttimestamp="1647716908162" timestamp="348019488" timestamp2="348019488">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5069" _type="InsertStringCommand" date="Wed Mar 23 15:48:47 EDT 2022" starttimestamp="1647716908162" timestamp="348019488" timestamp2="348019488">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5071" _type="InsertStringCommand" date="Wed Mar 23 15:48:48 EDT 2022" starttimestamp="1647716908162" timestamp="348020205" timestamp2="348020205">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="5072" _type="InsertStringCommand" date="Wed Mar 23 15:48:48 EDT 2022" starttimestamp="1647716908162" timestamp="348020208" timestamp2="348020208">
    <data><![CDATA[[]]></data>
  </Command>
  <Command __id="5074" _type="InsertStringCommand" date="Wed Mar 23 15:48:49 EDT 2022" starttimestamp="1647716908162" timestamp="348020985" timestamp2="348020985">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="5075" _type="InsertStringCommand" date="Wed Mar 23 15:48:49 EDT 2022" starttimestamp="1647716908162" timestamp="348020985" timestamp2="348020985">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="5077" _type="PauseCommand" date="Wed Mar 23 15:48:50 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348022620">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1635]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5085" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:49:10 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348042058" type="Run" />
  <Command __id="5087" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:49:10 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348042058" type="Run" />
  <Command __id="5089" _type="PauseCommand" date="Wed Mar 23 15:49:11 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348043585">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1527]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5088" _type="ConsoleOutput" date="Wed Mar 23 15:49:11 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348043585" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of "), Diff(INSERT,"public void graphics.A"), Diff(EQUAL,"Producer"), Diff(DELETE,"-"), Diff(EQUAL,"Consumer"), Diff(DELETE," "), Diff(EQUAL,"Scene."), Diff(DELETE,"Chef List.1:.Chef.Head not in range."), Diff(INSERT,"addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5090" _type="ShellCommand" date="Wed Mar 23 15:49:12 EDT 2022" starttimestamp="1647716908162" timestamp="348044263" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5092" _type="PauseCommand" date="Wed Mar 23 15:49:13 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348045670">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1407]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5091" _type="ConsoleOutput" date="Wed Mar 23 15:49:13 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348045670" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5093" _type="ConsoleOutput" date="Wed Mar 23 15:49:14 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348045890" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 

W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"ZIndex"), Diff(INSERT,"plate"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"nAvatar"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶")]]]></diff>
  </Command>
  <Command __id="5094" _type="ConsoleOutput" date="Wed Mar 23 15:49:14 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348046006" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Head"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(DELETE,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶")]]]></diff>
  </Command>
  <Command __id="5095" _type="ConsoleOutput" date="Wed Mar 23 15:49:14 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348046255" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5097" _type="PauseCommand" date="Wed Mar 23 15:49:20 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348052801">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6546]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5096" _type="ShellCommand" date="Wed Mar 23 15:49:20 EDT 2022" starttimestamp="1647716908162" timestamp="348052801" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5099" _type="PauseCommand" date="Wed Mar 23 15:49:24 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348055907">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3106]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="5098" _type="SelectTextCommand" caretOffset="2054" date="Wed Mar 23 15:49:24 EDT 2022" end="2101" start="2054" starttimestamp="1647716908162" timestamp="348055907" />
  <Command __id="5100" _type="SelectTextCommand" caretOffset="2054" date="Wed Mar 23 15:49:24 EDT 2022" end="2101" start="2054" starttimestamp="1647716908162" timestamp="348055907" />
  <Command __id="5102" _type="PauseCommand" date="Wed Mar 23 15:49:25 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348057122">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1215]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5101" _type="MoveCaretCommand" caretOffset="1992" date="Wed Mar 23 15:49:25 EDT 2022" docOffset="2688" starttimestamp="1647716908162" timestamp="348057122" />
  <Command __id="5103" _type="MoveCaretCommand" caretOffset="1992" date="Wed Mar 23 15:49:25 EDT 2022" docOffset="2688" starttimestamp="1647716908162" timestamp="348057123" />
  <Command __id="5105" _type="PauseCommand" date="Wed Mar 23 15:49:26 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348058290">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1167]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5104" _type="MoveCaretCommand" caretOffset="1994" date="Wed Mar 23 15:49:26 EDT 2022" docOffset="2690" starttimestamp="1647716908162" timestamp="348058290" />
  <Command __id="5106" _type="MoveCaretCommand" caretOffset="1994" date="Wed Mar 23 15:49:26 EDT 2022" docOffset="2690" starttimestamp="1647716908162" timestamp="348058290" />
  <Command __id="5107" _type="SelectTextCommand" caretOffset="1996" date="Wed Mar 23 15:49:26 EDT 2022" end="1996" start="1992" starttimestamp="1647716908162" timestamp="348058500" />
  <Command __id="5108" _type="SelectTextCommand" caretOffset="1996" date="Wed Mar 23 15:49:26 EDT 2022" end="1996" start="1992" starttimestamp="1647716908162" timestamp="348058500" />
  <Command __id="5110" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:49:27 EDT 2022" starttimestamp="1647716908162" timestamp="348058858" />
  <Command __id="5111" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:49:27 EDT 2022" starttimestamp="1647716908162" timestamp="348058858" />
  <Command __id="5113" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:49:27 EDT 2022" starttimestamp="1647716908162" timestamp="348059055" />
  <Command __id="5114" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:49:27 EDT 2022" starttimestamp="1647716908162" timestamp="348059055" />
  <Command __id="5116" _type="PauseCommand" date="Wed Mar 23 15:49:28 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348060559">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1504]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5115" _type="MoveCaretCommand" caretOffset="2103" date="Wed Mar 23 15:49:28 EDT 2022" docOffset="2799" starttimestamp="1647716908162" timestamp="348060559" />
  <Command __id="5117" _type="MoveCaretCommand" caretOffset="2103" date="Wed Mar 23 15:49:28 EDT 2022" docOffset="2799" starttimestamp="1647716908162" timestamp="348060560" />
  <Command __id="5119" _type="PauseCommand" date="Wed Mar 23 15:49:30 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348061941">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1381]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5118" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Mar 23 15:49:30 EDT 2022" starttimestamp="1647716908162" timestamp="348061941" />
  <Command __id="5120" _type="EclipseCommand" commandID="" date="Wed Mar 23 15:49:30 EDT 2022" starttimestamp="1647716908162" timestamp="348062009" />
  <Command __id="5121" _type="EclipseCommand" commandID="" date="Wed Mar 23 15:49:30 EDT 2022" starttimestamp="1647716908162" timestamp="348062088" />
  <Command __id="5123" _type="PauseCommand" date="Wed Mar 23 15:49:34 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348066456">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4368]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5122" _type="MoveCaretCommand" caretOffset="1784" date="Wed Mar 23 15:49:34 EDT 2022" docOffset="2480" starttimestamp="1647716908162" timestamp="348066456" />
  <Command __id="5124" _type="MoveCaretCommand" caretOffset="1784" date="Wed Mar 23 15:49:34 EDT 2022" docOffset="2480" starttimestamp="1647716908162" timestamp="348066456" />
  <Command __id="5125" _type="SelectTextCommand" caretOffset="1786" date="Wed Mar 23 15:49:34 EDT 2022" end="1786" start="1780" starttimestamp="1647716908162" timestamp="348066609" />
  <Command __id="5126" _type="SelectTextCommand" caretOffset="1786" date="Wed Mar 23 15:49:34 EDT 2022" end="1786" start="1780" starttimestamp="1647716908162" timestamp="348066609" />
  <Command __id="5128" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:49:35 EDT 2022" starttimestamp="1647716908162" timestamp="348066981" />
  <Command __id="5129" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:49:35 EDT 2022" starttimestamp="1647716908162" timestamp="348066981" />
  <Command __id="5131" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:49:35 EDT 2022" starttimestamp="1647716908162" timestamp="348067348" />
  <Command __id="5132" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:49:35 EDT 2022" starttimestamp="1647716908162" timestamp="348067348" />
  <Command __id="5134" _type="PauseCommand" date="Wed Mar 23 15:49:36 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348068435">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1087]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5133" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Mar 23 15:49:36 EDT 2022" starttimestamp="1647716908162" timestamp="348068435" />
  <Command __id="5135" _type="EclipseCommand" commandID="" date="Wed Mar 23 15:49:36 EDT 2022" starttimestamp="1647716908162" timestamp="348068507" />
  <Command __id="5136" _type="EclipseCommand" commandID="" date="Wed Mar 23 15:49:36 EDT 2022" starttimestamp="1647716908162" timestamp="348068601" />
  <Command __id="5138" _type="PauseCommand" date="Wed Mar 23 15:49:37 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348069693">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1092]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5140" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:50:24 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348116787" type="Run" />
  <Command __id="5142" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:50:24 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348116788" type="Run" />
  <Command __id="5144" _type="PauseCommand" date="Wed Mar 23 15:50:26 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348118033">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1245]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5146" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:50:30 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348122240" type="Run" />
  <Command __id="5148" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:50:30 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348122241" type="Run" />
  <Command __id="5150" _type="PauseCommand" date="Wed Mar 23 15:50:32 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348124167">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1926]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5149" _type="ConsoleOutput" date="Wed Mar 23 15:50:32 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348124167" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface "), Diff(INSERT,"public void graphics.AProducerConsumerScene.addPropertyChangeListener("), Diff(EQUAL,"java.beans.PropertyChangeListener) "), Diff(DELETE,"for method public abstract void graphics.Chef.addPropertyChangeL"), Diff(INSERT,"should be associated with annotation: @ObserverReg"), Diff(EQUAL,"iste"), Diff(DELETE,"n"), Diff(INSERT,"r"), Diff(EQUAL,"er("), Diff(DELETE,"graphics.Chef,java.beans."), Diff(EQUAL,"Property"), Diff(DELETE,"Change"), Diff(INSERT," "), Diff(EQUAL,"Listener)¶")]]]></diff>
  </Command>
  <Command __id="5151" _type="ShellCommand" date="Wed Mar 23 15:50:32 EDT 2022" starttimestamp="1647716908162" timestamp="348124831" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5153" _type="PauseCommand" date="Wed Mar 23 15:50:34 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348126045">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1214]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5152" _type="ConsoleOutput" date="Wed Mar 23 15:50:34 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348126045" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5154" _type="ConsoleOutput" date="Wed Mar 23 15:50:34 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348126216" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 

W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"ZIndex"), Diff(INSERT,"plate"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"nAvatar"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶")]]]></diff>
  </Command>
  <Command __id="5155" _type="ConsoleOutput" date="Wed Mar 23 15:50:34 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348126333" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Head"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(DELETE,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶")]]]></diff>
  </Command>
  <Command __id="5156" _type="ConsoleOutput" date="Wed Mar 23 15:50:34 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348126608" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5158" _type="PauseCommand" date="Wed Mar 23 15:50:51 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="348143110">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[16502]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5157" _type="ShellCommand" date="Wed Mar 23 15:50:51 EDT 2022" starttimestamp="1647716908162" timestamp="348143110" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="4971" _type="Delete" date="Wed Mar 23 15:48:29 EDT 2022" docASTNodeCount="1997" docActiveCodeLength="11075" docExpressionCount="1548" docLength="12320" endLine="87" length="9" offset="2765" repeat="4" startLine="87" starttimestamp="1647716908162" timestamp="348001372" timestamp2="348001780">
    <text><![CDATA[ve(Chef_X]]></text>
  </DocumentChange>
  <DocumentChange __id="4987" _type="Delete" date="Wed Mar 23 15:48:33 EDT 2022" docASTNodeCount="1994" docActiveCodeLength="11059" docExpressionCount="1545" docLength="12304" endLine="87" length="16" offset="2762" startLine="87" starttimestamp="1647716908162" timestamp="348005602">
    <text><![CDATA[.mo, AvatarA_Y);]]></text>
  </DocumentChange>
  <DocumentChange __id="4990" _type="Insert" date="Wed Mar 23 15:48:34 EDT 2022" docASTNodeCount="1998" docActiveCodeLength="11062" docExpressionCount="1549" docLength="12307" length="3" offset="2762" repeat="3" starttimestamp="1647716908162" timestamp="348006213" timestamp2="348007416">
    <text><![CDATA[.se]]></text>
  </DocumentChange>
  <DocumentChange __id="4998" _type="Replace" date="Wed Mar 23 15:48:37 EDT 2022" docASTNodeCount="1997" docActiveCodeLength="11083" docExpressionCount="1548" docLength="12328" endLine="87" insertionLength="23" int_docASTNodeCount="1994" int_docActiveCodeLength="11060" int_docExpressionCount="1545" int_docLength="12305" length="2" offset="2763" startLine="87" starttimestamp="1647716908162" timestamp="348009427">
    <deletedText><![CDATA[se]]></deletedText>
    <insertedText><![CDATA[setImageFileName(null);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5005" _type="Delete" date="Wed Mar 23 15:48:43 EDT 2022" docASTNodeCount="1997" docActiveCodeLength="11079" docExpressionCount="1548" docLength="12324" endLine="83" length="4" offset="2580" repeat="4" startLine="83" starttimestamp="1647716908162" timestamp="348014971" timestamp2="348015392">
    <text><![CDATA[chef]]></text>
  </DocumentChange>
  <DocumentChange __id="5017" _type="Insert" date="Wed Mar 23 15:48:44 EDT 2022" docASTNodeCount="1997" docActiveCodeLength="11085" docExpressionCount="1548" docLength="12330" length="6" offset="2580" repeat="6" starttimestamp="1647716908162" timestamp="348015949" timestamp2="348016525">
    <text><![CDATA[patron]]></text>
  </DocumentChange>
  <DocumentChange __id="5040" _type="Replace" date="Wed Mar 23 15:48:46 EDT 2022" docASTNodeCount="1997" docActiveCodeLength="11082" docExpressionCount="1548" docLength="12327" endLine="87" insertionLength="1" int_docASTNodeCount="1996" int_docActiveCodeLength="11081" int_docExpressionCount="1547" int_docLength="12326" length="4" offset="2782" startLine="87" starttimestamp="1647716908162" timestamp="348018399">
    <deletedText><![CDATA[null]]></deletedText>
    <insertedText><![CDATA[c]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5043" _type="Insert" date="Wed Mar 23 15:48:46 EDT 2022" docASTNodeCount="1999" docActiveCodeLength="11094" docExpressionCount="1550" docLength="12339" length="12" offset="2783" repeat="11" starttimestamp="1647716908162" timestamp="348018506" timestamp2="348020943">
    <text><![CDATA[hefImages[0]]]></text>
  </DocumentChange>
  <DocumentChange __id="5109" _type="Delete" date="Wed Mar 23 15:49:26 EDT 2022" docASTNodeCount="1997" docActiveCodeLength="11089" docExpressionCount="1548" docLength="12334" endLine="86" length="5" offset="2687" repeat="2" startLine="86" starttimestamp="1647716908162" timestamp="348058795" timestamp2="348058988">
    <text><![CDATA[.chef]]></text>
  </DocumentChange>
  <DocumentChange __id="5127" _type="Delete" date="Wed Mar 23 15:49:35 EDT 2022" docASTNodeCount="1995" docActiveCodeLength="11082" docExpressionCount="1546" docLength="12327" endLine="82" length="7" offset="2475" repeat="2" startLine="82" starttimestamp="1647716908162" timestamp="348066923" timestamp2="348067294">
    <text><![CDATA[.patron]]></text>
  </DocumentChange>
  <Command __id="5160" _type="PauseCommand" date="Wed Mar 23 15:50:54 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348146813">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3703]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5161" _type="MoveCaretCommand" caretOffset="221" date="Wed Mar 23 15:50:55 EDT 2022" docOffset="1182" starttimestamp="1647716908162" timestamp="348147618" />
  <Command __id="5159" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:50:54 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348146813">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5163" _type="PauseCommand" date="Wed Mar 23 15:51:08 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="348160740">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13122]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5164" _type="MoveCaretCommand" caretOffset="2049" date="Wed Mar 23 15:51:09 EDT 2022" docOffset="2745" starttimestamp="1647716908162" timestamp="348161211" />
  <Command __id="5166" _type="PauseCommand" date="Wed Mar 23 15:51:13 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348165497">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4286]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5165" _type="ShellCommand" date="Wed Mar 23 15:51:13 EDT 2022" starttimestamp="1647716908162" timestamp="348165497" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5168" _type="PauseCommand" date="Wed Mar 23 15:51:38 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="348190425">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[24928]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5167" _type="ConsoleOutput" date="Wed Mar 23 15:51:38 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348190425" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3671e9d9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3671e9d9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3671e9d9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3671e9d9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6d9af69d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6d9af69d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6d9af69d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6d9af69d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4650a9d1]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4650a9d1]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4650a9d1]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4650a9d1]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6370b917]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6370b917]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6370b917]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6370b917]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5a76ab81]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5a76ab81]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5a76ab81]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5a76ab81]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6062904c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6062904c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@6062904c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@6062904c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@23bfa3b0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@23bfa3b0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@23bfa3b0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@23bfa3b0]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3671e9d9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3671e9d9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3671e9d9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3671e9d9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6d9af69d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6d9af69d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6d9af69d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6d9af69d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4650a9d1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4650a9d1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4650a9d1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4650a9d1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6370b917]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6370b917]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6370b917]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6370b917]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5a76ab81]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5a76ab81]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5a76ab81]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5a76ab81]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6062904c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6062904c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@6062904c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@6062904c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@23bfa3b0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@23bfa3b0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@23bfa3b0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@23bfa3b0]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5170" _type="PauseCommand" date="Wed Mar 23 15:51:42 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348194399">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3974]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5169" _type="ShellCommand" date="Wed Mar 23 15:51:42 EDT 2022" starttimestamp="1647716908162" timestamp="348194399" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5172" _type="PauseCommand" date="Wed Mar 23 15:51:59 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="348211762">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[17363]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5171" _type="MoveCaretCommand" caretOffset="2011" date="Wed Mar 23 15:51:59 EDT 2022" docOffset="2707" starttimestamp="1647716908162" timestamp="348211762" />
  <Command __id="5173" _type="MoveCaretCommand" caretOffset="2011" date="Wed Mar 23 15:51:59 EDT 2022" docOffset="2707" starttimestamp="1647716908162" timestamp="348211763" />
  <Command __id="5175" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:52:00 EDT 2022" starttimestamp="1647716908162" timestamp="348212520" />
  <Command __id="5176" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:52:00 EDT 2022" starttimestamp="1647716908162" timestamp="348212520" />
  <Command __id="5178" _type="InsertStringCommand" date="Wed Mar 23 15:52:00 EDT 2022" starttimestamp="1647716908162" timestamp="348212731" timestamp2="348212731">
    <data><![CDATA[Y]]></data>
  </Command>
  <Command __id="5179" _type="InsertStringCommand" date="Wed Mar 23 15:52:00 EDT 2022" starttimestamp="1647716908162" timestamp="348212732" timestamp2="348212732">
    <data><![CDATA[Y]]></data>
  </Command>
  <Command __id="5181" _type="PauseCommand" date="Wed Mar 23 15:52:02 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348213870">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1137]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5180" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Mar 23 15:52:02 EDT 2022" starttimestamp="1647716908162" timestamp="348213869" />
  <Command __id="5182" _type="EclipseCommand" commandID="" date="Wed Mar 23 15:52:02 EDT 2022" starttimestamp="1647716908162" timestamp="348213934" />
  <Command __id="5183" _type="EclipseCommand" commandID="" date="Wed Mar 23 15:52:02 EDT 2022" starttimestamp="1647716908162" timestamp="348214021" />
  <Command __id="5185" _type="PauseCommand" date="Wed Mar 23 15:52:03 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348215121">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1100]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5190" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:52:07 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348219572" type="Run" />
  <Command __id="5192" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:52:07 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348219573" type="Run" />
  <Command __id="5194" _type="PauseCommand" date="Wed Mar 23 15:52:09 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348221480">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1907]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5193" _type="ConsoleOutput" date="Wed Mar 23 15:52:09 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348221480" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3671e9d9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3671e9d9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3671e9d9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3671e9d9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6d9af69d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6d9af69d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6d9af69d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@6d9af69d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4650a9d1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4650a9d1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4650a9d1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4650a9d1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6370b917]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6370b917]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6370b917]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6370b917]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5a76ab81]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5a76ab81]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5a76ab81]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5a76ab81]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6062904c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6062904c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@6062904c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@6062904c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@23bfa3b0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@23bfa3b0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@23bfa3b0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@23bfa3b0]¶Moving the stove: "), Diff(INSERT,"W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5195" _type="ShellCommand" date="Wed Mar 23 15:52:10 EDT 2022" starttimestamp="1647716908162" timestamp="348222208" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5197" _type="PauseCommand" date="Wed Mar 23 15:52:11 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348223427">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1219]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5196" _type="ConsoleOutput" date="Wed Mar 23 15:52:11 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348223427" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5198" _type="ConsoleOutput" date="Wed Mar 23 15:52:11 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348223616" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 

W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"ZIndex"), Diff(INSERT,"plate"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"nAvatar"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶")]]]></diff>
  </Command>
  <Command __id="5199" _type="ConsoleOutput" date="Wed Mar 23 15:52:11 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348223709" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"nAngle"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Patron"), Diff(INSERT,"Angle"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics."), Diff(DELETE,"Patron"), Diff(INSERT,"Angle"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Patron"), Diff(INSERT,"Angle"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Head"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(DELETE,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶")]]]></diff>
  </Command>
  <Command __id="5200" _type="ConsoleOutput" date="Wed Mar 23 15:52:12 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348224012" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.A"), Diff(DELETE,"nAngle"), Diff(INSERT,"Chef"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶"), Diff(DELETE,"W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="5202" _type="PauseCommand" date="Wed Mar 23 15:52:28 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="348240417">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[16405]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5209" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:52:45 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348256880" type="Run" />
  <Command __id="5211" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:52:45 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348256880" type="Run" />
  <Command __id="5213" _type="PauseCommand" date="Wed Mar 23 15:52:46 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348258543">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1663]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5212" _type="ConsoleOutput" date="Wed Mar 23 15:52:46 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348258543" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface "), Diff(INSERT,"public void graphics.AProducerConsumerScene.addPropertyChangeListener("), Diff(EQUAL,"java.beans.PropertyChangeListener) "), Diff(DELETE,"for method public abstract void graphics.Chef.addPropertyChangeL"), Diff(INSERT,"should be associated with annotation: @ObserverReg"), Diff(EQUAL,"iste"), Diff(DELETE,"n"), Diff(INSERT,"r"), Diff(EQUAL,"er("), Diff(DELETE,"graphics.Chef,java.beans."), Diff(EQUAL,"Property"), Diff(DELETE,"Change"), Diff(INSERT," "), Diff(EQUAL,"Listener)¶")]]]></diff>
  </Command>
  <Command __id="5214" _type="ShellCommand" date="Wed Mar 23 15:52:47 EDT 2022" starttimestamp="1647716908162" timestamp="348259152" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5216" _type="PauseCommand" date="Wed Mar 23 15:52:48 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348260497">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1345]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5215" _type="ConsoleOutput" date="Wed Mar 23 15:52:48 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348260497" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5217" _type="ConsoleOutput" date="Wed Mar 23 15:52:48 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348260651" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 

W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"ZIndex"), Diff(INSERT,"plate"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"nAvatar"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶")]]]></diff>
  </Command>
  <Command __id="5218" _type="ConsoleOutput" date="Wed Mar 23 15:52:48 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348260761" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"nAngle"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Patron"), Diff(INSERT,"Angle"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics."), Diff(DELETE,"Patron"), Diff(INSERT,"Angle"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Patron"), Diff(INSERT,"Angle"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Head"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(DELETE,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶")]]]></diff>
  </Command>
  <Command __id="5219" _type="ConsoleOutput" date="Wed Mar 23 15:52:49 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348261064" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.A"), Diff(DELETE,"nAngle"), Diff(INSERT,"Chef"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶"), Diff(DELETE,"W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="5221" _type="PauseCommand" date="Wed Mar 23 15:52:57 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348269202">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8138]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5220" _type="ConsoleOutput" date="Wed Mar 23 15:52:57 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348269202" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@205b3056]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@205b3056]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@205b3056]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@205b3056]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5ae47014]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5ae47014]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5ae47014]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5ae47014]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@66cf9dc2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@66cf9dc2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@66cf9dc2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@66cf9dc2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@34f69121]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@34f69121]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@34f69121]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@34f69121]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4dd6ce69]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4dd6ce69]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4dd6ce69]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4dd6ce69]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@344b6317]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@344b6317]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@344b6317]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@344b6317]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@2e70c9d1]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@2e70c9d1]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@2e70c9d1]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@2e70c9d1]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@205b3056]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@205b3056]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@205b3056]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@205b3056]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5ae47014]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5ae47014]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5ae47014]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5ae47014]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@66cf9dc2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@66cf9dc2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@66cf9dc2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@66cf9dc2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@34f69121]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@34f69121]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@34f69121]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@34f69121]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4dd6ce69]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4dd6ce69]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4dd6ce69]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4dd6ce69]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@344b6317]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@344b6317]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@344b6317]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@344b6317]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@2e70c9d1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@2e70c9d1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@2e70c9d1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@2e70c9d1]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5223" _type="PauseCommand" date="Wed Mar 23 15:53:01 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348273021">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3819]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5222" _type="ConsoleOutput" date="Wed Mar 23 15:53:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348273021" type="ConsoleOutput">
    <outputString><![CDATA[0
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@7a014f5b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@7a014f5b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@7a014f5b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@7a014f5b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@36e92e96]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@36e92e96]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@36e92e96]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@36e92e96]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@2b661eb2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@2b661eb2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@2b661eb2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@2b661eb2]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@73ff3b46]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@73ff3b46]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@73ff3b46]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@73ff3b46]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@43c8745a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@43c8745a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@43c8745a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@43c8745a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@42c2799]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@42c2799]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@42c2799]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@42c2799]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@49b9deff]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@49b9deff]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@49b9deff]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@49b9deff]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1"), Diff(INSERT,"0"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"205b3056"), Diff(INSERT,"7a014f5b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"205b3056"), Diff(INSERT,"7a014f5b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"205b3056"), Diff(INSERT,"7a014f5b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"205b3056"), Diff(INSERT,"7a014f5b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5ae47014"), Diff(INSERT,"36e92e96"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5ae47014"), Diff(INSERT,"36e92e96"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5ae47014"), Diff(INSERT,"36e92e96"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5ae47014"), Diff(INSERT,"36e92e96"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"66cf9dc"), Diff(INSERT,"2b661eb"), Diff(EQUAL,"2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"66cf9dc"), Diff(INSERT,"2b661eb"), Diff(EQUAL,"2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"66cf9dc"), Diff(INSERT,"2b661eb"), Diff(EQUAL,"2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"66cf9dc"), Diff(INSERT,"2b661eb"), Diff(EQUAL,"2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"34f69121"), Diff(INSERT,"73ff3b46"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"34f69121"), Diff(INSERT,"73ff3b46"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"34f69121"), Diff(INSERT,"73ff3b46"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"34f69121"), Diff(INSERT,"73ff3b46"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"dd6ce69"), Diff(INSERT,"3c8745a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"dd6ce69"), Diff(INSERT,"3c8745a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"dd6ce69"), Diff(INSERT,"3c8745a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"dd6ce69"), Diff(INSERT,"3c8745a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"344b6317"), Diff(INSERT,"42c2799"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"344b6317"), Diff(INSERT,"42c2799"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(EQUAL,"90; newValue="), Diff(DELETE,"39"), Diff(INSERT,"11"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"344b6317"), Diff(INSERT,"42c2799"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(EQUAL,"90; newValue="), Diff(DELETE,"39"), Diff(INSERT,"11"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"344b6317"), Diff(INSERT,"42c2799"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"63; newValue="), Diff(DELETE,"9"), Diff(INSERT,"52"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"2e70c9d1"), Diff(INSERT,"49b9deff"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"63; newValue="), Diff(DELETE,"9"), Diff(INSERT,"52"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"2e70c9d1"), Diff(INSERT,"49b9deff"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"30"), Diff(EQUAL,"1; newValue="), Diff(DELETE,"30"), Diff(INSERT,"2"), Diff(EQUAL,"1; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"2e70c9d1"), Diff(INSERT,"49b9deff"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"30"), Diff(EQUAL,"1; newValue="), Diff(DELETE,"30"), Diff(INSERT,"2"), Diff(EQUAL,"1; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"2e70c9d1]¶Moving the stove: "), Diff(INSERT,"49b9deff]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5225" _type="PauseCommand" date="Wed Mar 23 15:53:02 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348274831">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1810]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5224" _type="ShellCommand" date="Wed Mar 23 15:53:02 EDT 2022" starttimestamp="1647716908162" timestamp="348274831" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5162" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:51:08 EDT 2022" docASTNodeCount="1995" docActiveCodeLength="11082" docExpressionCount="1546" docLength="12327" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348160740">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer-Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		patronList.add(0, new APatron());¶		"), Diff(DELETE,"chefList = new ArrayList<AChef>();¶		chefList.add(0, new AChef()"), Diff(INSERT,"patronList.get(0).move(patronXValues[0], patronYValues[0]);¶		patronList.get(0).patron.getHead().setImageFileName(patronImages[0]);¶		chefList = new ArrayList<AChef>();¶		chefList.add(0, new AChef());¶		chefList.get(0).move(chefXValues[0], chefXValues[0]);¶		chefList.get(0).chef.getHead().setImageFileName(chefImages[0]"), Diff(EQUAL,");¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶//		bufferView = new ABoundedBufferView();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶		¶		patronList.clear();¶		chefList.clear();¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	public BoundedBufferView getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		//bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
@Label("Producer-Consumer Scene")
public class AProducerConsumerScene implements ProducerConsumerScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AProducerConsumerScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AProducerConsumerScene() {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		patronList.add(0, new APatron());
		patronList.get(0).move(patronXValues[0], patronYValues[0]);
		patronList.get(0).patron.getHead().setImageFileName(patronImages[0]);
		chefList = new ArrayList<AChef>();
		chefList.add(0, new AChef());
		chefList.get(0).move(chefXValues[0], chefXValues[0]);
		chefList.get(0).chef.getHead().setImageFileName(chefImages[0]);
	}
	
	@Label("Init Scene")
	public void initScene(int patronAmount, int chefAmount) {
//		bufferView = new ABoundedBufferView();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
		
		patronList.clear();
		chefList.clear();
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	
	
	@Override
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	public BoundedBufferView getBuffer() {
		return bufferView;
	}
	
	@Override
	@Label("Chef to the table")
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		//bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="5174" _type="Delete" date="Wed Mar 23 15:52:00 EDT 2022" docASTNodeCount="1995" docActiveCodeLength="11081" docExpressionCount="1546" docLength="12326" endLine="86" length="1" offset="2706" startLine="86" starttimestamp="1647716908162" timestamp="348212482">
    <text><![CDATA[X]]></text>
  </DocumentChange>
  <DocumentChange __id="5177" _type="Insert" date="Wed Mar 23 15:52:00 EDT 2022" docASTNodeCount="1995" docActiveCodeLength="11082" docExpressionCount="1546" docLength="12327" length="1" offset="2706" starttimestamp="1647716908162" timestamp="348212676">
    <text><![CDATA[Y]]></text>
  </DocumentChange>
  <Command __id="5227" _type="PauseCommand" date="Wed Mar 23 15:53:07 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348279513">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4682]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5228" _type="MoveCaretCommand" caretOffset="298" date="Wed Mar 23 15:53:07 EDT 2022" docOffset="560" starttimestamp="1647716908162" timestamp="348279826" />
  <Command __id="5226" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:53:07 EDT 2022" docASTNodeCount="213" docActiveCodeLength="1414" docExpressionCount="138" docLength="1414" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348279513">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\APlate.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeEvent;

import javax.swing.ImageIcon;

import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.models.PropertyListenerRegisterer;

@StructurePattern(StructurePatternNames.IMAGE_PATTERN)
@PropertyNames({
	"x",
	"y",
	"height",
	"width",
	"imageFileName",
	"ZIndex"
})
@EditablePropertyNames({
	"x",
	"y",
	"height",
	"width",
	"imageFileName",
	"ZIndex"
})
public class APlate extends ABoundedShape implements Plate, PropertyListenerRegisterer {
	
	int x;
	int y;
	int height, width;
	String imageFileName;
	private ImageIcon icon;
	
	public APlate() {
		icon = new ImageIcon(imageFileName);
	}

	@Override
	public String getImageFileName() {
		return imageFileName;
	}

	@Override
	public void setImageFileName(String newName) {
		String oldImageFileName = imageFileName;
		imageFileName = newName;
		this.icon = new ImageIcon(imageFileName);
		
		propertySupport.notifyAllListeners(new PropertyChangeEvent (this, "ImageFileName", oldImageFileName, getImageFileName()));
	}

	@Override
	public void move(int newX, int newY) {
		setX(getX() + newX);
		setY(getY() + newY);
	}

	@Override
	public void moveTo(int newX, int newY) {
		setX(newX);
		setY(newY);
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="5230" _type="PauseCommand" date="Wed Mar 23 15:53:16 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348288789">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8963]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5231" _type="MoveCaretCommand" caretOffset="2093" date="Wed Mar 23 15:53:17 EDT 2022" docOffset="2789" starttimestamp="1647716908162" timestamp="348289480" />
  <Command __id="5233" _type="PauseCommand" date="Wed Mar 23 15:53:46 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="348318755">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[29275]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5232" _type="MoveCaretCommand" caretOffset="5694" date="Wed Mar 23 15:53:46 EDT 2022" docOffset="6390" starttimestamp="1647716908162" timestamp="348318755" />
  <Command __id="5234" _type="MoveCaretCommand" caretOffset="5694" date="Wed Mar 23 15:53:46 EDT 2022" docOffset="6390" starttimestamp="1647716908162" timestamp="348318755" />
  <Command __id="5229" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:53:16 EDT 2022" docASTNodeCount="1995" docActiveCodeLength="11082" docExpressionCount="1546" docLength="12327" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348288789">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import javax.swing.BoxLayout;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import factories.AFactory;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.ObserverRegisterer;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Visible;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"patronList",¶	"chefList",¶	"buffer"¶})¶@EditablePropertyNames({¶})¶@Label("Producer-Consumer Scene")¶public class AProducerConsumerScene implements ProducerConsumerScene {¶	List<APatron> patronList;¶	List<AChef> chefList;¶	BoundedBufferView bufferView;¶	List<APlate> plateList;¶	¶	int maxAmountofAvatars;¶	¶	int Patron_X = 1000;¶	int Chef_X = 50;¶	int AvatarA_Y = 50;¶	int AvatarB_Y = 200;¶	int AvatarC_Y = 320;¶	int AvatarD_Y = 450;¶	¶	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};¶	String[] patronImages = {"images/6.png", "", "", "", "", ""};¶	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};¶	int[] chefXValues = {150,50,50,150};¶	int[] chefYValues = {50,150,350,450};¶	int[] patronXValues = {1000,1100,1100,1000};¶	int[] patronYValues = {50,150,350,450};¶	¶	char zero = '0';¶	char one = '1';¶	char two = '2';¶	char three = '3';¶	char four = '4';¶	char five = '5';¶	char six = '6';¶	¶	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};¶	¶	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};¶	¶	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public AProducerConsumerScene(int patronAmount, int chefAmount) {¶	¶		initScene(patronAmount, chefAmount);¶		¶	}¶	¶	public AProducerConsumerScene() {¶		bufferView = new ABoundedBufferView();¶		patronList = new ArrayList<APatron>();¶		patronList.add(0, new APatron());¶		patronList.get(0).move(patronXValues[0], patronYValues[0]);¶		patronList.get(0).patron.getHead().setImageFileName(patronImages[0]);¶		chefList = new ArrayList<AChef>();¶		chefList.add(0, new AChef());¶		chefList.get(0).move(chefXValues[0], chef"), Diff(DELETE,"X"), Diff(INSERT,"Y"), Diff(EQUAL,"Values[0]);¶		chefList.get(0).chef.getHead().setImageFileName(chefImages[0]);¶	}¶	¶	@Label("Init Scene")¶	public void initScene(int patronAmount, int chefAmount) {¶//		bufferView = new ABoundedBufferView();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶		¶		patronList.clear();¶		chefList.clear();¶		for (int i=0; i<patronAmount; i++) { ¶			APatron patron = new APatron();¶			patronList.add(i, patron);¶			patron.move(patronXValues[i], patronYValues[i]);¶			patron.patron.getHead().setImageFileName(patronImages[i]);¶			patron.patron.getArms().removeArms();¶		}¶		for (int i=0; i<chefAmount; i++) {¶			AChef chef = new AChef();¶			chefList.add(i, chef);¶			chef.move(chefXValues[i], chefYValues[i]);¶			chef.chef.getHead().setImageFileName(chefImages[i]);¶		}¶		¶		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);¶		Controller control = new AController(console);¶		¶		//JFrame frame = new JFrame();¶		//frame.add((Component) console, BorderLayout.CENTER);¶		//frame.setSize(1000, 1000);¶		//frame.setVisible(true);¶		¶		¶		//JPanel panel = new JPanel();¶		//JButton button1 = control.getChefToBuffer();¶		//panel.add(button1);¶		//frame.add(panel);¶		¶		main.MainClass.moveAvatar();¶	¶	} ¶	¶//	public void initSceneTwo(int patronAmount, int chefAmount) {¶//		buffer = new ABuffer();¶//		patronList = new ArrayList<APatron>();¶//		chefList = new ArrayList<AChef>();¶//		¶//		for (int i=0; i<patronAmount; i++) { ¶//			APatron patron = new APatron();¶//			patronList.add(i, patron);¶//			patron.move(patronXValues[i], patronYValues[i]);¶//			patron.patron.getHead().setImageFileName(patronImages[i]);¶//			patron.patron.getArms().removeArms();¶//		}¶//		for (int i=0; i<chefAmount; i++) {¶//			AChef chef = new AChef();¶//			chefList.add(i, chef);¶//			chef.move(chefXValues[i], chefYValues[i]);¶//			chef.chef.getHead().setImageFileName(chefImages[i]);¶//		}¶//		¶//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);¶//		main.MainClass.animatePainterTwo(view);¶//		¶//	}¶	¶	¶	¶	@Override¶	public List<APatron> getPatronList() {¶		return patronList;¶	}¶¶¶	@Override¶	public List<AChef> getChefList() {¶		return chefList;¶	}¶¶	@Override¶	public BoundedBufferView getBuffer() {¶		return bufferView;¶	}¶	¶	@Override¶	@Label("Chef to the table")¶	public void chefToTable(Head aHead) {¶		int min = 0;¶		int max = 8;¶		int buffer = bufferView.getBoundedBuffer().get();¶		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);¶		System.out.println(buffer);¶		¶		if (buffer == 0 && bufferOccupied[0] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 1 && bufferOccupied[1] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 2 && bufferOccupied[2] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 3 && bufferOccupied[3] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 4 && bufferOccupied[4] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 5 && bufferOccupied[5] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 6 && bufferOccupied[6] == true) {¶			System.out.println("Table already occupied!");¶		} else if (buffer == 7 && bufferOccupied[7] == true) {¶			System.out.println("Table already occupied!");¶		}¶		¶		if (buffer == 0 && bufferOccupied[0] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 20);¶				chefList.get(0).getChef().dropPlate(plateImages[dish]);¶				//chefList.get(0).getChef().goBack(-360, -20);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, -15);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, -275);¶				bufferOccupied[0] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -375);¶				bufferOccupied[0] = true;¶			}¶			bufferView.getBoundedBuffer().put(0);¶			¶		} else if (buffer == 1 && bufferOccupied[1] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 20);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, -15);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, -275);¶				bufferOccupied[1] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -375);¶				bufferOccupied[1] = true;¶			}¶			bufferView.getBoundedBuffer().put(1);¶			¶		} else if (buffer == 2 && bufferOccupied[2] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 150);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 0);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -200);¶				bufferOccupied[2] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -300);¶				bufferOccupied[2] = true;¶			}¶			bufferView.getBoundedBuffer().put(2);¶			¶		} else if (buffer == 3 && bufferOccupied[3] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(510, 250);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(600, 100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(580, -100);¶				bufferOccupied[3] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(510, -200);¶				bufferOccupied[3] = true;¶			}¶			bufferView.getBoundedBuffer().put(3);¶			¶		} else if (buffer == 4 && bufferOccupied[4] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(460, 270);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(530, 200);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(530, 0);¶				bufferOccupied[4] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(460, -110);¶				bufferOccupied[4] = true;¶			}¶			bufferView.getBoundedBuffer().put(4);¶			¶		} else if (buffer == 5 && bufferOccupied[5] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(360, 270);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(430, 200);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(430, 0);¶				bufferOccupied[5] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(360, -110);¶				bufferOccupied[5] = true;¶			}¶			bufferView.getBoundedBuffer().put(5);¶			¶		} else if (buffer == 6 && bufferOccupied[6] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 220);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -100);¶				bufferOccupied[6] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -200);¶				bufferOccupied[6] = true;¶			}¶			bufferView.getBoundedBuffer().put(6);¶			¶		} else if (buffer == 7 && bufferOccupied[7] == false) {¶			¶			if (aHead.getImageFileName().charAt(7) == zero) {¶				chefList.get(0).getChef().move(300, 150);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == one) {¶				chefList.get(1).getChef().move(380, 50);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == four) {¶				chefList.get(2).getChef().move(380, -160);¶				bufferOccupied[7] = true;¶			} else if (aHead.getImageFileName().charAt(7) == three) {¶				chefList.get(3).getChef().move(300, -280);¶				bufferOccupied[7] = true;¶			}¶			bufferView.getBoundedBuffer().put(7);¶			¶		}¶		¶	}¶	¶	public boolean preProcessFirstBufferChef() {¶		return true;¶	}¶	¶	public void processHeads(Head aHead) {¶		System.out.println("Do head" + aHead.getImageFileName());¶	}¶	¶	public boolean preProcessHeads() {¶		return true;¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		for (int i = 0; i<patronList.size(); i++) {¶			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);¶		}¶		for (int i = 0; i<chefList.size(); i++) {¶			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);¶		}¶		//bufferView.addPropertyChangeListener(arg0);¶	}¶¶	¶	¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

import controls.AController;
import controls.ConsoleSceneView;
import controls.Controller;
import factories.AFactory;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.ObserverRegisterer;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"patronList",
	"chefList",
	"buffer"
})
@EditablePropertyNames({
})
@Label("Producer-Consumer Scene")
public class AProducerConsumerScene implements ProducerConsumerScene {
	List<APatron> patronList;
	List<AChef> chefList;
	BoundedBufferView bufferView;
	List<APlate> plateList;
	
	int maxAmountofAvatars;
	
	int Patron_X = 1000;
	int Chef_X = 50;
	int AvatarA_Y = 50;
	int AvatarB_Y = 200;
	int AvatarC_Y = 320;
	int AvatarD_Y = 450;
	
	String[] chefImages = {"images/0.png","images/1.png","images/4.png","images/3.png"};
	String[] patronImages = {"images/6.png", "", "", "", "", ""};
	String[] plateImages = {"images/12.png", "images/13.png", "images/14.png", "images/15.png", "images/16.png", "images/17.png", "images/18.png", "images/19.png", "images/20.png"};
	int[] chefXValues = {150,50,50,150};
	int[] chefYValues = {50,150,350,450};
	int[] patronXValues = {1000,1100,1100,1000};
	int[] patronYValues = {50,150,350,450};
	
	char zero = '0';
	char one = '1';
	char two = '2';
	char three = '3';
	char four = '4';
	char five = '5';
	char six = '6';
	
	boolean[] bufferOccupied = {false, false, false, false, false, false, false, false};
	
	int[] yValues = {AvatarA_Y, AvatarB_Y, AvatarC_Y, AvatarD_Y};
	
	List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public AProducerConsumerScene(int patronAmount, int chefAmount) {
	
		initScene(patronAmount, chefAmount);
		
	}
	
	public AProducerConsumerScene() {
		bufferView = new ABoundedBufferView();
		patronList = new ArrayList<APatron>();
		patronList.add(0, new APatron());
		patronList.get(0).move(patronXValues[0], patronYValues[0]);
		patronList.get(0).patron.getHead().setImageFileName(patronImages[0]);
		chefList = new ArrayList<AChef>();
		chefList.add(0, new AChef());
		chefList.get(0).move(chefXValues[0], chefYValues[0]);
		chefList.get(0).chef.getHead().setImageFileName(chefImages[0]);
	}
	
	@Label("Init Scene")
	public void initScene(int patronAmount, int chefAmount) {
//		bufferView = new ABoundedBufferView();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
		
		patronList.clear();
		chefList.clear();
		for (int i=0; i<patronAmount; i++) { 
			APatron patron = new APatron();
			patronList.add(i, patron);
			patron.move(patronXValues[i], patronYValues[i]);
			patron.patron.getHead().setImageFileName(patronImages[i]);
			patron.patron.getArms().removeArms();
		}
		for (int i=0; i<chefAmount; i++) {
			AChef chef = new AChef();
			chefList.add(i, chef);
			chef.move(chefXValues[i], chefYValues[i]);
			chef.chef.getHead().setImageFileName(chefImages[i]);
		}
		
		ConsoleSceneView console = AFactory.ConsoleSceneViewFactoryMethod(chefAmount, patronAmount);
		Controller control = new AController(console);
		
		//JFrame frame = new JFrame();
		//frame.add((Component) console, BorderLayout.CENTER);
		//frame.setSize(1000, 1000);
		//frame.setVisible(true);
		
		
		//JPanel panel = new JPanel();
		//JButton button1 = control.getChefToBuffer();
		//panel.add(button1);
		//frame.add(panel);
		
		main.MainClass.moveAvatar();
	
	} 
	
//	public void initSceneTwo(int patronAmount, int chefAmount) {
//		buffer = new ABuffer();
//		patronList = new ArrayList<APatron>();
//		chefList = new ArrayList<AChef>();
//		
//		for (int i=0; i<patronAmount; i++) { 
//			APatron patron = new APatron();
//			patronList.add(i, patron);
//			patron.move(patronXValues[i], patronYValues[i]);
//			patron.patron.getHead().setImageFileName(patronImages[i]);
//			patron.patron.getArms().removeArms();
//		}
//		for (int i=0; i<chefAmount; i++) {
//			AChef chef = new AChef();
//			chefList.add(i, chef);
//			chef.move(chefXValues[i], chefYValues[i]);
//			chef.chef.getHead().setImageFileName(chefImages[i]);
//		}
//		
//		Painter view = AFactory.PainterFactoryMethod(chefAmount, patronAmount);
//		main.MainClass.animatePainterTwo(view);
//		
//	}
	
	
	
	@Override
	public List<APatron> getPatronList() {
		return patronList;
	}


	@Override
	public List<AChef> getChefList() {
		return chefList;
	}

	@Override
	public BoundedBufferView getBuffer() {
		return bufferView;
	}
	
	@Override
	@Label("Chef to the table")
	public void chefToTable(Head aHead) {
		int min = 0;
		int max = 8;
		int buffer = bufferView.getBoundedBuffer().get();
		int dish = (int) Math.floor(Math.random()*(max-min+1)+min);
		System.out.println(buffer);
		
		if (buffer == 0 && bufferOccupied[0] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 1 && bufferOccupied[1] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 2 && bufferOccupied[2] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 3 && bufferOccupied[3] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 4 && bufferOccupied[4] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 5 && bufferOccupied[5] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 6 && bufferOccupied[6] == true) {
			System.out.println("Table already occupied!");
		} else if (buffer == 7 && bufferOccupied[7] == true) {
			System.out.println("Table already occupied!");
		}
		
		if (buffer == 0 && bufferOccupied[0] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 20);
				chefList.get(0).getChef().dropPlate(plateImages[dish]);
				//chefList.get(0).getChef().goBack(-360, -20);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, -15);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, -275);
				bufferOccupied[0] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -375);
				bufferOccupied[0] = true;
			}
			bufferView.getBoundedBuffer().put(0);
			
		} else if (buffer == 1 && bufferOccupied[1] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 20);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, -15);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, -275);
				bufferOccupied[1] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -375);
				bufferOccupied[1] = true;
			}
			bufferView.getBoundedBuffer().put(1);
			
		} else if (buffer == 2 && bufferOccupied[2] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 150);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 0);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -200);
				bufferOccupied[2] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -300);
				bufferOccupied[2] = true;
			}
			bufferView.getBoundedBuffer().put(2);
			
		} else if (buffer == 3 && bufferOccupied[3] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(510, 250);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(600, 100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(580, -100);
				bufferOccupied[3] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(510, -200);
				bufferOccupied[3] = true;
			}
			bufferView.getBoundedBuffer().put(3);
			
		} else if (buffer == 4 && bufferOccupied[4] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(460, 270);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(530, 200);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(530, 0);
				bufferOccupied[4] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(460, -110);
				bufferOccupied[4] = true;
			}
			bufferView.getBoundedBuffer().put(4);
			
		} else if (buffer == 5 && bufferOccupied[5] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(360, 270);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(430, 200);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(430, 0);
				bufferOccupied[5] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(360, -110);
				bufferOccupied[5] = true;
			}
			bufferView.getBoundedBuffer().put(5);
			
		} else if (buffer == 6 && bufferOccupied[6] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 220);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -100);
				bufferOccupied[6] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -200);
				bufferOccupied[6] = true;
			}
			bufferView.getBoundedBuffer().put(6);
			
		} else if (buffer == 7 && bufferOccupied[7] == false) {
			
			if (aHead.getImageFileName().charAt(7) == zero) {
				chefList.get(0).getChef().move(300, 150);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == one) {
				chefList.get(1).getChef().move(380, 50);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == four) {
				chefList.get(2).getChef().move(380, -160);
				bufferOccupied[7] = true;
			} else if (aHead.getImageFileName().charAt(7) == three) {
				chefList.get(3).getChef().move(300, -280);
				bufferOccupied[7] = true;
			}
			bufferView.getBoundedBuffer().put(7);
			
		}
		
	}
	
	public boolean preProcessFirstBufferChef() {
		return true;
	}
	
	public void processHeads(Head aHead) {
		System.out.println("Do head" + aHead.getImageFileName());
	}
	
	public boolean preProcessHeads() {
		return true;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		for (int i = 0; i<patronList.size(); i++) {
			patronList.get(i).addPropertyChangeListener(patronList.get(i), arg0);
		}
		for (int i = 0; i<chefList.size(); i++) {
			chefList.get(i).addPropertyChangeListener(chefList.get(i), arg0);
		}
		//bufferView.addPropertyChangeListener(arg0);
	}

	
	
	
	
}
]]></snapshot>
  </Command>
  <Command __id="5236" _type="PauseCommand" date="Wed Mar 23 15:53:50 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348322332">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3577]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5237" _type="SelectTextCommand" caretOffset="684" date="Wed Mar 23 15:53:50 EDT 2022" end="684" start="675" starttimestamp="1647716908162" timestamp="348322477" />
  <Command __id="5238" _type="SelectTextCommand" caretOffset="684" date="Wed Mar 23 15:53:50 EDT 2022" end="684" start="675" starttimestamp="1647716908162" timestamp="348322609" />
  <Command __id="5235" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:53:50 EDT 2022" docASTNodeCount="149" docActiveCodeLength="775" docExpressionCount="61" docLength="775" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348322332">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\Avatar.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeListener;

public interface Avatar {

	public Angle getArms();
	public Angle getLegs();
	public Line getTorso();
	public Line getNeck();
	public StringShape getText();
	public void setText(StringShape NewText);
	public Head getHead();
	public void setHead(Head NewHead);
	public void move(int X, int Y);
	void setArms(Angle NewArms);
	void setLegs(Angle NewLegs);
	void setNeck(Line newNeck);
	void setTorso(Line NewTorso);
	void scale(double ratio);
	void addPropertyChangeListener(Avatar avatarParameter, PropertyChangeListener aListener);
	void moveTo(int newX, int newY);
	Plate getPlate();
	void dropPlate(String imageName);
	void goBack(int X, int Y);
	void setPlate(Plate newPlate);

	
}
]]></snapshot>
  </Command>
  <Command __id="5240" _type="PauseCommand" date="Wed Mar 23 15:53:55 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348326910">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4300]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5241" _type="MoveCaretCommand" caretOffset="1633" date="Wed Mar 23 15:53:55 EDT 2022" docOffset="1633" starttimestamp="1647716908162" timestamp="348327743" />
  <Command __id="5243" _type="PauseCommand" date="Wed Mar 23 15:54:01 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348333113">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5370]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5242" _type="MoveCaretCommand" caretOffset="2853" date="Wed Mar 23 15:54:01 EDT 2022" docOffset="2853" starttimestamp="1647716908162" timestamp="348333113" />
  <Command __id="5244" _type="MoveCaretCommand" caretOffset="2853" date="Wed Mar 23 15:54:01 EDT 2022" docOffset="2853" starttimestamp="1647716908162" timestamp="348333113" />
  <Command __id="5239" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:53:55 EDT 2022" docASTNodeCount="851" docActiveCodeLength="4627" docExpressionCount="578" docLength="4627" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348326909">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AnAvatar.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶import java.beans.PropertyChangeListener;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"Arms",¶	"Legs",¶	"Neck",¶	"Torso",¶	"head",¶	"text",¶	"plate"¶})¶@EditablePropertyNames({¶	"Arms",¶	"Legs",¶	"Neck",¶	"Torso",¶	"head",¶	"text"¶})¶public class AnAvatar implements Avatar {¶	Angle Legs;¶	Angle Arms;¶	Line Torso;¶	Line Neck;¶	StringShape text;¶	Head head;¶	String headImage = "";¶	String plateImage = ""), Diff(INSERT,"images/12.png"), Diff(EQUAL,"";¶	Plate plate;¶	¶	int INIT_X = 50;¶	int INIT_Y = 50;¶	int INIT_Radius = 20;¶	int INIT_Neck = 10;¶	int INIT_Head = 99;¶¶	¶	public AnAvatar() {¶		Legs = new AnAngle();¶		Legs.moveX(INIT_X);¶		Legs.moveY(INIT_Y+40);¶		Arms = new AnAngle();¶		Arms.moveX(INIT_X);¶		Arms.moveY(INIT_Y);¶		Torso = new ALine();¶		Torso.setX(INIT_X);¶		Torso.setY(INIT_X);¶		Neck = new ALine();¶		Neck.setHeight(10);¶		Neck.setWidth(0);¶		Neck.setRadius(INIT_Radius);¶		Neck.setX(INIT_X);¶		Neck.setY(INIT_Y-INIT_Neck);¶		head = new AHead();¶		text = new AStringShape();¶		text.setText("");¶		head.setImageFileName(headImage);¶		head.setX(13);¶		head.setY(INIT_Y-INIT_Head);¶		head.setHeight(90);¶		head.setWidth(80);¶		plate = new APlate();¶		plate.setImageFileName(plateImage);¶		plate.setHeight(0);¶		plate.setWidth(0);¶		plate.setX(INIT_X-20);¶		plate.setY(INIT_Y+30);¶		plate.setZIndex(60000);¶	}¶	¶	@Override¶	public Plate getPlate() {¶		return plate;¶	}¶¶	@Override¶	public void setPlate(Plate newPlate) {¶		plate = newPlate;¶	}¶¶	@Override¶	public Angle getArms() {¶		return Arms;¶	}¶	¶	@Override¶	public void setArms(Angle NewArms) {¶		Arms = NewArms;¶	}¶¶¶	@Override¶	public Angle getLegs() {¶		return Legs;¶	}¶	¶	@Override¶	public void setLegs(Angle NewLegs) {¶		Legs = NewLegs;¶	}¶¶¶	@Override¶	public Line getTorso() {¶		return Torso;¶	}¶	¶	@Override¶	public void setTorso(Line NewTorso) {¶		Torso = NewTorso;¶	}¶¶¶	@Override¶	public Line getNeck() {¶		return Neck;¶	}¶	¶	@Override¶	public void setNeck(Line newNeck) {¶		Neck = newNeck;¶	}¶	¶	@Override¶	public StringShape getText() {¶		return text;¶	}¶	¶	@Override¶	public void setText(StringShape NewText) {¶		text = NewText;¶	}¶	¶¶	@Override¶	public Head getHead() {¶		return head;¶	}¶¶	@Override¶	public void setHead(Head NewHead) {¶		head = NewHead;¶	}¶	¶	@Override¶	public void dropPlate(String imageName) {¶		plate.setImageFileName(imageName);¶		plate.setHeight(40);¶		plate.setWidth(40);¶	}¶	¶	@Override¶	public void goBack(int X, int Y) {¶		Legs.move(X, Y);¶		Arms.move(X, Y);¶		Torso.move(X, Y);¶		Neck.move(X, Y);¶		head.move(X, Y);¶	}¶	¶	@Override¶	public void move(int X, int Y) {¶		Legs.move(X, Y);¶		Arms.move(X, Y);¶		Torso.move(X, Y);¶		Neck.move(X, Y);¶		head.move(X, Y);¶		plate.move(X, Y);¶	}¶	¶	@Override¶	public void moveTo(int newX, int newY) {¶		Legs.moveTo(newX, newY);¶		Arms.moveTo(newX, newY);¶		Torso.moveTo(newX, newY);¶		Neck.moveTo(newX, newY);¶		head.moveTo(newX, newY);	¶		plate.moveTo(newX, newY);¶	}¶	¶	@Override¶	public void scale(double ratio) {¶		Legs.getRightLine().setRadius(Legs.getRightLine().getRadius()*ratio);¶		Legs.getLeftLine().setRadius(Legs.getLeftLine().getRadius()*ratio);¶		Arms.getRightLine().setRadius(Arms.getRightLine().getRadius()*ratio);¶		Arms.getLeftLine().setRadius(Arms.getLeftLine().getRadius()*ratio);¶		Neck.setRadius(Neck.getRadius()*ratio);¶		Torso.setRadius(Torso.getRadius()*ratio);¶	}¶	¶	¶	@Override¶	public void addPropertyChangeListener(Avatar avatarParameter, PropertyChangeListener aListener) {¶		avatarParameter.getArms().addPropertyChangeListener(getArms(), aListener);¶		avatarParameter.getLegs().addPropertyChangeListener(getLegs(), aListener);¶		avatarParameter.getHead().addPropertyChangeListener(aListener);¶		avatarParameter.getNeck().addPropertyChangeListener(aListener);¶		avatarParameter.getTorso().addPropertyChangeListener(aListener);¶		avatarParameter.getText().addPropertyChangeListener(aListener);¶	}¶	¶	public static void main(String[] args) {¶		Avatar scene = new AnAvatar();¶		scene.getHead().setImageFileName("images/0.png");¶		OEFrame editor = ObjectEditor.edit(scene);¶		editor.showDrawPanel();¶	}¶¶¶¶¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;
import java.beans.PropertyChangeListener;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.misc.ThreadSupport;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"Arms",
	"Legs",
	"Neck",
	"Torso",
	"head",
	"text",
	"plate"
})
@EditablePropertyNames({
	"Arms",
	"Legs",
	"Neck",
	"Torso",
	"head",
	"text"
})
public class AnAvatar implements Avatar {
	Angle Legs;
	Angle Arms;
	Line Torso;
	Line Neck;
	StringShape text;
	Head head;
	String headImage = "";
	String plateImage = "images/12.png";
	Plate plate;
	
	int INIT_X = 50;
	int INIT_Y = 50;
	int INIT_Radius = 20;
	int INIT_Neck = 10;
	int INIT_Head = 99;

	
	public AnAvatar() {
		Legs = new AnAngle();
		Legs.moveX(INIT_X);
		Legs.moveY(INIT_Y+40);
		Arms = new AnAngle();
		Arms.moveX(INIT_X);
		Arms.moveY(INIT_Y);
		Torso = new ALine();
		Torso.setX(INIT_X);
		Torso.setY(INIT_X);
		Neck = new ALine();
		Neck.setHeight(10);
		Neck.setWidth(0);
		Neck.setRadius(INIT_Radius);
		Neck.setX(INIT_X);
		Neck.setY(INIT_Y-INIT_Neck);
		head = new AHead();
		text = new AStringShape();
		text.setText("");
		head.setImageFileName(headImage);
		head.setX(13);
		head.setY(INIT_Y-INIT_Head);
		head.setHeight(90);
		head.setWidth(80);
		plate = new APlate();
		plate.setImageFileName(plateImage);
		plate.setHeight(0);
		plate.setWidth(0);
		plate.setX(INIT_X-20);
		plate.setY(INIT_Y+30);
		plate.setZIndex(60000);
	}
	
	@Override
	public Plate getPlate() {
		return plate;
	}

	@Override
	public void setPlate(Plate newPlate) {
		plate = newPlate;
	}

	@Override
	public Angle getArms() {
		return Arms;
	}
	
	@Override
	public void setArms(Angle NewArms) {
		Arms = NewArms;
	}


	@Override
	public Angle getLegs() {
		return Legs;
	}
	
	@Override
	public void setLegs(Angle NewLegs) {
		Legs = NewLegs;
	}


	@Override
	public Line getTorso() {
		return Torso;
	}
	
	@Override
	public void setTorso(Line NewTorso) {
		Torso = NewTorso;
	}


	@Override
	public Line getNeck() {
		return Neck;
	}
	
	@Override
	public void setNeck(Line newNeck) {
		Neck = newNeck;
	}
	
	@Override
	public StringShape getText() {
		return text;
	}
	
	@Override
	public void setText(StringShape NewText) {
		text = NewText;
	}
	

	@Override
	public Head getHead() {
		return head;
	}

	@Override
	public void setHead(Head NewHead) {
		head = NewHead;
	}
	
	@Override
	public void dropPlate(String imageName) {
		plate.setImageFileName(imageName);
		plate.setHeight(40);
		plate.setWidth(40);
	}
	
	@Override
	public void goBack(int X, int Y) {
		Legs.move(X, Y);
		Arms.move(X, Y);
		Torso.move(X, Y);
		Neck.move(X, Y);
		head.move(X, Y);
	}
	
	@Override
	public void move(int X, int Y) {
		Legs.move(X, Y);
		Arms.move(X, Y);
		Torso.move(X, Y);
		Neck.move(X, Y);
		head.move(X, Y);
		plate.move(X, Y);
	}
	
	@Override
	public void moveTo(int newX, int newY) {
		Legs.moveTo(newX, newY);
		Arms.moveTo(newX, newY);
		Torso.moveTo(newX, newY);
		Neck.moveTo(newX, newY);
		head.moveTo(newX, newY);	
		plate.moveTo(newX, newY);
	}
	
	@Override
	public void scale(double ratio) {
		Legs.getRightLine().setRadius(Legs.getRightLine().getRadius()*ratio);
		Legs.getLeftLine().setRadius(Legs.getLeftLine().getRadius()*ratio);
		Arms.getRightLine().setRadius(Arms.getRightLine().getRadius()*ratio);
		Arms.getLeftLine().setRadius(Arms.getLeftLine().getRadius()*ratio);
		Neck.setRadius(Neck.getRadius()*ratio);
		Torso.setRadius(Torso.getRadius()*ratio);
	}
	
	
	@Override
	public void addPropertyChangeListener(Avatar avatarParameter, PropertyChangeListener aListener) {
		avatarParameter.getArms().addPropertyChangeListener(getArms(), aListener);
		avatarParameter.getLegs().addPropertyChangeListener(getLegs(), aListener);
		avatarParameter.getHead().addPropertyChangeListener(aListener);
		avatarParameter.getNeck().addPropertyChangeListener(aListener);
		avatarParameter.getTorso().addPropertyChangeListener(aListener);
		avatarParameter.getText().addPropertyChangeListener(aListener);
	}
	
	public static void main(String[] args) {
		Avatar scene = new AnAvatar();
		scene.getHead().setImageFileName("images/0.png");
		OEFrame editor = ObjectEditor.edit(scene);
		editor.showDrawPanel();
	}




	
}
]]></snapshot>
  </Command>
  <Command __id="5246" _type="PauseCommand" date="Wed Mar 23 15:54:03 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348334901">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1788]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="5247" _type="InsertStringCommand" date="Wed Mar 23 15:54:03 EDT 2022" starttimestamp="1647716908162" timestamp="348334931" timestamp2="348334931">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5248" _type="InsertStringCommand" date="Wed Mar 23 15:54:03 EDT 2022" starttimestamp="1647716908162" timestamp="348334931" timestamp2="348334931">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5250" _type="InsertStringCommand" date="Wed Mar 23 15:54:04 EDT 2022" starttimestamp="1647716908162" timestamp="348335926" timestamp2="348335926">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5251" _type="InsertStringCommand" date="Wed Mar 23 15:54:04 EDT 2022" starttimestamp="1647716908162" timestamp="348335926" timestamp2="348335926">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="5253" _type="InsertStringCommand" date="Wed Mar 23 15:54:04 EDT 2022" starttimestamp="1647716908162" timestamp="348336085" timestamp2="348336085">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5254" _type="InsertStringCommand" date="Wed Mar 23 15:54:04 EDT 2022" starttimestamp="1647716908162" timestamp="348336085" timestamp2="348336085">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="5256" _type="InsertStringCommand" date="Wed Mar 23 15:54:04 EDT 2022" starttimestamp="1647716908162" timestamp="348336206" timestamp2="348336206">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5257" _type="InsertStringCommand" date="Wed Mar 23 15:54:04 EDT 2022" starttimestamp="1647716908162" timestamp="348336206" timestamp2="348336206">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="5259" _type="InsertStringCommand" date="Wed Mar 23 15:54:04 EDT 2022" starttimestamp="1647716908162" timestamp="348336335" timestamp2="348336335">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5260" _type="InsertStringCommand" date="Wed Mar 23 15:54:04 EDT 2022" starttimestamp="1647716908162" timestamp="348336335" timestamp2="348336335">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5262" _type="InsertStringCommand" date="Wed Mar 23 15:54:04 EDT 2022" starttimestamp="1647716908162" timestamp="348336413" timestamp2="348336413">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5263" _type="InsertStringCommand" date="Wed Mar 23 15:54:04 EDT 2022" starttimestamp="1647716908162" timestamp="348336413" timestamp2="348336413">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5265" _type="InsertStringCommand" date="Wed Mar 23 15:54:04 EDT 2022" starttimestamp="1647716908162" timestamp="348336558" timestamp2="348336558">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5266" _type="InsertStringCommand" date="Wed Mar 23 15:54:04 EDT 2022" starttimestamp="1647716908162" timestamp="348336558" timestamp2="348336558">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5267" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:54:04 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="348336563" />
  <Command __id="5272" _type="PauseCommand" date="Wed Mar 23 15:54:07 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348339669">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3106]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="5289" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:54:16 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348348576" type="Run" />
  <Command __id="5291" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:54:16 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348348576" type="Run" />
  <Command __id="5293" _type="PauseCommand" date="Wed Mar 23 15:54:18 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348350329">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1753]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5292" _type="ConsoleOutput" date="Wed Mar 23 15:54:18 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348350329" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"0¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@7a014f5b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@7a014f5b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@7a014f5b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@7a014f5b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@36e92e96]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@36e92e96]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@36e92e96]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@36e92e96]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@2b661eb2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@2b661eb2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@2b661eb2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@2b661eb2]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@73ff3b46]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@73ff3b46]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@73ff3b46]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@73ff3b46]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@43c8745a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@43c8745a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@43c8745a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@43c8745a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@42c2799]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@42c2799]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@42c2799]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@42c2799]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@49b9deff]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@49b9deff]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@49b9deff]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@49b9deff]"), Diff(INSERT,"W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5294" _type="ShellCommand" date="Wed Mar 23 15:54:19 EDT 2022" starttimestamp="1647716908162" timestamp="348350943" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5296" _type="PauseCommand" date="Wed Mar 23 15:54:20 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348352167">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1224]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5295" _type="ConsoleOutput" date="Wed Mar 23 15:54:20 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348352167" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5297" _type="ConsoleOutput" date="Wed Mar 23 15:54:20 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348352379" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 

W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"ZIndex"), Diff(INSERT,"plate"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"nAvatar"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶")]]]></diff>
  </Command>
  <Command __id="5298" _type="ConsoleOutput" date="Wed Mar 23 15:54:20 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348352471" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Head"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(DELETE,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶")]]]></diff>
  </Command>
  <Command __id="5299" _type="ConsoleOutput" date="Wed Mar 23 15:54:20 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348352771" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5301" _type="PauseCommand" date="Wed Mar 23 15:54:29 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348361220">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8449]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5300" _type="ConsoleOutput" date="Wed Mar 23 15:54:29 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348361220" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@66a23452]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@66a23452]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@66a23452]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@66a23452]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@35113af0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@35113af0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@35113af0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@35113af0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6542a7fa]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6542a7fa]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6542a7fa]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6542a7fa]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2a4e4249]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2a4e4249]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2a4e4249]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2a4e4249]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5d39e3f6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5d39e3f6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5d39e3f6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5d39e3f6]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6143941b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6143941b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@6143941b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@6143941b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@114e82be]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@114e82be]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@114e82be]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@114e82be]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@66a23452]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@66a23452]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@66a23452]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@66a23452]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@35113af0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@35113af0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@35113af0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@35113af0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6542a7fa]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6542a7fa]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6542a7fa]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@6542a7fa]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2a4e4249]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2a4e4249]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2a4e4249]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2a4e4249]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5d39e3f6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5d39e3f6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5d39e3f6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@5d39e3f6]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6143941b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6143941b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@6143941b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@6143941b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@114e82be]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@114e82be]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@114e82be]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@114e82be]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5303" _type="PauseCommand" date="Wed Mar 23 15:54:33 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348365157">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3937]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5302" _type="ConsoleOutput" date="Wed Mar 23 15:54:33 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348365157" type="ConsoleOutput">
    <outputString><![CDATA[0
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@3cc9a488]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@3cc9a488]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@3cc9a488]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@3cc9a488]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@66d8f78d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@66d8f78d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@66d8f78d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@66d8f78d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@12d6c7bb]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@12d6c7bb]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@12d6c7bb]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@12d6c7bb]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@35d5ce6b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@35d5ce6b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@35d5ce6b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@35d5ce6b]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@d710f6d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@d710f6d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@d710f6d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@d710f6d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@60b7b22f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@60b7b22f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@60b7b22f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@60b7b22f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@5cba018c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@5cba018c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@5cba018c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@5cba018c]
W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: ZIndex of object: graphics.APlate@42953ef9. Ignoring notification.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1"), Diff(INSERT,"0"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"66a23452"), Diff(INSERT,"3cc9a488"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"66a23452"), Diff(INSERT,"3cc9a488"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"66a23452"), Diff(INSERT,"3cc9a488"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"66a23452"), Diff(INSERT,"3cc9a488"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"35113af0"), Diff(INSERT,"66d8f78d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"35113af0"), Diff(INSERT,"66d8f78d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"35113af0"), Diff(INSERT,"66d8f78d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"35113af0"), Diff(INSERT,"66d8f78d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6542a7fa"), Diff(INSERT,"12d6c7bb"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6542a7fa"), Diff(INSERT,"12d6c7bb"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6542a7fa"), Diff(INSERT,"12d6c7bb"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6542a7fa"), Diff(INSERT,"12d6c7bb"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"2a4e4249"), Diff(INSERT,"35d5ce6b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"2a4e4249"), Diff(INSERT,"35d5ce6b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"2a4e4249"), Diff(INSERT,"35d5ce6b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"2a4e4249"), Diff(INSERT,"35d5ce6b"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5d39e3"), Diff(INSERT,"d710"), Diff(EQUAL,"f6"), Diff(INSERT,"d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5d39e3"), Diff(INSERT,"d710"), Diff(EQUAL,"f6"), Diff(INSERT,"d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5d39e3"), Diff(INSERT,"d710"), Diff(EQUAL,"f6"), Diff(INSERT,"d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5d39e3"), Diff(INSERT,"d710"), Diff(EQUAL,"f6"), Diff(INSERT,"d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@6"), Diff(DELETE,"143941b"), Diff(INSERT,"0b7b22f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@6"), Diff(DELETE,"143941b"), Diff(INSERT,"0b7b22f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(EQUAL,"90; newValue="), Diff(DELETE,"39"), Diff(INSERT,"11"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@6"), Diff(DELETE,"143941b"), Diff(INSERT,"0b7b22f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(EQUAL,"90; newValue="), Diff(DELETE,"39"), Diff(INSERT,"11"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@6"), Diff(DELETE,"143941b"), Diff(INSERT,"0b7b22f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"63; newValue="), Diff(DELETE,"9"), Diff(INSERT,"52"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"114e82be"), Diff(INSERT,"5cba018c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"63; newValue="), Diff(DELETE,"9"), Diff(INSERT,"52"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"114e82be"), Diff(INSERT,"5cba018c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"30"), Diff(EQUAL,"1; newValue="), Diff(DELETE,"30"), Diff(INSERT,"2"), Diff(EQUAL,"1; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"114e82be"), Diff(INSERT,"5cba018c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"30"), Diff(EQUAL,"1; newValue="), Diff(DELETE,"30"), Diff(INSERT,"2"), Diff(EQUAL,"1; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"114e82be]¶Moving the stove: "), Diff(INSERT,"5cba018c]¶W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: ZIndex of object: graphics.APlate@42953ef9. Ignoring notification."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5305" _type="PauseCommand" date="Wed Mar 23 15:54:43 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="348375476">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10319]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5304" _type="ShellCommand" date="Wed Mar 23 15:54:43 EDT 2022" starttimestamp="1647716908162" timestamp="348375476" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5307" _type="PauseCommand" date="Wed Mar 23 15:54:50 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348382738">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7262]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5324" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:54:58 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348390102" type="Run" />
  <Command __id="5326" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:54:58 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348390103" type="Run" />
  <Command __id="5328" _type="PauseCommand" date="Wed Mar 23 15:54:59 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348391376">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1273]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5327" _type="ConsoleOutput" date="Wed Mar 23 15:54:59 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348391376" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"0¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@3cc9a488]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@3cc9a488]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@3cc9a488]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@3cc9a488]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@66d8f78d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@66d8f78d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@66d8f78d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@66d8f78d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@12d6c7bb]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@12d6c7bb]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@12d6c7bb]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@12d6c7bb]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@35d5ce6b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@35d5ce6b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@35d5ce6b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@35d5ce6b]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@d710f6d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@d710f6d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@d710f6d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@d710f6d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@60b7b22f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@60b7b22f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@60b7b22f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@60b7b22f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@5cba018c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@5cba018c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@5cba018c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@5cba018c]¶W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: ZIndex of object: graphics.APlate@42953ef9. Ignoring notification."), Diff(INSERT,"W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5329" _type="ShellCommand" date="Wed Mar 23 15:55:00 EDT 2022" starttimestamp="1647716908162" timestamp="348392087" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5330" _type="ConsoleOutput" date="Wed Mar 23 15:55:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348393065" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5331" _type="ConsoleOutput" date="Wed Mar 23 15:55:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348393225" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 

W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"ZIndex"), Diff(INSERT,"plate"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"nAvatar"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶")]]]></diff>
  </Command>
  <Command __id="5332" _type="ConsoleOutput" date="Wed Mar 23 15:55:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348393336" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"nAngle"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Patron"), Diff(INSERT,"Angle"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics."), Diff(DELETE,"Patron"), Diff(INSERT,"Angle"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Patron"), Diff(INSERT,"Angle"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Head"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(DELETE,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶")]]]></diff>
  </Command>
  <Command __id="5333" _type="ConsoleOutput" date="Wed Mar 23 15:55:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348393607" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.A"), Diff(DELETE,"nAngle"), Diff(INSERT,"Chef"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,".addPropertyChangeListener(graphics."), Diff(DELETE,"Angle"), Diff(INSERT,"Chef"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶"), Diff(DELETE,"W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="5335" _type="PauseCommand" date="Wed Mar 23 15:55:08 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348399873">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6266]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5334" _type="ConsoleOutput" date="Wed Mar 23 15:55:08 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348399873" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3cb7cbd5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3cb7cbd5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3cb7cbd5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3cb7cbd5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@71499fa5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@71499fa5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@71499fa5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@71499fa5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2279a61e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2279a61e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2279a61e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2279a61e]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4735d57c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4735d57c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4735d57c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4735d57c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45de472c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45de472c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@45de472c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@45de472c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@78d75c85]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@78d75c85]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@78d75c85]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@78d75c85]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@17714cd7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@17714cd7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@17714cd7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@17714cd7]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3cb7cbd5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3cb7cbd5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3cb7cbd5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@3cb7cbd5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@71499fa5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@71499fa5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@71499fa5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@71499fa5]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2279a61e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@2279a61e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2279a61e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@2279a61e]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4735d57c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4735d57c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4735d57c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4735d57c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45de472c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45de472c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@45de472c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@45de472c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@78d75c85]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@78d75c85]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@78d75c85]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@78d75c85]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@17714cd7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@17714cd7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@17714cd7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@17714cd7]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5337" _type="PauseCommand" date="Wed Mar 23 15:55:11 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348403575">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3702]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5336" _type="ConsoleOutput" date="Wed Mar 23 15:55:11 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348403575" type="ConsoleOutput">
    <outputString><![CDATA[0
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6f11e8e9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6f11e8e9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6f11e8e9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6f11e8e9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6163c721]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6163c721]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6163c721]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6163c721]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@2950a823]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@2950a823]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@2950a823]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@2950a823]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4df2b2a3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4df2b2a3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4df2b2a3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4df2b2a3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5942a9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5942a9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5942a9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5942a9]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@ce7434]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@ce7434]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@ce7434]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@ce7434]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@39417084]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@39417084]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@39417084]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@39417084]
W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: ZIndex of object: graphics.APlate@1711cee2. Ignoring notification.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1"), Diff(INSERT,"0"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3cb7cbd5"), Diff(INSERT,"6f11e8e9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3cb7cbd5"), Diff(INSERT,"6f11e8e9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3cb7cbd5"), Diff(INSERT,"6f11e8e9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3cb7cbd5"), Diff(INSERT,"6f11e8e9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"71499fa5"), Diff(INSERT,"6163c721"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"71499fa5"), Diff(INSERT,"6163c721"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"71499fa5"), Diff(INSERT,"6163c721"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"71499fa5"), Diff(INSERT,"6163c721"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@2"), Diff(DELETE,"279a61e"), Diff(INSERT,"950a823"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@2"), Diff(DELETE,"279a61e"), Diff(INSERT,"950a823"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@2"), Diff(DELETE,"279a61e"), Diff(INSERT,"950a823"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@2"), Diff(DELETE,"279a61e"), Diff(INSERT,"950a823"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"735d57c"), Diff(INSERT,"df2b2a3"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"735d57c"), Diff(INSERT,"df2b2a3"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"735d57c"), Diff(INSERT,"df2b2a3"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"735d57c"), Diff(INSERT,"df2b2a3"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"45de472c"), Diff(INSERT,"5942a9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"45de472c"), Diff(INSERT,"5942a9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"45de472c"), Diff(INSERT,"5942a9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"45de472c"), Diff(INSERT,"5942a9"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"78d75c85"), Diff(INSERT,"ce7434"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"78d75c85"), Diff(INSERT,"ce7434"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(EQUAL,"90; newValue="), Diff(DELETE,"39"), Diff(INSERT,"11"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"78d75c85"), Diff(INSERT,"ce7434"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(EQUAL,"90; newValue="), Diff(DELETE,"39"), Diff(INSERT,"11"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"78d75c85"), Diff(INSERT,"ce7434"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"63; newValue="), Diff(DELETE,"9"), Diff(INSERT,"52"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"17714cd7"), Diff(INSERT,"39417084"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"63; newValue="), Diff(DELETE,"9"), Diff(INSERT,"52"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"17714cd7"), Diff(INSERT,"39417084"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"30"), Diff(EQUAL,"1; newValue="), Diff(DELETE,"30"), Diff(INSERT,"2"), Diff(EQUAL,"1; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"17714cd7"), Diff(INSERT,"39417084"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"30"), Diff(EQUAL,"1; newValue="), Diff(DELETE,"30"), Diff(INSERT,"2"), Diff(EQUAL,"1; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"17714cd7]¶Moving the stove: "), Diff(INSERT,"39417084]¶W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: ZIndex of object: graphics.APlate@1711cee2. Ignoring notification."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5339" _type="PauseCommand" date="Wed Mar 23 15:55:15 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348407674">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4099]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5340" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:55:17 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348408934" type="Run" />
  <Command __id="5342" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:55:17 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348408934" type="Run" />
  <Command __id="5344" _type="PauseCommand" date="Wed Mar 23 15:55:19 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348411269">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2335]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5343" _type="MoveCaretCommand" caretOffset="1708" date="Wed Mar 23 15:55:19 EDT 2022" docOffset="1708" starttimestamp="1647716908162" timestamp="348411269" />
  <Command __id="5345" _type="MoveCaretCommand" caretOffset="1708" date="Wed Mar 23 15:55:19 EDT 2022" docOffset="1708" starttimestamp="1647716908162" timestamp="348411269" />
  <Command __id="5347" _type="PauseCommand" date="Wed Mar 23 15:55:20 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348412693">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1424]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5346" _type="MoveCaretCommand" caretOffset="1708" date="Wed Mar 23 15:55:20 EDT 2022" docOffset="1708" starttimestamp="1647716908162" timestamp="348412693" />
  <Command __id="5348" _type="MoveCaretCommand" caretOffset="1708" date="Wed Mar 23 15:55:20 EDT 2022" docOffset="1708" starttimestamp="1647716908162" timestamp="348412693" />
  <Command __id="5350" _type="PauseCommand" date="Wed Mar 23 15:55:28 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348420381">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7688]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5349" _type="MoveCaretCommand" caretOffset="1706" date="Wed Mar 23 15:55:28 EDT 2022" docOffset="1706" starttimestamp="1647716908162" timestamp="348420381" />
  <Command __id="5351" _type="MoveCaretCommand" caretOffset="1706" date="Wed Mar 23 15:55:28 EDT 2022" docOffset="1706" starttimestamp="1647716908162" timestamp="348420381" />
  <DocumentChange __id="5245" _type="Insert" date="Wed Mar 23 15:54:03 EDT 2022" docASTNodeCount="855" docActiveCodeLength="4640" docExpressionCount="581" docLength="4640" length="13" offset="2853" repeat="10" starttimestamp="1647716908162" timestamp="348334901" timestamp2="348337480">
    <text><![CDATA[
		plate.set]]></text>
  </DocumentChange>
  <DocumentChange __id="5273" _type="Replace" date="Wed Mar 23 15:54:07 EDT 2022" docASTNodeCount="856" docActiveCodeLength="4658" docExpressionCount="582" docLength="4658" endLine="160" insertionLength="21" int_docASTNodeCount="853" int_docActiveCodeLength="4637" int_docExpressionCount="579" int_docLength="4637" length="3" offset="2863" startLine="160" starttimestamp="1647716908162" timestamp="348339674">
    <deletedText><![CDATA[set]]></deletedText>
    <insertedText><![CDATA[setZIndex(INIT_Head);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5276" _type="Replace" date="Wed Mar 23 15:54:09 EDT 2022" docASTNodeCount="856" docActiveCodeLength="4650" docExpressionCount="582" docLength="4650" endLine="160" insertionLength="1" int_docASTNodeCount="855" int_docActiveCodeLength="4649" int_docExpressionCount="581" int_docLength="4649" length="9" offset="2873" startLine="160" starttimestamp="1647716908162" timestamp="348340995">
    <deletedText><![CDATA[INIT_Head]]></deletedText>
    <insertedText><![CDATA[0]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5315" _type="Replace" date="Wed Mar 23 15:54:52 EDT 2022" docASTNodeCount="856" docActiveCodeLength="4646" docExpressionCount="582" docLength="4646" endLine="78" insertionLength="1" int_docASTNodeCount="855" int_docActiveCodeLength="4645" int_docExpressionCount="581" int_docLength="4645" length="5" offset="1705" startLine="78" starttimestamp="1647716908162" timestamp="348384325">
    <deletedText><![CDATA[60000]]></deletedText>
    <insertedText><![CDATA[0]]></insertedText>
  </DocumentChange>
  <Command __id="5353" _type="PauseCommand" date="Wed Mar 23 15:55:30 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348422770">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2389]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="5352" _type="Delete" date="Wed Mar 23 15:55:30 EDT 2022" docASTNodeCount="855" docActiveCodeLength="4645" docExpressionCount="581" docLength="4645" endLine="78" length="1" offset="1705" startLine="78" starttimestamp="1647716908162" timestamp="348422770">
    <text><![CDATA[0]]></text>
  </DocumentChange>
  <Command __id="5354" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:55:30 EDT 2022" starttimestamp="1647716908162" timestamp="348422824" />
  <Command __id="5355" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:55:30 EDT 2022" starttimestamp="1647716908162" timestamp="348422824" />
  <Command __id="5357" _type="InsertStringCommand" date="Wed Mar 23 15:55:31 EDT 2022" starttimestamp="1647716908162" timestamp="348423345" timestamp2="348423345">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="5358" _type="InsertStringCommand" date="Wed Mar 23 15:55:31 EDT 2022" starttimestamp="1647716908162" timestamp="348423346" timestamp2="348423346">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="5359" _type="MoveCaretCommand" caretOffset="1708" date="Wed Mar 23 15:55:32 EDT 2022" docOffset="1708" starttimestamp="1647716908162" timestamp="348424305" />
  <Command __id="5360" _type="MoveCaretCommand" caretOffset="1708" date="Wed Mar 23 15:55:32 EDT 2022" docOffset="1708" starttimestamp="1647716908162" timestamp="348424305" />
  <Command __id="5362" _type="PauseCommand" date="Wed Mar 23 15:55:36 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348428102">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3797]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5361" _type="MoveCaretCommand" caretOffset="2870" date="Wed Mar 23 15:55:36 EDT 2022" docOffset="2870" starttimestamp="1647716908162" timestamp="348428102" />
  <Command __id="5363" _type="MoveCaretCommand" caretOffset="2870" date="Wed Mar 23 15:55:36 EDT 2022" docOffset="2870" starttimestamp="1647716908162" timestamp="348428102" />
  <Command __id="5365" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:55:36 EDT 2022" starttimestamp="1647716908162" timestamp="348428418" />
  <Command __id="5366" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:55:36 EDT 2022" starttimestamp="1647716908162" timestamp="348428418" />
  <Command __id="5368" _type="InsertStringCommand" date="Wed Mar 23 15:55:36 EDT 2022" starttimestamp="1647716908162" timestamp="348428612" timestamp2="348428612">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="5369" _type="InsertStringCommand" date="Wed Mar 23 15:55:36 EDT 2022" starttimestamp="1647716908162" timestamp="348428612" timestamp2="348428612">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="5371" _type="PauseCommand" date="Wed Mar 23 15:55:37 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348429725">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1113]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="5374" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/graphics/AnAvatar.java" date="Wed Mar 23 15:55:41 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348433611" type="Run" />
  <Command __id="5376" _type="RunCommand" className="/ProducersConsumer/src/graphics/AnAvatar.java" date="Wed Mar 23 15:55:41 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348433611" type="Run" />
  <Command __id="5378" _type="PauseCommand" date="Wed Mar 23 15:55:43 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348435675">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2064]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5377" _type="ShellCommand" date="Wed Mar 23 15:55:43 EDT 2022" starttimestamp="1647716908162" timestamp="348435675" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5379" _type="ShellCommand" date="Wed Mar 23 15:55:43 EDT 2022" starttimestamp="1647716908162" timestamp="348435797" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5380" _type="ShellCommand" date="Wed Mar 23 15:55:44 EDT 2022" starttimestamp="1647716908162" timestamp="348436220" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5381" _type="ShellCommand" date="Wed Mar 23 15:55:44 EDT 2022" starttimestamp="1647716908162" timestamp="348436319" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5382" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/graphics/AnAvatar.java" date="Wed Mar 23 15:55:44 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348436329" type="Run" />
  <Command __id="5383" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/graphics/AnAvatar.java" date="Wed Mar 23 15:55:44 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348436329" type="Run" />
  <Command __id="5384" _type="ConsoleOutput" date="Wed Mar 23 15:55:44 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348436459" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"0¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6f11e8e9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6f11e8e9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6f11e8e9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6f11e8e9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6163c721]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6163c721]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6163c721]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6163c721]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@2950a823]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@2950a823]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@2950a823]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@2950a823]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4df2b2a3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4df2b2a3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4df2b2a3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4df2b2a3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5942a9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5942a9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5942a9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5942a9]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@ce7434]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@ce7434]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@ce7434]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@ce7434]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@39417084]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@39417084]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@39417084]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@39417084]¶W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: ZIndex of object: graphics.APlate@1711cee2. Ignoring notification."), Diff(INSERT,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <DocumentChange __id="5356" _type="Insert" date="Wed Mar 23 15:55:31 EDT 2022" docASTNodeCount="856" docActiveCodeLength="4646" docExpressionCount="582" docLength="4646" length="1" offset="1705" starttimestamp="1647716908162" timestamp="348423292">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="5364" _type="Delete" date="Wed Mar 23 15:55:36 EDT 2022" docASTNodeCount="855" docActiveCodeLength="4645" docExpressionCount="581" docLength="4645" endLine="160" length="1" offset="2869" startLine="160" starttimestamp="1647716908162" timestamp="348428376">
    <text><![CDATA[0]]></text>
  </DocumentChange>
  <DocumentChange __id="5367" _type="Insert" date="Wed Mar 23 15:55:36 EDT 2022" docASTNodeCount="856" docActiveCodeLength="4646" docExpressionCount="582" docLength="4646" length="1" offset="2869" starttimestamp="1647716908162" timestamp="348428553">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <Command __id="5386" _type="PauseCommand" date="Wed Mar 23 15:55:51 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348442886">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6427]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5387" _type="MoveCaretCommand" caretOffset="221" date="Wed Mar 23 15:55:51 EDT 2022" docOffset="1182" starttimestamp="1647716908162" timestamp="348443593" />
  <Command __id="5389" _type="PauseCommand" date="Wed Mar 23 15:55:53 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348445520">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1927]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5391" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:55:58 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348450046" type="Run" />
  <Command __id="5393" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:55:58 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348450047" type="Run" />
  <Command __id="5395" _type="PauseCommand" date="Wed Mar 23 15:55:59 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348451540">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1493]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5394" _type="ConsoleOutput" date="Wed Mar 23 15:55:59 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348451540" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface "), Diff(INSERT,"public void graphics.AProducerConsumerScene.addPropertyChangeListener("), Diff(EQUAL,"java.beans.PropertyChangeListener) "), Diff(DELETE,"for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. "), Diff(INSERT,"should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5396" _type="ShellCommand" date="Wed Mar 23 15:56:00 EDT 2022" starttimestamp="1647716908162" timestamp="348452195" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5397" _type="ConsoleOutput" date="Wed Mar 23 15:56:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348453190" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5398" _type="ConsoleOutput" date="Wed Mar 23 15:56:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348453411" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 

W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"ZIndex"), Diff(INSERT,"plate"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"nAvatar"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶")]]]></diff>
  </Command>
  <Command __id="5399" _type="ConsoleOutput" date="Wed Mar 23 15:56:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348453523" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Head"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(DELETE,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶")]]]></diff>
  </Command>
  <Command __id="5400" _type="ConsoleOutput" date="Wed Mar 23 15:56:01 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348453803" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5402" _type="PauseCommand" date="Wed Mar 23 15:56:13 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="348465718">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[11915]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5405" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:56:17 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348469658" type="Run" />
  <Command __id="5407" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:56:17 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348469660" type="Run" />
  <Command __id="5409" _type="PauseCommand" date="Wed Mar 23 15:56:19 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348471532">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1872]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5408" _type="ConsoleOutput" date="Wed Mar 23 15:56:19 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348471532" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface "), Diff(INSERT,"public void graphics.AProducerConsumerScene.addPropertyChangeListener("), Diff(EQUAL,"java.beans.PropertyChangeListener) "), Diff(DELETE,"for method public abstract void graphics.Chef.addPropertyChangeL"), Diff(INSERT,"should be associated with annotation: @ObserverReg"), Diff(EQUAL,"iste"), Diff(DELETE,"n"), Diff(INSERT,"r"), Diff(EQUAL,"er("), Diff(DELETE,"graphics.Chef,java.beans."), Diff(EQUAL,"Property"), Diff(DELETE,"Change"), Diff(INSERT," "), Diff(EQUAL,"Listener)¶")]]]></diff>
  </Command>
  <Command __id="5410" _type="ShellCommand" date="Wed Mar 23 15:56:20 EDT 2022" starttimestamp="1647716908162" timestamp="348472157" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5411" _type="ConsoleOutput" date="Wed Mar 23 15:56:21 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348473051" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  ALine ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(INSERT,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.ALine not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5412" _type="ConsoleOutput" date="Wed Mar 23 15:56:21 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348473251" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 

W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  ALine ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"ZIndex"), Diff(INSERT,"plate"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"Line"), Diff(INSERT,"nAvatar"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶")]]]></diff>
  </Command>
  <Command __id="5413" _type="ConsoleOutput" date="Wed Mar 23 15:56:21 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348473339" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter."), Diff(EQUAL,"¶W*** Implicitly editable property: "), Diff(DELETE,"plate"), Diff(INSERT,"ZIndex"), Diff(EQUAL," of class class graphics.A"), Diff(DELETE,"nAvatar"), Diff(INSERT,"Head"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶"), Diff(DELETE,"¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶")]]]></diff>
  </Command>
  <Command __id="5414" _type="ConsoleOutput" date="Wed Mar 23 15:56:21 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348473628" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5416" _type="PauseCommand" date="Wed Mar 23 15:56:28 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348480265">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6637]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5415" _type="ConsoleOutput" date="Wed Mar 23 15:56:28 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348480265" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4735d57c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4735d57c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4735d57c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4735d57c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45de472c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45de472c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@45de472c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@45de472c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@78d75c85]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@78d75c85]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@78d75c85]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@78d75c85]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@17714cd7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@17714cd7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@17714cd7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@17714cd7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7e86f570]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7e86f570]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@7e86f570]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@7e86f570]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@49562aab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@49562aab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@49562aab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@49562aab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@ba77470]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@ba77470]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@ba77470]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@ba77470]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4735d57c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4735d57c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4735d57c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4735d57c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45de472c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@45de472c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@45de472c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@45de472c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@78d75c85]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@78d75c85]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@78d75c85]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@78d75c85]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@17714cd7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@17714cd7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@17714cd7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@17714cd7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7e86f570]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7e86f570]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@7e86f570]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@7e86f570]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@49562aab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@49562aab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@49562aab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@49562aab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@ba77470]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@ba77470]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@ba77470]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@ba77470]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5418" _type="PauseCommand" date="Wed Mar 23 15:56:32 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348484747">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4482]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5417" _type="ConsoleOutput" date="Wed Mar 23 15:56:32 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348484747" type="ConsoleOutput">
    <outputString><![CDATA[0
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@49e65756]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@49e65756]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@49e65756]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@49e65756]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@32d73117]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@32d73117]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@32d73117]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@32d73117]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@36d510ac]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@36d510ac]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@36d510ac]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@36d510ac]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@11bc6226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@11bc6226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@11bc6226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@11bc6226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4b08f67c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4b08f67c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4b08f67c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4b08f67c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4addc23f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4addc23f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@4addc23f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@4addc23f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@25664f9a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@25664f9a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@25664f9a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@25664f9a]
W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: ZIndex of object: graphics.APlate@789c600e. Ignoring notification.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1"), Diff(INSERT,"0"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"735d57c"), Diff(INSERT,"9e65756"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"735d57c"), Diff(INSERT,"9e65756"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"735d57c"), Diff(INSERT,"9e65756"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"735d57c"), Diff(INSERT,"9e65756"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"45de472c"), Diff(INSERT,"32d73117"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"45de472c"), Diff(INSERT,"32d73117"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"45de472c"), Diff(INSERT,"32d73117"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"45de472c"), Diff(INSERT,"32d73117"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"78d75c85"), Diff(INSERT,"36d510ac"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"78d75c85"), Diff(INSERT,"36d510ac"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"78d75c85"), Diff(INSERT,"36d510ac"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"78d75c85"), Diff(INSERT,"36d510ac"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@1"), Diff(DELETE,"7714cd7"), Diff(INSERT,"1bc6226"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@1"), Diff(DELETE,"7714cd7"), Diff(INSERT,"1bc6226"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@1"), Diff(DELETE,"7714cd7"), Diff(INSERT,"1bc6226"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@1"), Diff(DELETE,"7714cd7"), Diff(INSERT,"1bc6226"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"7e86f570"), Diff(INSERT,"4b08f67c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"7e86f570"), Diff(INSERT,"4b08f67c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"7e86f570"), Diff(INSERT,"4b08f67c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"7e86f570"), Diff(INSERT,"4b08f67c"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"9562aab"), Diff(INSERT,"addc23f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"9562aab"), Diff(INSERT,"addc23f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(EQUAL,"90; newValue="), Diff(DELETE,"39"), Diff(INSERT,"11"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"9562aab"), Diff(INSERT,"addc23f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(EQUAL,"90; newValue="), Diff(DELETE,"39"), Diff(INSERT,"11"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@4"), Diff(DELETE,"9562aab"), Diff(INSERT,"addc23f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"63; newValue="), Diff(DELETE,"9"), Diff(INSERT,"52"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"ba77470"), Diff(INSERT,"25664f9a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"63; newValue="), Diff(DELETE,"9"), Diff(INSERT,"52"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"ba77470"), Diff(INSERT,"25664f9a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"30"), Diff(EQUAL,"1; newValue="), Diff(DELETE,"30"), Diff(INSERT,"2"), Diff(EQUAL,"1; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"ba77470"), Diff(INSERT,"25664f9a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"30"), Diff(EQUAL,"1; newValue="), Diff(DELETE,"30"), Diff(INSERT,"2"), Diff(EQUAL,"1; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"ba77470]¶Moving the stove: "), Diff(INSERT,"25664f9a]¶W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: ZIndex of object: graphics.APlate@789c600e. Ignoring notification."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5420" _type="PauseCommand" date="Wed Mar 23 15:56:36 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348488205">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3458]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5421" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:56:39 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348491263" type="Run" />
  <Command __id="5423" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:56:39 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348491263" type="Run" />
  <Command __id="5385" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:55:51 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348442886">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5425" _type="PauseCommand" date="Wed Mar 23 15:56:45 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348497727">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[6464]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5426" _type="MoveCaretCommand" caretOffset="157" date="Wed Mar 23 15:56:46 EDT 2022" docOffset="157" starttimestamp="1647716908162" timestamp="348498375" />
  <Command __id="5428" _type="PauseCommand" date="Wed Mar 23 15:56:58 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="348509971">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11595]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5427" _type="MoveCaretCommand" caretOffset="547" date="Wed Mar 23 15:56:58 EDT 2022" docOffset="547" starttimestamp="1647716908162" timestamp="348509970" />
  <Command __id="5424" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:56:45 EDT 2022" docASTNodeCount="402" docActiveCodeLength="2462" docExpressionCount="252" docLength="2731" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348497727">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ALine.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;"), Diff(DELETE,"¶¶import tags301.Comp301Tags;"), Diff(EQUAL,"¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.models.PropertyListenerRegisterer;¶¶@StructurePattern(StructurePatternNames.LINE_PATTERN)¶@PropertyNames({¶	"x",¶	"y",¶	"width",¶	"height",¶	"radius",¶	"angle"¶	})¶@EditablePropertyNames({¶	"radius",¶	"angle",¶	"x",¶	"y",¶	"height",¶	"width"¶})¶¶public class ALine extends ABoundedShape implements Line, PropertyListenerRegisterer, BoundedShape {¶	int x, y, width, height;¶	double radius, angle;¶	¶	int INIT_Angle = 45;¶	int INIT_Radius = 40;¶	int INIT_Rotate = 6;¶	int INIT_XY = 50;¶¶	public ALine() {¶		setRadius(INIT_Radius);¶		setAngle(INIT_Angle);¶		rotate(INIT_Rotate);¶		setX(INIT_XY);¶		setY(INIT_XY);¶	}¶	¶	public ALine(int INIT_X, int INIT_Y, double INIT_Radius, int INIT_Rotate) {¶		setX(INIT_X);¶		setY(INIT_Y);¶		setRadius(INIT_Radius);¶		setAngle(INIT_Angle);¶		rotate(INIT_Rotate);¶	}¶¶	public ALine(double newRadius, double newAngle) {¶		setRadius(newRadius);¶		setAngle(newAngle);¶	}¶//	¶//	@Override¶//	public void setX(int newX) {¶//		int oldX = x;¶//		x = newX;¶//		¶//	}¶//¶//	@Override¶//	public void setY(int newY) {¶//		int oldY = y;¶//		y = newY;¶//	}¶//¶//	@Override¶//	public int getX() {¶//		return x;¶//	}¶//¶//	@Override¶//	public int getY() {¶//		return y;¶//	}¶¶	public double getRadius() {¶		return radius;¶	}¶¶	public void setRadius(double newRadius) {¶		double oldRadius = radius;¶		radius = newRadius;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "radius", oldRadius, radius));¶		¶	}¶¶	public double getAngle() {¶		return angle;	¶	}¶¶	public void setAngle(double newAngle) {¶		double oldAngle = angle;¶		angle = newAngle;¶		height = (int) (getRadius()*Math.sin(angle));¶		width = (int) (getRadius()*Math.cos(angle));¶		¶		setHeight(height);¶		setWidth(width);¶¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "angle", oldAngle, angle));¶	}¶¶	public void rotate(int units) {¶		double rotate = units * Math.PI/32;¶		setAngle(rotate + angle);¶	}¶¶	@Override¶	public void move(int newX, int newY) {¶		setX(getX()+newX);¶		setY(getY()+newY);¶	}¶	¶	@Override¶	public void moveTo(int newX, int newY) {¶		setX(newX);¶		setY(newY);¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		propertySupport.addPropertyChangeListener(arg0);¶	}¶¶}")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.models.PropertyListenerRegisterer;

@StructurePattern(StructurePatternNames.LINE_PATTERN)
@PropertyNames({
	"x",
	"y",
	"width",
	"height",
	"radius",
	"angle"
	})
@EditablePropertyNames({
	"radius",
	"angle",
	"x",
	"y",
	"height",
	"width"
})

public class ALine extends ABoundedShape implements Line, PropertyListenerRegisterer, BoundedShape {
	int x, y, width, height;
	double radius, angle;
	
	int INIT_Angle = 45;
	int INIT_Radius = 40;
	int INIT_Rotate = 6;
	int INIT_XY = 50;

	public ALine() {
		setRadius(INIT_Radius);
		setAngle(INIT_Angle);
		rotate(INIT_Rotate);
		setX(INIT_XY);
		setY(INIT_XY);
	}
	
	public ALine(int INIT_X, int INIT_Y, double INIT_Radius, int INIT_Rotate) {
		setX(INIT_X);
		setY(INIT_Y);
		setRadius(INIT_Radius);
		setAngle(INIT_Angle);
		rotate(INIT_Rotate);
	}

	public ALine(double newRadius, double newAngle) {
		setRadius(newRadius);
		setAngle(newAngle);
	}
//	
//	@Override
//	public void setX(int newX) {
//		int oldX = x;
//		x = newX;
//		
//	}
//
//	@Override
//	public void setY(int newY) {
//		int oldY = y;
//		y = newY;
//	}
//
//	@Override
//	public int getX() {
//		return x;
//	}
//
//	@Override
//	public int getY() {
//		return y;
//	}

	public double getRadius() {
		return radius;
	}

	public void setRadius(double newRadius) {
		double oldRadius = radius;
		radius = newRadius;
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "radius", oldRadius, radius));
		
	}

	public double getAngle() {
		return angle;	
	}

	public void setAngle(double newAngle) {
		double oldAngle = angle;
		angle = newAngle;
		height = (int) (getRadius()*Math.sin(angle));
		width = (int) (getRadius()*Math.cos(angle));
		
		setHeight(height);
		setWidth(width);

		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "angle", oldAngle, angle));
	}

	public void rotate(int units) {
		double rotate = units * Math.PI/32;
		setAngle(rotate + angle);
	}

	@Override
	public void move(int newX, int newY) {
		setX(getX()+newX);
		setY(getY()+newY);
	}
	
	@Override
	public void moveTo(int newX, int newY) {
		setX(newX);
		setY(newY);
	}
	
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		propertySupport.addPropertyChangeListener(arg0);
	}

}]]></snapshot>
  </Command>
  <Command __id="5430" _type="PauseCommand" date="Wed Mar 23 15:56:59 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348511770">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1800]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="5431" _type="InsertStringCommand" date="Wed Mar 23 15:56:59 EDT 2022" starttimestamp="1647716908162" timestamp="348511810" timestamp2="348511810">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="5433" _type="InsertStringCommand" date="Wed Mar 23 15:57:00 EDT 2022" starttimestamp="1647716908162" timestamp="348512203" timestamp2="348512203">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5435" _type="InsertStringCommand" date="Wed Mar 23 15:57:00 EDT 2022" starttimestamp="1647716908162" timestamp="348512647" timestamp2="348512647">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5437" _type="InsertStringCommand" date="Wed Mar 23 15:57:01 EDT 2022" starttimestamp="1647716908162" timestamp="348513253" timestamp2="348513253">
    <data><![CDATA[Z]]></data>
  </Command>
  <Command __id="5439" _type="InsertStringCommand" date="Wed Mar 23 15:57:01 EDT 2022" starttimestamp="1647716908162" timestamp="348513565" timestamp2="348513565">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="5441" _type="InsertStringCommand" date="Wed Mar 23 15:57:01 EDT 2022" starttimestamp="1647716908162" timestamp="348513770" timestamp2="348513770">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5443" _type="InsertStringCommand" date="Wed Mar 23 15:57:02 EDT 2022" starttimestamp="1647716908162" timestamp="348514082" timestamp2="348514082">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="5445" _type="InsertStringCommand" date="Wed Mar 23 15:57:02 EDT 2022" starttimestamp="1647716908162" timestamp="348514289" timestamp2="348514289">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5447" _type="InsertStringCommand" date="Wed Mar 23 15:57:02 EDT 2022" starttimestamp="1647716908162" timestamp="348514487" timestamp2="348514487">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5449" _type="PauseCommand" date="Wed Mar 23 15:57:04 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348515909">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1422]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5448" _type="MoveCaretCommand" caretOffset="649" date="Wed Mar 23 15:57:04 EDT 2022" docOffset="649" starttimestamp="1647716908162" timestamp="348515909" />
  <Command __id="5451" _type="InsertStringCommand" date="Wed Mar 23 15:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="348516436" timestamp2="348516436">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="5453" _type="InsertStringCommand" date="Wed Mar 23 15:57:04 EDT 2022" starttimestamp="1647716908162" timestamp="348516617" timestamp2="348516617">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5455" _type="InsertStringCommand" date="Wed Mar 23 15:57:05 EDT 2022" starttimestamp="1647716908162" timestamp="348516960" timestamp2="348516960">
    <data><![CDATA["]]></data>
  </Command>
  <Command __id="5457" _type="InsertStringCommand" date="Wed Mar 23 15:57:05 EDT 2022" starttimestamp="1647716908162" timestamp="348517459" timestamp2="348517459">
    <data><![CDATA[Z]]></data>
  </Command>
  <Command __id="5459" _type="InsertStringCommand" date="Wed Mar 23 15:57:05 EDT 2022" starttimestamp="1647716908162" timestamp="348517833" timestamp2="348517833">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="5461" _type="InsertStringCommand" date="Wed Mar 23 15:57:06 EDT 2022" starttimestamp="1647716908162" timestamp="348518015" timestamp2="348518015">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="5463" _type="InsertStringCommand" date="Wed Mar 23 15:57:06 EDT 2022" starttimestamp="1647716908162" timestamp="348518238" timestamp2="348518238">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5465" _type="InsertStringCommand" date="Wed Mar 23 15:57:06 EDT 2022" starttimestamp="1647716908162" timestamp="348518598" timestamp2="348518598">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5467" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:57:06 EDT 2022" starttimestamp="1647716908162" timestamp="348518812" />
  <Command __id="5469" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:57:07 EDT 2022" starttimestamp="1647716908162" timestamp="348518924" />
  <Command __id="5471" _type="InsertStringCommand" date="Wed Mar 23 15:57:07 EDT 2022" starttimestamp="1647716908162" timestamp="348519031" timestamp2="348519031">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="5473" _type="InsertStringCommand" date="Wed Mar 23 15:57:07 EDT 2022" starttimestamp="1647716908162" timestamp="348519178" timestamp2="348519178">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5475" _type="InsertStringCommand" date="Wed Mar 23 15:57:07 EDT 2022" starttimestamp="1647716908162" timestamp="348519355" timestamp2="348519355">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="5477" _type="PauseCommand" date="Wed Mar 23 15:57:09 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348521723">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2368]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5476" _type="MoveCaretCommand" caretOffset="1241" date="Wed Mar 23 15:57:09 EDT 2022" docOffset="1241" starttimestamp="1647716908162" timestamp="348521723" />
  <DocumentChange __id="5429" _type="Insert" date="Wed Mar 23 15:56:59 EDT 2022" docASTNodeCount="403" docActiveCodeLength="2474" docExpressionCount="253" docLength="2743" length="12" offset="547" repeat="9" starttimestamp="1647716908162" timestamp="348511770" timestamp2="348514460">
    <text><![CDATA[,
	"ZIndex"]]></text>
  </DocumentChange>
  <DocumentChange __id="5450" _type="Insert" date="Wed Mar 23 15:57:04 EDT 2022" docASTNodeCount="404" docActiveCodeLength="2485" docExpressionCount="254" docLength="2754" length="11" offset="649" repeat="8" starttimestamp="1647716908162" timestamp="348516392" timestamp2="348518577">
    <text><![CDATA[,
	"ZInex"]]></text>
  </DocumentChange>
  <DocumentChange __id="5466" _type="Delete" date="Wed Mar 23 15:57:06 EDT 2022" docASTNodeCount="404" docActiveCodeLength="2483" docExpressionCount="254" docLength="2752" endLine="30" length="2" offset="657" repeat="2" startLine="30" starttimestamp="1647716908162" timestamp="348518774" timestamp2="348518889">
    <text><![CDATA[ex]]></text>
  </DocumentChange>
  <DocumentChange __id="5470" _type="Insert" date="Wed Mar 23 15:57:07 EDT 2022" docASTNodeCount="404" docActiveCodeLength="2486" docExpressionCount="254" docLength="2755" length="3" offset="657" repeat="3" starttimestamp="1647716908162" timestamp="348519007" timestamp2="348519329">
    <text><![CDATA[dex]]></text>
  </DocumentChange>
  <Command __id="5479" _type="PauseCommand" date="Wed Mar 23 15:57:11 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348523049">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1326]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="5480" _type="InsertStringCommand" date="Wed Mar 23 15:57:11 EDT 2022" starttimestamp="1647716908162" timestamp="348523078" timestamp2="348523078">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="5478" _type="Insert" date="Wed Mar 23 15:57:11 EDT 2022" docASTNodeCount="404" docActiveCodeLength="2490" docExpressionCount="254" docLength="2759" length="4" offset="1241" starttimestamp="1647716908162" timestamp="348523049">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="5482" _type="PauseCommand" date="Wed Mar 23 15:57:13 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348525657">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2579]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="5483" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:57:13 EDT 2022" starttimestamp="1647716908162" timestamp="348525705" />
  <Command __id="5485" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:57:14 EDT 2022" starttimestamp="1647716908162" timestamp="348525886" />
  <Command __id="5487" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:57:14 EDT 2022" starttimestamp="1647716908162" timestamp="348526299" />
  <DocumentChange __id="5481" _type="Delete" date="Wed Mar 23 15:57:13 EDT 2022" docASTNodeCount="404" docActiveCodeLength="2486" docExpressionCount="254" docLength="2755" endLine="56" length="4" offset="1241" repeat="3" startLine="55" starttimestamp="1647716908162" timestamp="348525657" timestamp2="348526252">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <Command __id="5489" _type="PauseCommand" date="Wed Mar 23 15:57:25 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="348537428">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11129]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5490" _type="MoveCaretCommand" caretOffset="205" date="Wed Mar 23 15:57:25 EDT 2022" docOffset="439" starttimestamp="1647716908162" timestamp="348537727" />
  <Command __id="5492" _type="PauseCommand" date="Wed Mar 23 15:57:27 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348539374">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1647]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5491" _type="MoveCaretCommand" caretOffset="334" date="Wed Mar 23 15:57:27 EDT 2022" docOffset="568" starttimestamp="1647716908162" timestamp="348539374" />
  <Command __id="5488" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:57:25 EDT 2022" docASTNodeCount="158" docActiveCodeLength="1155" docExpressionCount="103" docLength="1155" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348537428">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ABoundedShape.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.models.PropertyListenerRegisterer;

@PropertyNames({
	"x",
	"y",
	"width",
	"height",
	"ZIndex"
	})
@EditablePropertyNames({
	"width",
	"height",
	"x",
	"y",
	"ZIndex"
})
public class ABoundedShape extends ALocatable implements BoundedShape, PropertyListenerRegisterer {

	int width, height;
	
	public ABoundedShape() {
		
	}
		
	@Override
	public int getHeight() {
		return height;
	}

	@Override
	public int getWidth() {
		return width;
	}

	@Override
	public void setHeight(int NewHeight) {
		int oldHeight = height;
		height = NewHeight;
		
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "height", oldHeight, height));
	}

	@Override
	public void setWidth(int NewWidth) {
		int oldWidth = width;
		width = NewWidth;
		
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "width", oldWidth, width));
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="5494" _type="PauseCommand" date="Wed Mar 23 15:57:30 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348541943">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2568]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5495" _type="SelectTextCommand" caretOffset="454" date="Wed Mar 23 15:57:30 EDT 2022" end="454" start="444" starttimestamp="1647716908162" timestamp="348542506" />
  <Command __id="5497" _type="PauseCommand" date="Wed Mar 23 15:57:32 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348544053">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1546]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5496" _type="MoveCaretCommand" caretOffset="531" date="Wed Mar 23 15:57:32 EDT 2022" docOffset="531" starttimestamp="1647716908162" timestamp="348544052" />
  <Command __id="5493" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:57:30 EDT 2022" docASTNodeCount="225" docActiveCodeLength="1535" docExpressionCount="139" docLength="1632" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348541942">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ALocatable.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;"), Diff(DELETE,"¶¶import tags301.Comp301Tags;"), Diff(EQUAL,"¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.Tags;¶import util.models.PropertyListenerRegisterer;¶¶¶@PropertyNames({¶	"x",¶	"y",¶	"ZIndex"¶	})¶@EditablePropertyNames({¶	"x",¶	"y",¶	"ZIndex"¶})¶public class ALocatable implements Locatable, PropertyListenerRegisterer {¶	int x, y;¶	int ZIndex;¶	¶	PropertyListenerSupport propertySupport = new APropertyListenerSupport();¶	¶	//List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public ALocatable() {¶	}¶	¶	@Override¶	public void setX(int newX) {¶		int oldX = x;¶		x = newX;¶		¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "x", oldX, newX));¶		¶	}¶¶	@Override¶	public void setY(int newY) {¶		int oldY = y;¶		y = newY;¶		¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "x", oldY, newY));¶	}¶¶	@Override¶	public int getX() {¶		return x;¶	}¶¶	@Override¶	public int getY() {¶		return y;¶	}¶	¶	@Override¶	public int getZIndex() {¶		return ZIndex;¶		¶	}¶	¶	@Override¶	public void setZIndex(int newValue) {¶		int oldZIndex = ZIndex;¶		ZIndex = newValue;¶		¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "ZIndex", oldZIndex, ZIndex));¶		¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		propertySupport.addPropertyChangeListener(arg0);¶	}¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.Tags;
import util.models.PropertyListenerRegisterer;


@PropertyNames({
	"x",
	"y",
	"ZIndex"
	})
@EditablePropertyNames({
	"x",
	"y",
	"ZIndex"
})
public class ALocatable implements Locatable, PropertyListenerRegisterer {
	int x, y;
	int ZIndex;
	
	PropertyListenerSupport propertySupport = new APropertyListenerSupport();
	
	//List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();
	
	public ALocatable() {
	}
	
	@Override
	public void setX(int newX) {
		int oldX = x;
		x = newX;
		
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "x", oldX, newX));
		
	}

	@Override
	public void setY(int newY) {
		int oldY = y;
		y = newY;
		
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "x", oldY, newY));
	}

	@Override
	public int getX() {
		return x;
	}

	@Override
	public int getY() {
		return y;
	}
	
	@Override
	public int getZIndex() {
		return ZIndex;
		
	}
	
	@Override
	public void setZIndex(int newValue) {
		int oldZIndex = ZIndex;
		ZIndex = newValue;
		
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "ZIndex", oldZIndex, ZIndex));
		
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		propertySupport.addPropertyChangeListener(arg0);
	}
	
	

}
]]></snapshot>
  </Command>
  <Command __id="5499" _type="PauseCommand" date="Wed Mar 23 15:57:35 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348547198">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3146]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5500" _type="MoveCaretCommand" caretOffset="2870" date="Wed Mar 23 15:57:36 EDT 2022" docOffset="2870" starttimestamp="1647716908162" timestamp="348547900" />
  <Command __id="5502" _type="PauseCommand" date="Wed Mar 23 15:57:46 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="348558036">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10136]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5501" _type="MoveCaretCommand" caretOffset="1024" date="Wed Mar 23 15:57:46 EDT 2022" docOffset="1024" starttimestamp="1647716908162" timestamp="348558036" />
  <Command __id="5503" _type="MoveCaretCommand" caretOffset="1024" date="Wed Mar 23 15:57:46 EDT 2022" docOffset="1024" starttimestamp="1647716908162" timestamp="348558036" />
  <Command __id="5505" _type="InsertStringCommand" date="Wed Mar 23 15:57:46 EDT 2022" starttimestamp="1647716908162" timestamp="348558316" timestamp2="348558316">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5506" _type="InsertStringCommand" date="Wed Mar 23 15:57:46 EDT 2022" starttimestamp="1647716908162" timestamp="348558316" timestamp2="348558316">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5508" _type="InsertStringCommand" date="Wed Mar 23 15:57:47 EDT 2022" starttimestamp="1647716908162" timestamp="348559124" timestamp2="348559124">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="5509" _type="InsertStringCommand" date="Wed Mar 23 15:57:47 EDT 2022" starttimestamp="1647716908162" timestamp="348559124" timestamp2="348559124">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="5511" _type="InsertStringCommand" date="Wed Mar 23 15:57:47 EDT 2022" starttimestamp="1647716908162" timestamp="348559263" timestamp2="348559263">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5512" _type="InsertStringCommand" date="Wed Mar 23 15:57:47 EDT 2022" starttimestamp="1647716908162" timestamp="348559263" timestamp2="348559263">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5514" _type="InsertStringCommand" date="Wed Mar 23 15:57:47 EDT 2022" starttimestamp="1647716908162" timestamp="348559388" timestamp2="348559388">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5515" _type="InsertStringCommand" date="Wed Mar 23 15:57:47 EDT 2022" starttimestamp="1647716908162" timestamp="348559388" timestamp2="348559388">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5517" _type="InsertStringCommand" date="Wed Mar 23 15:57:47 EDT 2022" starttimestamp="1647716908162" timestamp="348559536" timestamp2="348559536">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5518" _type="InsertStringCommand" date="Wed Mar 23 15:57:47 EDT 2022" starttimestamp="1647716908162" timestamp="348559537" timestamp2="348559537">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5520" _type="InsertStringCommand" date="Wed Mar 23 15:57:47 EDT 2022" starttimestamp="1647716908162" timestamp="348559648" timestamp2="348559648">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5521" _type="InsertStringCommand" date="Wed Mar 23 15:57:47 EDT 2022" starttimestamp="1647716908162" timestamp="348559649" timestamp2="348559649">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5522" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:57:47 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="348559663" />
  <Command __id="5525" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:57:48 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="348559987" />
  <Command __id="5527" _type="InsertStringCommand" date="Wed Mar 23 15:57:48 EDT 2022" starttimestamp="1647716908162" timestamp="348560119" timestamp2="348560119">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5528" _type="InsertStringCommand" date="Wed Mar 23 15:57:48 EDT 2022" starttimestamp="1647716908162" timestamp="348560119" timestamp2="348560119">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="5498" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:57:35 EDT 2022" docASTNodeCount="856" docActiveCodeLength="4646" docExpressionCount="582" docLength="4646" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348547198">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AnAvatar.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶import java.beans.PropertyChangeListener;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"Arms",¶	"Legs",¶	"Neck",¶	"Torso",¶	"head",¶	"text",¶	"plate"¶})¶@EditablePropertyNames({¶	"Arms",¶	"Legs",¶	"Neck",¶	"Torso",¶	"head",¶	"text"¶})¶public class AnAvatar implements Avatar {¶	Angle Legs;¶	Angle Arms;¶	Line Torso;¶	Line Neck;¶	StringShape text;¶	Head head;¶	String headImage = "";¶	String plateImage = "images/12.png";¶	Plate plate;¶	¶	int INIT_X = 50;¶	int INIT_Y = 50;¶	int INIT_Radius = 20;¶	int INIT_Neck = 10;¶	int INIT_Head = 99;¶¶	¶	public AnAvatar() {¶		Legs = new AnAngle();¶		Legs.moveX(INIT_X);¶		Legs.moveY(INIT_Y+40);¶		Arms = new AnAngle();¶		Arms.moveX(INIT_X);¶		Arms.moveY(INIT_Y);¶		Torso = new ALine();¶		Torso.setX(INIT_X);¶		Torso.setY(INIT_X);¶		Neck = new ALine();¶		Neck.setHeight(10);¶		Neck.setWidth(0);¶		Neck.setRadius(INIT_Radius);¶		Neck.setX(INIT_X);¶		Neck.setY(INIT_Y-INIT_Neck);¶		head = new AHead();¶		text = new AStringShape();¶		text.setText("");¶		head.setImageFileName(headImage);¶		head.setX(13);¶		head.setY(INIT_Y-INIT_Head);¶		head.setHeight(90);¶		head.setWidth(80);¶		plate = new APlate();¶		plate.setImageFileName(plateImage);¶		plate.setHeight(0);¶		plate.setWidth(0);¶		plate.setX(INIT_X-20);¶		plate.setY(INIT_Y+30);¶		plate.setZIndex("), Diff(DELETE,"60000"), Diff(INSERT,"1"), Diff(EQUAL,");¶	}¶	¶	@Override¶	public Plate getPlate() {¶		return plate;¶	}¶¶	@Override¶	public void setPlate(Plate newPlate) {¶		plate = newPlate;¶	}¶¶	@Override¶	public Angle getArms() {¶		return Arms;¶	}¶	¶	@Override¶	public void setArms(Angle NewArms) {¶		Arms = NewArms;¶	}¶¶¶	@Override¶	public Angle getLegs() {¶		return Legs;¶	}¶	¶	@Override¶	public void setLegs(Angle NewLegs) {¶		Legs = NewLegs;¶	}¶¶¶	@Override¶	public Line getTorso() {¶		return Torso;¶	}¶	¶	@Override¶	public void setTorso(Line NewTorso) {¶		Torso = NewTorso;¶	}¶¶¶	@Override¶	public Line getNeck() {¶		return Neck;¶	}¶	¶	@Override¶	public void setNeck(Line newNeck) {¶		Neck = newNeck;¶	}¶	¶	@Override¶	public StringShape getText() {¶		return text;¶	}¶	¶	@Override¶	public void setText(StringShape NewText) {¶		text = NewText;¶	}¶	¶¶	@Override¶	public Head getHead() {¶		return head;¶	}¶¶	@Override¶	public void setHead(Head NewHead) {¶		head = NewHead;¶	}¶	¶	@Override¶	public void dropPlate(String imageName) {¶		plate.setImageFileName(imageName);¶		plate.setHeight(40);¶		plate.setWidth(40);¶	"), Diff(INSERT,"	plate.setZIndex(1);¶	"), Diff(EQUAL,"}¶	¶	@Override¶	public void goBack(int X, int Y) {¶		Legs.move(X, Y);¶		Arms.move(X, Y);¶		Torso.move(X, Y);¶		Neck.move(X, Y);¶		head.move(X, Y);¶	}¶	¶	@Override¶	public void move(int X, int Y) {¶		Legs.move(X, Y);¶		Arms.move(X, Y);¶		Torso.move(X, Y);¶		Neck.move(X, Y);¶		head.move(X, Y);¶		plate.move(X, Y);¶	}¶	¶	@Override¶	public void moveTo(int newX, int newY) {¶		Legs.moveTo(newX, newY);¶		Arms.moveTo(newX, newY);¶		Torso.moveTo(newX, newY);¶		Neck.moveTo(newX, newY);¶		head.moveTo(newX, newY);	¶		plate.moveTo(newX, newY);¶	}¶	¶	@Override¶	public void scale(double ratio) {¶		Legs.getRightLine().setRadius(Legs.getRightLine().getRadius()*ratio);¶		Legs.getLeftLine().setRadius(Legs.getLeftLine().getRadius()*ratio);¶		Arms.getRightLine().setRadius(Arms.getRightLine().getRadius()*ratio);¶		Arms.getLeftLine().setRadius(Arms.getLeftLine().getRadius()*ratio);¶		Neck.setRadius(Neck.getRadius()*ratio);¶		Torso.setRadius(Torso.getRadius()*ratio);¶	}¶	¶	¶	@Override¶	public void addPropertyChangeListener(Avatar avatarParameter, PropertyChangeListener aListener) {¶		avatarParameter.getArms().addPropertyChangeListener(getArms(), aListener);¶		avatarParameter.getLegs().addPropertyChangeListener(getLegs(), aListener);¶		avatarParameter.getHead().addPropertyChangeListener(aListener);¶		avatarParameter.getNeck().addPropertyChangeListener(aListener);¶		avatarParameter.getTorso().addPropertyChangeListener(aListener);¶		avatarParameter.getText().addPropertyChangeListener(aListener);¶	}¶	¶	public static void main(String[] args) {¶		Avatar scene = new AnAvatar();¶		scene.getHead().setImageFileName("images/0.png");¶		OEFrame editor = ObjectEditor.edit(scene);¶		editor.showDrawPanel();¶	}¶¶¶¶¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;
import java.beans.PropertyChangeListener;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.misc.ThreadSupport;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"Arms",
	"Legs",
	"Neck",
	"Torso",
	"head",
	"text",
	"plate"
})
@EditablePropertyNames({
	"Arms",
	"Legs",
	"Neck",
	"Torso",
	"head",
	"text"
})
public class AnAvatar implements Avatar {
	Angle Legs;
	Angle Arms;
	Line Torso;
	Line Neck;
	StringShape text;
	Head head;
	String headImage = "";
	String plateImage = "images/12.png";
	Plate plate;
	
	int INIT_X = 50;
	int INIT_Y = 50;
	int INIT_Radius = 20;
	int INIT_Neck = 10;
	int INIT_Head = 99;

	
	public AnAvatar() {
		Legs = new AnAngle();
		Legs.moveX(INIT_X);
		Legs.moveY(INIT_Y+40);
		Arms = new AnAngle();
		Arms.moveX(INIT_X);
		Arms.moveY(INIT_Y);
		Torso = new ALine();
		Torso.setX(INIT_X);
		Torso.setY(INIT_X);
		Neck = new ALine();
		Neck.setHeight(10);
		Neck.setWidth(0);
		Neck.setRadius(INIT_Radius);
		Neck.setX(INIT_X);
		Neck.setY(INIT_Y-INIT_Neck);
		head = new AHead();
		text = new AStringShape();
		text.setText("");
		head.setImageFileName(headImage);
		head.setX(13);
		head.setY(INIT_Y-INIT_Head);
		head.setHeight(90);
		head.setWidth(80);
		plate = new APlate();
		plate.setImageFileName(plateImage);
		plate.setHeight(0);
		plate.setWidth(0);
		plate.setX(INIT_X-20);
		plate.setY(INIT_Y+30);
		plate.setZIndex(1);
	}
	
	@Override
	public Plate getPlate() {
		return plate;
	}

	@Override
	public void setPlate(Plate newPlate) {
		plate = newPlate;
	}

	@Override
	public Angle getArms() {
		return Arms;
	}
	
	@Override
	public void setArms(Angle NewArms) {
		Arms = NewArms;
	}


	@Override
	public Angle getLegs() {
		return Legs;
	}
	
	@Override
	public void setLegs(Angle NewLegs) {
		Legs = NewLegs;
	}


	@Override
	public Line getTorso() {
		return Torso;
	}
	
	@Override
	public void setTorso(Line NewTorso) {
		Torso = NewTorso;
	}


	@Override
	public Line getNeck() {
		return Neck;
	}
	
	@Override
	public void setNeck(Line newNeck) {
		Neck = newNeck;
	}
	
	@Override
	public StringShape getText() {
		return text;
	}
	
	@Override
	public void setText(StringShape NewText) {
		text = NewText;
	}
	

	@Override
	public Head getHead() {
		return head;
	}

	@Override
	public void setHead(Head NewHead) {
		head = NewHead;
	}
	
	@Override
	public void dropPlate(String imageName) {
		plate.setImageFileName(imageName);
		plate.setHeight(40);
		plate.setWidth(40);
		plate.setZIndex(1);
	}
	
	@Override
	public void goBack(int X, int Y) {
		Legs.move(X, Y);
		Arms.move(X, Y);
		Torso.move(X, Y);
		Neck.move(X, Y);
		head.move(X, Y);
	}
	
	@Override
	public void move(int X, int Y) {
		Legs.move(X, Y);
		Arms.move(X, Y);
		Torso.move(X, Y);
		Neck.move(X, Y);
		head.move(X, Y);
		plate.move(X, Y);
	}
	
	@Override
	public void moveTo(int newX, int newY) {
		Legs.moveTo(newX, newY);
		Arms.moveTo(newX, newY);
		Torso.moveTo(newX, newY);
		Neck.moveTo(newX, newY);
		head.moveTo(newX, newY);	
		plate.moveTo(newX, newY);
	}
	
	@Override
	public void scale(double ratio) {
		Legs.getRightLine().setRadius(Legs.getRightLine().getRadius()*ratio);
		Legs.getLeftLine().setRadius(Legs.getLeftLine().getRadius()*ratio);
		Arms.getRightLine().setRadius(Arms.getRightLine().getRadius()*ratio);
		Arms.getLeftLine().setRadius(Arms.getLeftLine().getRadius()*ratio);
		Neck.setRadius(Neck.getRadius()*ratio);
		Torso.setRadius(Torso.getRadius()*ratio);
	}
	
	
	@Override
	public void addPropertyChangeListener(Avatar avatarParameter, PropertyChangeListener aListener) {
		avatarParameter.getArms().addPropertyChangeListener(getArms(), aListener);
		avatarParameter.getLegs().addPropertyChangeListener(getLegs(), aListener);
		avatarParameter.getHead().addPropertyChangeListener(aListener);
		avatarParameter.getNeck().addPropertyChangeListener(aListener);
		avatarParameter.getTorso().addPropertyChangeListener(aListener);
		avatarParameter.getText().addPropertyChangeListener(aListener);
	}
	
	public static void main(String[] args) {
		Avatar scene = new AnAvatar();
		scene.getHead().setImageFileName("images/0.png");
		OEFrame editor = ObjectEditor.edit(scene);
		editor.showDrawPanel();
	}




	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="5504" _type="Insert" date="Wed Mar 23 15:57:46 EDT 2022" docASTNodeCount="860" docActiveCodeLength="4658" docExpressionCount="584" docLength="4658" length="12" offset="1024" repeat="9" starttimestamp="1647716908162" timestamp="348558290" timestamp2="348560070">
    <text><![CDATA[
		Legs.set]]></text>
  </DocumentChange>
  <Command __id="5530" _type="PauseCommand" date="Wed Mar 23 15:57:49 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348561229">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1110]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="5529" _type="Delete" date="Wed Mar 23 15:57:49 EDT 2022" docASTNodeCount="858" docActiveCodeLength="4653" docExpressionCount="582" docLength="4653" endLine="52" length="5" offset="1031" repeat="5" startLine="52" starttimestamp="1647716908162" timestamp="348561229" timestamp2="348562421">
    <text><![CDATA[s.set]]></text>
  </DocumentChange>
  <Command __id="5531" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:57:49 EDT 2022" starttimestamp="1647716908162" timestamp="348561294" />
  <Command __id="5532" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:57:49 EDT 2022" starttimestamp="1647716908162" timestamp="348561294" />
  <Command __id="5534" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:57:49 EDT 2022" starttimestamp="1647716908162" timestamp="348561388" />
  <Command __id="5535" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:57:49 EDT 2022" starttimestamp="1647716908162" timestamp="348561388" />
  <Command __id="5537" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:57:49 EDT 2022" starttimestamp="1647716908162" timestamp="348561537" />
  <Command __id="5538" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:57:49 EDT 2022" starttimestamp="1647716908162" timestamp="348561537" />
  <Command __id="5540" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:57:49 EDT 2022" starttimestamp="1647716908162" timestamp="348561766" />
  <Command __id="5541" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:57:49 EDT 2022" starttimestamp="1647716908162" timestamp="348561766" />
  <Command __id="5543" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:57:50 EDT 2022" starttimestamp="1647716908162" timestamp="348562472" />
  <Command __id="5544" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Mar 23 15:57:50 EDT 2022" starttimestamp="1647716908162" timestamp="348562472" />
  <Command __id="5546" _type="InsertStringCommand" date="Wed Mar 23 15:57:51 EDT 2022" starttimestamp="1647716908162" timestamp="348563174" timestamp2="348563174">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5547" _type="InsertStringCommand" date="Wed Mar 23 15:57:51 EDT 2022" starttimestamp="1647716908162" timestamp="348563175" timestamp2="348563175">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5549" _type="InsertStringCommand" date="Wed Mar 23 15:57:51 EDT 2022" starttimestamp="1647716908162" timestamp="348563358" timestamp2="348563358">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5550" _type="InsertStringCommand" date="Wed Mar 23 15:57:51 EDT 2022" starttimestamp="1647716908162" timestamp="348563358" timestamp2="348563358">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5551" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:57:51 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="348563362" />
  <Command __id="5553" _type="PauseCommand" date="Wed Mar 23 15:57:54 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348566294">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2932]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="5552" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:57:54 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="348566294" />
  <Command __id="5555" _type="InsertStringCommand" date="Wed Mar 23 15:57:54 EDT 2022" starttimestamp="1647716908162" timestamp="348566322" timestamp2="348566322">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5556" _type="InsertStringCommand" date="Wed Mar 23 15:57:54 EDT 2022" starttimestamp="1647716908162" timestamp="348566322" timestamp2="348566322">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5558" _type="InsertStringCommand" date="Wed Mar 23 15:57:55 EDT 2022" starttimestamp="1647716908162" timestamp="348566872" timestamp2="348566872">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5559" _type="InsertStringCommand" date="Wed Mar 23 15:57:55 EDT 2022" starttimestamp="1647716908162" timestamp="348566873" timestamp2="348566873">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5560" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:57:55 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="348566887" />
  <DocumentChange __id="5545" _type="Insert" date="Wed Mar 23 15:57:51 EDT 2022" docASTNodeCount="858" docActiveCodeLength="4655" docExpressionCount="584" docLength="4655" length="2" offset="1031" repeat="2" starttimestamp="1647716908162" timestamp="348563128" timestamp2="348563314">
    <text><![CDATA[s.]]></text>
  </DocumentChange>
  <DocumentChange __id="5554" _type="Insert" date="Wed Mar 23 15:57:54 EDT 2022" docASTNodeCount="864" docActiveCodeLength="4672" docExpressionCount="589" docLength="4672" length="17" offset="1033" repeat="5" starttimestamp="1647716908162" timestamp="348566308" timestamp2="348567875">
    <text><![CDATA[getLeftLine().get]]></text>
  </DocumentChange>
  <Command __id="5565" _type="PauseCommand" date="Wed Mar 23 15:57:57 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348569572">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2685]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="5572" _type="PauseCommand" date="Wed Mar 23 15:58:00 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348571925">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1703]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="5571" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:58:00 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="348571925" />
  <Command __id="5574" _type="InsertStringCommand" date="Wed Mar 23 15:58:00 EDT 2022" starttimestamp="1647716908162" timestamp="348572183" timestamp2="348572183">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5575" _type="InsertStringCommand" date="Wed Mar 23 15:58:00 EDT 2022" starttimestamp="1647716908162" timestamp="348572184" timestamp2="348572184">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5577" _type="InsertStringCommand" date="Wed Mar 23 15:58:01 EDT 2022" starttimestamp="1647716908162" timestamp="348573217" timestamp2="348573217">
    <data><![CDATA[4]]></data>
  </Command>
  <Command __id="5578" _type="InsertStringCommand" date="Wed Mar 23 15:58:01 EDT 2022" starttimestamp="1647716908162" timestamp="348573217" timestamp2="348573217">
    <data><![CDATA[4]]></data>
  </Command>
  <Command __id="5580" _type="InsertStringCommand" date="Wed Mar 23 15:58:01 EDT 2022" starttimestamp="1647716908162" timestamp="348573445" timestamp2="348573445">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="5581" _type="InsertStringCommand" date="Wed Mar 23 15:58:01 EDT 2022" starttimestamp="1647716908162" timestamp="348573445" timestamp2="348573445">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="5583" _type="InsertStringCommand" date="Wed Mar 23 15:58:01 EDT 2022" starttimestamp="1647716908162" timestamp="348573502" timestamp2="348573502">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="5584" _type="InsertStringCommand" date="Wed Mar 23 15:58:01 EDT 2022" starttimestamp="1647716908162" timestamp="348573502" timestamp2="348573502">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="5585" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:58:02 EDT 2022" starttimestamp="1647716908162" timestamp="348573988" />
  <Command __id="5586" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:58:02 EDT 2022" starttimestamp="1647716908162" timestamp="348573988" />
  <Command __id="5587" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:58:02 EDT 2022" starttimestamp="1647716908162" timestamp="348574246" />
  <Command __id="5588" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Mar 23 15:58:02 EDT 2022" starttimestamp="1647716908162" timestamp="348574247" />
  <Command __id="5590" _type="InsertStringCommand" date="Wed Mar 23 15:58:02 EDT 2022" starttimestamp="1647716908162" timestamp="348574555" timestamp2="348574555">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5591" _type="InsertStringCommand" date="Wed Mar 23 15:58:02 EDT 2022" starttimestamp="1647716908162" timestamp="348574555" timestamp2="348574555">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5593" _type="InsertStringCommand" date="Wed Mar 23 15:58:03 EDT 2022" starttimestamp="1647716908162" timestamp="348575326" timestamp2="348575326">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="5594" _type="InsertStringCommand" date="Wed Mar 23 15:58:03 EDT 2022" starttimestamp="1647716908162" timestamp="348575326" timestamp2="348575326">
    <data><![CDATA[L]]></data>
  </Command>
  <Command __id="5596" _type="InsertStringCommand" date="Wed Mar 23 15:58:03 EDT 2022" starttimestamp="1647716908162" timestamp="348575508" timestamp2="348575508">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5597" _type="InsertStringCommand" date="Wed Mar 23 15:58:03 EDT 2022" starttimestamp="1647716908162" timestamp="348575508" timestamp2="348575508">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="5599" _type="InsertStringCommand" date="Wed Mar 23 15:58:03 EDT 2022" starttimestamp="1647716908162" timestamp="348575831" timestamp2="348575831">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5600" _type="InsertStringCommand" date="Wed Mar 23 15:58:03 EDT 2022" starttimestamp="1647716908162" timestamp="348575831" timestamp2="348575831">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="5602" _type="InsertStringCommand" date="Wed Mar 23 15:58:04 EDT 2022" starttimestamp="1647716908162" timestamp="348576006" timestamp2="348576006">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5603" _type="InsertStringCommand" date="Wed Mar 23 15:58:04 EDT 2022" starttimestamp="1647716908162" timestamp="348576006" timestamp2="348576006">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="5605" _type="InsertStringCommand" date="Wed Mar 23 15:58:04 EDT 2022" starttimestamp="1647716908162" timestamp="348576157" timestamp2="348576157">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5606" _type="InsertStringCommand" date="Wed Mar 23 15:58:04 EDT 2022" starttimestamp="1647716908162" timestamp="348576157" timestamp2="348576157">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5607" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:58:04 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="348576164" />
  <Command __id="5612" _type="PauseCommand" date="Wed Mar 23 15:58:06 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348578528">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2364]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="5611" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:58:06 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="348578528" />
  <Command __id="5614" _type="InsertStringCommand" date="Wed Mar 23 15:58:06 EDT 2022" starttimestamp="1647716908162" timestamp="348578556" timestamp2="348578556">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5615" _type="InsertStringCommand" date="Wed Mar 23 15:58:06 EDT 2022" starttimestamp="1647716908162" timestamp="348578556" timestamp2="348578556">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5617" _type="InsertStringCommand" date="Wed Mar 23 15:58:07 EDT 2022" starttimestamp="1647716908162" timestamp="348578997" timestamp2="348578997">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5618" _type="InsertStringCommand" date="Wed Mar 23 15:58:07 EDT 2022" starttimestamp="1647716908162" timestamp="348578997" timestamp2="348578997">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="5619" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Mar 23 15:58:07 EDT 2022" start_end="START" starttimestamp="1647716908162" timestamp="348579007" />
  <Command __id="5624" _type="PauseCommand" date="Wed Mar 23 15:58:09 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348581013">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2006]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="5623" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:58:09 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="348581013" />
  <Command __id="5626" _type="InsertStringCommand" date="Wed Mar 23 15:58:09 EDT 2022" starttimestamp="1647716908162" timestamp="348581430" timestamp2="348581430">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5627" _type="InsertStringCommand" date="Wed Mar 23 15:58:09 EDT 2022" starttimestamp="1647716908162" timestamp="348581430" timestamp2="348581430">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="5629" _type="InsertStringCommand" date="Wed Mar 23 15:58:10 EDT 2022" starttimestamp="1647716908162" timestamp="348582217" timestamp2="348582217">
    <data><![CDATA[4]]></data>
  </Command>
  <Command __id="5630" _type="InsertStringCommand" date="Wed Mar 23 15:58:10 EDT 2022" starttimestamp="1647716908162" timestamp="348582217" timestamp2="348582217">
    <data><![CDATA[4]]></data>
  </Command>
  <Command __id="5632" _type="InsertStringCommand" date="Wed Mar 23 15:58:10 EDT 2022" starttimestamp="1647716908162" timestamp="348582327" timestamp2="348582327">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="5633" _type="InsertStringCommand" date="Wed Mar 23 15:58:10 EDT 2022" starttimestamp="1647716908162" timestamp="348582327" timestamp2="348582327">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="5635" _type="InsertStringCommand" date="Wed Mar 23 15:58:10 EDT 2022" starttimestamp="1647716908162" timestamp="348582468" timestamp2="348582468">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="5636" _type="InsertStringCommand" date="Wed Mar 23 15:58:10 EDT 2022" starttimestamp="1647716908162" timestamp="348582468" timestamp2="348582468">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="5638" _type="PauseCommand" date="Wed Mar 23 15:58:11 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348583484">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1016]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="5637" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Mar 23 15:58:11 EDT 2022" start_end="END" starttimestamp="1647716908162" timestamp="348583484" />
  <Command __id="5639" _type="MoveCaretCommand" caretOffset="1101" date="Wed Mar 23 15:58:11 EDT 2022" docOffset="1101" starttimestamp="1647716908162" timestamp="348583541" />
  <Command __id="5640" _type="MoveCaretCommand" caretOffset="1101" date="Wed Mar 23 15:58:11 EDT 2022" docOffset="1101" starttimestamp="1647716908162" timestamp="348583541" />
  <Command __id="5641" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Mar 23 15:58:12 EDT 2022" starttimestamp="1647716908162" timestamp="348584393" />
  <Command __id="5642" _type="EclipseCommand" commandID="" date="Wed Mar 23 15:58:12 EDT 2022" starttimestamp="1647716908162" timestamp="348584474" />
  <Command __id="5643" _type="EclipseCommand" commandID="" date="Wed Mar 23 15:58:12 EDT 2022" starttimestamp="1647716908162" timestamp="348584551" />
  <DocumentChange __id="5564" _type="Delete" date="Wed Mar 23 15:57:57 EDT 2022" docASTNodeCount="860" docActiveCodeLength="4669" docExpressionCount="586" docLength="4669" endLine="52" length="3" offset="1047" repeat="3" startLine="52" starttimestamp="1647716908162" timestamp="348569572" timestamp2="348569881">
    <text><![CDATA[get]]></text>
  </DocumentChange>
  <DocumentChange __id="5568" _type="Insert" date="Wed Mar 23 15:57:58 EDT 2022" docASTNodeCount="864" docActiveCodeLength="4672" docExpressionCount="589" docLength="4672" length="3" offset="1047" repeat="3" starttimestamp="1647716908162" timestamp="348570222" timestamp2="348570415">
    <text><![CDATA[set]]></text>
  </DocumentChange>
  <DocumentChange __id="5573" _type="Replace" date="Wed Mar 23 15:58:00 EDT 2022" docASTNodeCount="863" docActiveCodeLength="4690" docExpressionCount="588" docLength="4690" endLine="52" insertionLength="21" int_docASTNodeCount="860" int_docActiveCodeLength="4669" int_docExpressionCount="586" int_docLength="4669" length="3" offset="1047" startLine="52" starttimestamp="1647716908162" timestamp="348571928">
    <deletedText><![CDATA[set]]></deletedText>
    <insertedText><![CDATA[setZIndex(INIT_Head);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5576" _type="Replace" date="Wed Mar 23 15:58:01 EDT 2022" docASTNodeCount="863" docActiveCodeLength="4682" docExpressionCount="588" docLength="4682" endLine="52" insertionLength="1" int_docASTNodeCount="862" int_docActiveCodeLength="4681" int_docExpressionCount="587" int_docLength="4681" length="9" offset="1057" startLine="52" starttimestamp="1647716908162" timestamp="348573146">
    <deletedText><![CDATA[INIT_Head]]></deletedText>
    <insertedText><![CDATA[4]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5579" _type="Insert" date="Wed Mar 23 15:58:01 EDT 2022" docASTNodeCount="863" docActiveCodeLength="4684" docExpressionCount="588" docLength="4684" length="2" offset="1058" repeat="2" starttimestamp="1647716908162" timestamp="348573415" timestamp2="348573474">
    <text><![CDATA[00]]></text>
  </DocumentChange>
  <DocumentChange __id="5589" _type="Insert" date="Wed Mar 23 15:58:02 EDT 2022" docASTNodeCount="867" docActiveCodeLength="4696" docExpressionCount="590" docLength="4696" length="12" offset="1062" repeat="9" starttimestamp="1647716908162" timestamp="348574520" timestamp2="348577040">
    <text><![CDATA[
		Legs.get]]></text>
  </DocumentChange>
  <DocumentChange __id="5613" _type="Replace" date="Wed Mar 23 15:58:06 EDT 2022" docASTNodeCount="867" docActiveCodeLength="4707" docExpressionCount="591" docLength="4707" endLine="53" insertionLength="14" int_docASTNodeCount="865" int_docActiveCodeLength="4693" int_docExpressionCount="590" int_docLength="4693" length="3" offset="1071" startLine="53" starttimestamp="1647716908162" timestamp="348578531">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getRightLine()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5616" _type="Insert" date="Wed Mar 23 15:58:07 EDT 2022" docASTNodeCount="871" docActiveCodeLength="4711" docExpressionCount="595" docLength="4711" length="4" offset="1085" repeat="4" starttimestamp="1647716908162" timestamp="348578943" timestamp2="348579629">
    <text><![CDATA[.set]]></text>
  </DocumentChange>
  <DocumentChange __id="5625" _type="Replace" date="Wed Mar 23 15:58:09 EDT 2022" docASTNodeCount="870" docActiveCodeLength="4729" docExpressionCount="594" docLength="4729" endLine="53" insertionLength="21" int_docASTNodeCount="867" int_docActiveCodeLength="4708" int_docExpressionCount="592" int_docLength="4708" length="3" offset="1086" startLine="53" starttimestamp="1647716908162" timestamp="348581018">
    <deletedText><![CDATA[set]]></deletedText>
    <insertedText><![CDATA[setZIndex(INIT_Head);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5628" _type="Replace" date="Wed Mar 23 15:58:10 EDT 2022" docASTNodeCount="870" docActiveCodeLength="4721" docExpressionCount="594" docLength="4721" endLine="53" insertionLength="1" int_docASTNodeCount="869" int_docActiveCodeLength="4720" int_docExpressionCount="593" int_docLength="4720" length="9" offset="1096" startLine="53" starttimestamp="1647716908162" timestamp="348582149">
    <deletedText><![CDATA[INIT_Head]]></deletedText>
    <insertedText><![CDATA[4]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="5631" _type="Insert" date="Wed Mar 23 15:58:10 EDT 2022" docASTNodeCount="870" docActiveCodeLength="4723" docExpressionCount="594" docLength="4723" length="2" offset="1097" repeat="2" starttimestamp="1647716908162" timestamp="348582299" timestamp2="348582436">
    <text><![CDATA[00]]></text>
  </DocumentChange>
  <Command __id="5645" _type="PauseCommand" date="Wed Mar 23 15:58:17 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348589216">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4665]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5649" _type="EclipseCommand" commandID="" date="Wed Mar 23 15:58:22 EDT 2022" starttimestamp="1647716908162" timestamp="348594691" />
  <Command __id="5651" _type="EclipseCommand" commandID="" date="Wed Mar 23 15:58:22 EDT 2022" starttimestamp="1647716908162" timestamp="348594799" />
  <Command __id="5652" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:58:23 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348595096" type="Run" />
  <Command __id="5653" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 15:58:23 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348595096" type="Run" />
  <Command __id="5655" _type="PauseCommand" date="Wed Mar 23 15:58:24 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348596373">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1277]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5654" _type="ConsoleOutput" date="Wed Mar 23 15:58:24 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348596373" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"0¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@49e65756]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@49e65756]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@49e65756]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@49e65756]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@32d73117]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@32d73117]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@32d73117]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@32d73117]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@36d510ac]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@36d510ac]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@36d510ac]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@36d510ac]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@11bc6226]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@11bc6226]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@11bc6226]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@11bc6226]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4b08f67c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4b08f67c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4b08f67c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@4b08f67c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4addc23f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@4addc23f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@4addc23f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@4addc23f]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@25664f9a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@25664f9a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@25664f9a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@25664f9a]¶W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: ZIndex of object: graphics.APlate@789c600e. Ignoring notification."), Diff(INSERT,"W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5656" _type="ShellCommand" date="Wed Mar 23 15:58:25 EDT 2022" starttimestamp="1647716908162" timestamp="348597156" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5658" _type="PauseCommand" date="Wed Mar 23 15:58:26 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348598342">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1186]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5657" _type="ConsoleOutput" date="Wed Mar 23 15:58:26 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348598342" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScene"), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron"), Diff(EQUAL,".addPropertyChangeListener("), Diff(INSERT,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE," should be associated with"), Diff(INSERT,"¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"Property Listener)"), Diff(INSERT,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5659" _type="ConsoleOutput" date="Wed Mar 23 15:58:26 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348598406" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W***"), Diff(DELETE," Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method"), Diff(EQUAL," public void graphics.A"), Diff(DELETE,"Patron"), Diff(INSERT,"Table"), Diff(EQUAL,".addPropertyChangeListener("), Diff(DELETE,"graphics.Patron,"), Diff(EQUAL,"java.beans.PropertyChangeListener)"), Diff(DELETE,"¶W*** Use"), Diff(INSERT," should be associated with"), Diff(EQUAL," annotation"), Diff(INSERT,":"), Diff(EQUAL," @ObserverRegisterer("), Diff(DELETE,"interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChange"), Diff(INSERT,"Property "), Diff(EQUAL,"Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnA"), Diff(DELETE,"vatar"), Diff(INSERT,"ngle"), Diff(EQUAL,".addPropertyChangeListener(graphics.A"), Diff(DELETE,"vatar"), Diff(INSERT,"ngle"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.A"), Diff(DELETE,"vatar"), Diff(INSERT,"ngle"), Diff(EQUAL,".addPropertyChangeListener(graphics.A"), Diff(DELETE,"vatar"), Diff(INSERT,"ngle"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶"), Diff(DELETE,"W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. ¶")]]]></diff>
  </Command>
  <Command __id="5660" _type="ConsoleOutput" date="Wed Mar 23 15:58:26 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348598493" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be a"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ A"), Diff(EQUAL,"ssociate"), Diff(DELETE,"d with"), Diff(EQUAL," annotation"), Diff(DELETE,":"), Diff(EQUAL," @"), Diff(DELETE,"ObserverRegisterer(Property Listener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(INSERT,"Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5661" _type="ConsoleOutput" date="Wed Mar 23 15:58:26 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348598790" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5663" _type="PauseCommand" date="Wed Mar 23 15:58:33 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348605061">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6271]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5662" _type="ConsoleOutput" date="Wed Mar 23 15:58:33 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348605061" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5683bb49]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5683bb49]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5683bb49]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5683bb49]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@e4b96ab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@e4b96ab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@e4b96ab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@e4b96ab]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4d062cb3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4d062cb3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4d062cb3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4d062cb3]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@74f98603]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@74f98603]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@74f98603]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@74f98603]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3feb3226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3feb3226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3feb3226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3feb3226]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6d4715be]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6d4715be]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@6d4715be]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@6d4715be]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1158df11]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1158df11]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1158df11]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1158df11]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5683bb49]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5683bb49]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5683bb49]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@5683bb49]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@e4b96ab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@e4b96ab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@e4b96ab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@e4b96ab]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4d062cb3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4d062cb3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4d062cb3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@4d062cb3]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@74f98603]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@74f98603]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@74f98603]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@74f98603]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3feb3226]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@3feb3226]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3feb3226]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@3feb3226]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6d4715be]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@6d4715be]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@6d4715be]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@6d4715be]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1158df11]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1158df11]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1158df11]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1158df11]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5665" _type="PauseCommand" date="Wed Mar 23 15:58:36 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348608710">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3649]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5664" _type="ConsoleOutput" date="Wed Mar 23 15:58:36 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="348608710" type="ConsoleOutput">
    <outputString><![CDATA[0
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@31ff080d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@31ff080d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@31ff080d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@31ff080d]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6ba09e70]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6ba09e70]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6ba09e70]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6ba09e70]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@7dc06b8a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@7dc06b8a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@7dc06b8a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@7dc06b8a]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5c734157]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5c734157]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5c734157]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5c734157]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@f691835]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@f691835]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@f691835]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@f691835]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@10b1f3d7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@10b1f3d7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@10b1f3d7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@10b1f3d7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@2b3165c7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@2b3165c7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@2b3165c7]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@2b3165c7]
W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: ZIndex of object: graphics.APlate@ebea3c9. Ignoring notification.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1"), Diff(INSERT,"0"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5683bb49"), Diff(INSERT,"31ff080d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5683bb49"), Diff(INSERT,"31ff080d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5683bb49"), Diff(INSERT,"31ff080d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5683bb49"), Diff(INSERT,"31ff080d"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"e4b96ab"), Diff(INSERT,"6ba09e70"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"e4b96ab"), Diff(INSERT,"6ba09e70"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"e4b96ab"), Diff(INSERT,"6ba09e70"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"e4b96ab"), Diff(INSERT,"6ba09e70"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"4d062cb3"), Diff(INSERT,"7dc06b8a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"4d062cb3"), Diff(INSERT,"7dc06b8a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"4d062cb3"), Diff(INSERT,"7dc06b8a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"4d062cb3"), Diff(INSERT,"7dc06b8a"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"74f98603"), Diff(INSERT,"5c734157"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"74f98603"), Diff(INSERT,"5c734157"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"74f98603"), Diff(INSERT,"5c734157"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"74f98603"), Diff(INSERT,"5c734157"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3feb3226"), Diff(INSERT,"f691835"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3feb3226"), Diff(INSERT,"f691835"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3feb3226"), Diff(INSERT,"f691835"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"3feb3226"), Diff(INSERT,"f691835"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6d4715be"), Diff(INSERT,"10b1f3d7"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6d4715be"), Diff(INSERT,"10b1f3d7"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(EQUAL,"90; newValue="), Diff(DELETE,"39"), Diff(INSERT,"11"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6d4715be"), Diff(INSERT,"10b1f3d7"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(EQUAL,"90; newValue="), Diff(DELETE,"39"), Diff(INSERT,"11"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"6d4715be"), Diff(INSERT,"10b1f3d7"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"63; newValue="), Diff(DELETE,"9"), Diff(INSERT,"52"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"1158df11"), Diff(INSERT,"2b3165c7"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"63; newValue="), Diff(DELETE,"9"), Diff(INSERT,"52"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"1158df11"), Diff(INSERT,"2b3165c7"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"30"), Diff(EQUAL,"1; newValue="), Diff(DELETE,"30"), Diff(INSERT,"2"), Diff(EQUAL,"1; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"1158df11"), Diff(INSERT,"2b3165c7"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"30"), Diff(EQUAL,"1; newValue="), Diff(DELETE,"30"), Diff(INSERT,"2"), Diff(EQUAL,"1; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"1158df11]¶Moving the stove: "), Diff(INSERT,"2b3165c7]¶W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: ZIndex of object: graphics.APlate@ebea3c9. Ignoring notification."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5667" _type="PauseCommand" date="Wed Mar 23 15:58:44 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348616317">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7607]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5666" _type="ShellCommand" date="Wed Mar 23 15:58:44 EDT 2022" starttimestamp="1647716908162" timestamp="348616317" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5644" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:58:17 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348589216">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5669" _type="PauseCommand" date="Wed Mar 23 15:58:51 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348623275">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6958]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5670" _type="MoveCaretCommand" caretOffset="1241" date="Wed Mar 23 15:58:52 EDT 2022" docOffset="1241" starttimestamp="1647716908162" timestamp="348624076" />
  <Command __id="5668" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:58:51 EDT 2022" docASTNodeCount="404" docActiveCodeLength="2486" docExpressionCount="254" docLength="2755" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348623275">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ALine.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.models.PropertyListenerRegisterer;¶¶@StructurePattern(StructurePatternNames.LINE_PATTERN)¶@PropertyNames({¶	"x",¶	"y",¶	"width",¶	"height",¶	"radius",¶	"angle""), Diff(INSERT,",¶	"ZIndex""), Diff(EQUAL,"¶	})¶@EditablePropertyNames({¶	"radius",¶	"angle",¶	"x",¶	"y",¶	"height",¶	"width""), Diff(INSERT,",¶	"ZIndex""), Diff(EQUAL,"¶})¶¶public class ALine extends ABoundedShape implements Line, PropertyListenerRegisterer, BoundedShape {¶	int x, y, width, height;¶	double radius, angle;¶	¶	int INIT_Angle = 45;¶	int INIT_Radius = 40;¶	int INIT_Rotate = 6;¶	int INIT_XY = 50;¶¶	public ALine() {¶		setRadius(INIT_Radius);¶		setAngle(INIT_Angle);¶		rotate(INIT_Rotate);¶		setX(INIT_XY);¶		setY(INIT_XY);¶	}¶	¶	public ALine(int INIT_X, int INIT_Y, double INIT_Radius, int INIT_Rotate) {¶		setX(INIT_X);¶		setY(INIT_Y);¶		setRadius(INIT_Radius);¶		setAngle(INIT_Angle);¶		rotate(INIT_Rotate);¶	}¶¶	public ALine(double newRadius, double newAngle) {¶		setRadius(newRadius);¶		setAngle(newAngle);¶	}¶//	¶//	@Override¶//	public void setX(int newX) {¶//		int oldX = x;¶//		x = newX;¶//		¶//	}¶//¶//	@Override¶//	public void setY(int newY) {¶//		int oldY = y;¶//		y = newY;¶//	}¶//¶//	@Override¶//	public int getX() {¶//		return x;¶//	}¶//¶//	@Override¶//	public int getY() {¶//		return y;¶//	}¶¶	public double getRadius() {¶		return radius;¶	}¶¶	public void setRadius(double newRadius) {¶		double oldRadius = radius;¶		radius = newRadius;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "radius", oldRadius, radius));¶		¶	}¶¶	public double getAngle() {¶		return angle;	¶	}¶¶	public void setAngle(double newAngle) {¶		double oldAngle = angle;¶		angle = newAngle;¶		height = (int) (getRadius()*Math.sin(angle));¶		width = (int) (getRadius()*Math.cos(angle));¶		¶		setHeight(height);¶		setWidth(width);¶¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "angle", oldAngle, angle));¶	}¶¶	public void rotate(int units) {¶		double rotate = units * Math.PI/32;¶		setAngle(rotate + angle);¶	}¶¶	@Override¶	public void move(int newX, int newY) {¶		setX(getX()+newX);¶		setY(getY()+newY);¶	}¶	¶	@Override¶	public void moveTo(int newX, int newY) {¶		setX(newX);¶		setY(newY);¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		propertySupport.addPropertyChangeListener(arg0);¶	}¶¶}")]]]></diff>
    <snapshot><![CDATA[package graphics;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.models.PropertyListenerRegisterer;

@StructurePattern(StructurePatternNames.LINE_PATTERN)
@PropertyNames({
	"x",
	"y",
	"width",
	"height",
	"radius",
	"angle",
	"ZIndex"
	})
@EditablePropertyNames({
	"radius",
	"angle",
	"x",
	"y",
	"height",
	"width",
	"ZIndex"
})

public class ALine extends ABoundedShape implements Line, PropertyListenerRegisterer, BoundedShape {
	int x, y, width, height;
	double radius, angle;
	
	int INIT_Angle = 45;
	int INIT_Radius = 40;
	int INIT_Rotate = 6;
	int INIT_XY = 50;

	public ALine() {
		setRadius(INIT_Radius);
		setAngle(INIT_Angle);
		rotate(INIT_Rotate);
		setX(INIT_XY);
		setY(INIT_XY);
	}
	
	public ALine(int INIT_X, int INIT_Y, double INIT_Radius, int INIT_Rotate) {
		setX(INIT_X);
		setY(INIT_Y);
		setRadius(INIT_Radius);
		setAngle(INIT_Angle);
		rotate(INIT_Rotate);
	}

	public ALine(double newRadius, double newAngle) {
		setRadius(newRadius);
		setAngle(newAngle);
	}
//	
//	@Override
//	public void setX(int newX) {
//		int oldX = x;
//		x = newX;
//		
//	}
//
//	@Override
//	public void setY(int newY) {
//		int oldY = y;
//		y = newY;
//	}
//
//	@Override
//	public int getX() {
//		return x;
//	}
//
//	@Override
//	public int getY() {
//		return y;
//	}

	public double getRadius() {
		return radius;
	}

	public void setRadius(double newRadius) {
		double oldRadius = radius;
		radius = newRadius;
		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "radius", oldRadius, radius));
		
	}

	public double getAngle() {
		return angle;	
	}

	public void setAngle(double newAngle) {
		double oldAngle = angle;
		angle = newAngle;
		height = (int) (getRadius()*Math.sin(angle));
		width = (int) (getRadius()*Math.cos(angle));
		
		setHeight(height);
		setWidth(width);

		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "angle", oldAngle, angle));
	}

	public void rotate(int units) {
		double rotate = units * Math.PI/32;
		setAngle(rotate + angle);
	}

	@Override
	public void move(int newX, int newY) {
		setX(getX()+newX);
		setY(getY()+newY);
	}
	
	@Override
	public void moveTo(int newX, int newY) {
		setX(newX);
		setY(newY);
	}
	
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		propertySupport.addPropertyChangeListener(arg0);
	}

}]]></snapshot>
  </Command>
  <Command __id="5672" _type="PauseCommand" date="Wed Mar 23 15:59:00 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348632082">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8006]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5673" _type="MoveCaretCommand" caretOffset="531" date="Wed Mar 23 15:59:00 EDT 2022" docOffset="531" starttimestamp="1647716908162" timestamp="348632807" />
  <Command __id="5675" _type="PauseCommand" date="Wed Mar 23 15:59:11 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="348643294">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10487]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5674" _type="MoveCaretCommand" caretOffset="740" date="Wed Mar 23 15:59:11 EDT 2022" docOffset="740" starttimestamp="1647716908162" timestamp="348643294" />
  <Command __id="5671" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:59:00 EDT 2022" docASTNodeCount="225" docActiveCodeLength="1535" docExpressionCount="139" docLength="1632" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348632082">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ALocatable.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.Tags;¶import util.models.PropertyListenerRegisterer;¶¶¶@PropertyNames({¶	"x",¶	"y",¶	"ZIndex"¶	})¶@EditablePropertyNames({¶	"x",¶	"y",¶	"ZIndex"¶})¶public class ALocatable implements Locatable, PropertyListenerRegisterer {¶	int x, y;¶	int ZIndex;¶	¶	PropertyListenerSupport propertySupport = new APropertyListenerSupport();¶	¶	//List<PropertyChangeListener> propertyChangeListeners = new ArrayList<PropertyChangeListener>();¶	¶	public ALocatable() {¶	}¶	¶	@Override¶	public void setX(int newX) {¶		int oldX = x;¶		x = newX;¶		¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "x", oldX, newX));¶		¶	}¶¶	@Override¶	public void setY(int newY) {¶		int oldY = y;¶		y = newY;¶		¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "x", oldY, newY));¶	}¶¶	@Override¶	public int getX() {¶		return x;¶	}¶¶	@Override¶	public int getY() {¶		return y;¶	}¶	¶	@Override¶	public int getZIndex() {¶		return ZIndex;¶		¶	}¶	¶	@Override¶	public void setZIndex(int newValue) {¶		int oldZIndex = ZIndex;¶		ZIndex = newValue;¶		¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "ZIndex", oldZIndex, ZIndex));¶		¶	}¶¶	@Override¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		propertySupport.addPropertyChangeListener(arg0);¶	}¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5677" _type="PauseCommand" date="Wed Mar 23 15:59:17 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348649781">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6487]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5678" _type="MoveCaretCommand" caretOffset="1241" date="Wed Mar 23 15:59:18 EDT 2022" docOffset="1241" starttimestamp="1647716908162" timestamp="348650542" />
  <Command __id="5676" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:59:17 EDT 2022" docASTNodeCount="404" docActiveCodeLength="2486" docExpressionCount="254" docLength="2755" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348649781">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ALine.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.models.PropertyListenerRegisterer;¶¶@StructurePattern(StructurePatternNames.LINE_PATTERN)¶@PropertyNames({¶	"x",¶	"y",¶	"width",¶	"height",¶	"radius",¶	"angle",¶	"ZIndex"¶	})¶@EditablePropertyNames({¶	"radius",¶	"angle",¶	"x",¶	"y",¶	"height",¶	"width",¶	"ZIndex"¶})¶¶public class ALine extends ABoundedShape implements Line, PropertyListenerRegisterer, BoundedShape {¶	int x, y, width, height;¶	double radius, angle;¶	¶	int INIT_Angle = 45;¶	int INIT_Radius = 40;¶	int INIT_Rotate = 6;¶	int INIT_XY = 50;¶¶	public ALine() {¶		setRadius(INIT_Radius);¶		setAngle(INIT_Angle);¶		rotate(INIT_Rotate);¶		setX(INIT_XY);¶		setY(INIT_XY);¶	}¶	¶	public ALine(int INIT_X, int INIT_Y, double INIT_Radius, int INIT_Rotate) {¶		setX(INIT_X);¶		setY(INIT_Y);¶		setRadius(INIT_Radius);¶		setAngle(INIT_Angle);¶		rotate(INIT_Rotate);¶	}¶¶	public ALine(double newRadius, double newAngle) {¶		setRadius(newRadius);¶		setAngle(newAngle);¶	}¶//	¶//	@Override¶//	public void setX(int newX) {¶//		int oldX = x;¶//		x = newX;¶//		¶//	}¶//¶//	@Override¶//	public void setY(int newY) {¶//		int oldY = y;¶//		y = newY;¶//	}¶//¶//	@Override¶//	public int getX() {¶//		return x;¶//	}¶//¶//	@Override¶//	public int getY() {¶//		return y;¶//	}¶¶	public double getRadius() {¶		return radius;¶	}¶¶	public void setRadius(double newRadius) {¶		double oldRadius = radius;¶		radius = newRadius;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "radius", oldRadius, radius));¶		¶	}¶¶	public double getAngle() {¶		return angle;	¶	}¶¶	public void setAngle(double newAngle) {¶		double oldAngle = angle;¶		angle = newAngle;¶		height = (int) (getRadius()*Math.sin(angle));¶		width = (int) (getRadius()*Math.cos(angle));¶		¶		setHeight(height);¶		setWidth(width);¶¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "angle", oldAngle, angle));¶	}¶¶	public void rotate(int units) {¶		double rotate = units * Math.PI/32;¶		setAngle(rotate + angle);¶	}¶¶	@Override¶	public void move(int newX, int newY) {¶		setX(getX()+newX);¶		setY(getY()+newY);¶	}¶	¶	@Override¶	public void moveTo(int newX, int newY) {¶		setX(newX);¶		setY(newY);¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		propertySupport.addPropertyChangeListener(arg0);¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="5680" _type="PauseCommand" date="Wed Mar 23 15:59:20 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348652401">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1859]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5681" _type="MoveCaretCommand" caretOffset="250" date="Wed Mar 23 15:59:21 EDT 2022" docOffset="484" starttimestamp="1647716908162" timestamp="348653172" />
  <Command __id="5679" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:59:20 EDT 2022" docASTNodeCount="158" docActiveCodeLength="1155" docExpressionCount="103" docLength="1155" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348652401">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ABoundedShape.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.models.PropertyListenerRegisterer;¶¶@PropertyNames({¶	"x",¶	"y",¶	"width",¶	"height",¶	"ZIndex"¶	})¶@EditablePropertyNames({¶	"width",¶	"height",¶	"x",¶	"y",¶	"ZIndex"¶})¶public class ABoundedShape extends ALocatable implements BoundedShape, PropertyListenerRegisterer {¶¶	int width, height;¶	¶	public ABoundedShape() {¶		¶	}¶		¶	@Override¶	public int getHeight() {¶		return height;¶	}¶¶	@Override¶	public int getWidth() {¶		return width;¶	}¶¶	@Override¶	public void setHeight(int NewHeight) {¶		int oldHeight = height;¶		height = NewHeight;¶		¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "height", oldHeight, height));¶	}¶¶	@Override¶	public void setWidth(int NewWidth) {¶		int oldWidth = width;¶		width = NewWidth;¶		¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "width", oldWidth, width));¶	}¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="5683" _type="PauseCommand" date="Wed Mar 23 15:59:25 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348656963">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3791]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5684" _type="MoveCaretCommand" caretOffset="1241" date="Wed Mar 23 15:59:25 EDT 2022" docOffset="1241" starttimestamp="1647716908162" timestamp="348657614" />
  <Command __id="5682" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:59:25 EDT 2022" docASTNodeCount="404" docActiveCodeLength="2486" docExpressionCount="254" docLength="2755" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348656963">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ALine.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.util.ArrayList;¶import java.util.List;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.models.PropertyListenerRegisterer;¶¶@StructurePattern(StructurePatternNames.LINE_PATTERN)¶@PropertyNames({¶	"x",¶	"y",¶	"width",¶	"height",¶	"radius",¶	"angle",¶	"ZIndex"¶	})¶@EditablePropertyNames({¶	"radius",¶	"angle",¶	"x",¶	"y",¶	"height",¶	"width",¶	"ZIndex"¶})¶¶public class ALine extends ABoundedShape implements Line, PropertyListenerRegisterer, BoundedShape {¶	int x, y, width, height;¶	double radius, angle;¶	¶	int INIT_Angle = 45;¶	int INIT_Radius = 40;¶	int INIT_Rotate = 6;¶	int INIT_XY = 50;¶¶	public ALine() {¶		setRadius(INIT_Radius);¶		setAngle(INIT_Angle);¶		rotate(INIT_Rotate);¶		setX(INIT_XY);¶		setY(INIT_XY);¶	}¶	¶	public ALine(int INIT_X, int INIT_Y, double INIT_Radius, int INIT_Rotate) {¶		setX(INIT_X);¶		setY(INIT_Y);¶		setRadius(INIT_Radius);¶		setAngle(INIT_Angle);¶		rotate(INIT_Rotate);¶	}¶¶	public ALine(double newRadius, double newAngle) {¶		setRadius(newRadius);¶		setAngle(newAngle);¶	}¶//	¶//	@Override¶//	public void setX(int newX) {¶//		int oldX = x;¶//		x = newX;¶//		¶//	}¶//¶//	@Override¶//	public void setY(int newY) {¶//		int oldY = y;¶//		y = newY;¶//	}¶//¶//	@Override¶//	public int getX() {¶//		return x;¶//	}¶//¶//	@Override¶//	public int getY() {¶//		return y;¶//	}¶¶	public double getRadius() {¶		return radius;¶	}¶¶	public void setRadius(double newRadius) {¶		double oldRadius = radius;¶		radius = newRadius;¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "radius", oldRadius, radius));¶		¶	}¶¶	public double getAngle() {¶		return angle;	¶	}¶¶	public void setAngle(double newAngle) {¶		double oldAngle = angle;¶		angle = newAngle;¶		height = (int) (getRadius()*Math.sin(angle));¶		width = (int) (getRadius()*Math.cos(angle));¶		¶		setHeight(height);¶		setWidth(width);¶¶		propertySupport.notifyAllListeners(new PropertyChangeEvent(this, "angle", oldAngle, angle));¶	}¶¶	public void rotate(int units) {¶		double rotate = units * Math.PI/32;¶		setAngle(rotate + angle);¶	}¶¶	@Override¶	public void move(int newX, int newY) {¶		setX(getX()+newX);¶		setY(getY()+newY);¶	}¶	¶	@Override¶	public void moveTo(int newX, int newY) {¶		setX(newX);¶		setY(newY);¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener arg0) {¶		propertySupport.addPropertyChangeListener(arg0);¶	}¶¶}")]]]></diff>
  </Command>
  <Command __id="5686" _type="PauseCommand" date="Wed Mar 23 15:59:34 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348666801">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9187]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5687" _type="MoveCaretCommand" caretOffset="316" date="Wed Mar 23 15:59:35 EDT 2022" docOffset="1277" starttimestamp="1647716908162" timestamp="348667258" />
  <Command __id="5685" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:59:34 EDT 2022" docASTNodeCount="505" docActiveCodeLength="3366" docExpressionCount="357" docLength="3871" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348666801">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\main\MainClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.awt.BorderLayout;¶import java.awt.Component;¶import java.lang.reflect.Method;¶import java.util.ArrayList;¶import java.util.Scanner;¶¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JPanel;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.test.AFunctionTester;¶import bus.uigen.widgets.VirtualComponent;¶import controls.AController;¶import controls.ConsoleSceneView;¶import controls.Controller;¶import controls.Painter;¶import factories.AFactory;¶import graphics.ACircle;¶import graphics.AButtonArrayScene;¶import graphics.AChef;¶import graphics.ALine;¶import graphics.APatron;¶import graphics.AScene;¶import graphics.AnAngle;¶import graphics.AProducerConsumerScene;¶import graphics.AnAvatar;¶import graphics.Angle;¶import graphics.ProducerConsumerScene;¶import graphics.Avatar;¶import graphics.Line;¶import graphics.Scene;¶import util.misc.Console;¶¶public class MainClass {¶	static ProducerConsumerScene scene = AFactory.arrayBasedSceneFactoryMethod();¶	static ProducerConsumerScene scene1 = new AButtonArrayScene();¶¶	public static void main(String[] args) {¶		¶//		animateGraphics();¶//		animateArrayUse();¶		animateArrayUseInteractive();¶	}¶	¶	public static void animateGraphics() {¶		Scene Restaurant = new AScene();¶		OEFrame editor = ObjectEditor.edit(Restaurant);¶		editor.showDrawPanel();¶		editor.showTreePanel();¶//		Component c = editor.getDrawComponent();¶//		VirtualComponent v = editor.getDrawVirtualComponent();¶//		c.addMouseListener(null);¶¶		¶	}¶¶	public static void animateArrayUseInteractive() {¶¶		ObjectEditor.confirmSelectedMethodParameters(false);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "initScene", AttributeNames.LABEL, "Init Scene");¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.TOOLBAR_METHOD, true);¶		ObjectEditor.setMethodAttribute(AProducerConsumerScene.class, "chefToTable", AttributeNames.LABEL, "Chef to the table");¶¶¶		try {¶			Class[] initSceneArgTypes = {Integer.TYPE, Integer.TYPE};¶			Object[] initSceneDefaultArgs = {1, 4};¶			String[] initSceneArgNames = {"number of patrons", "number of chefs"};¶¶			Method initSceneMethod = AProducerConsumerScene.class.getMethod("initScene", initSceneArgTypes);¶			ObjectEditor.registerDefaultParameterValues(initSceneMethod, initSceneDefaultArgs);¶			ObjectEditor.registerParameterNames(initSceneMethod, initSceneArgNames);¶¶		} catch (NoSuchMethodException e) {¶			e.printStackTrace();¶		} catch (SecurityException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		OEFrame editor = ObjectEditor.edit(scene);¶		//editor.hideMainPanel();¶		editor.showDrawPanel();¶		editor.showToolBar();¶		¶//		JFrame frame = new JFrame();¶//		//frame.add((Component) console, BorderLayout.CENTER);¶//		frame.setSize(1000, 1000);¶//		frame.setVisible(true);¶		¶	¶		¶//		JPanel panel = new JPanel();¶//		JButton button1 = control.getChefToBuffer();¶//		panel.add(button1);¶//		frame.add(panel);¶	}¶	¶	public static void animatePainterTwo(Painter view) {¶		JFrame aFrame = new JFrame();¶		aFrame.add((Component) view, BorderLayout.CENTER);¶		aFrame.setSize(1000, 1000);¶		aFrame.setVisible(true);¶		JPanel panel = new JPanel();¶		aFrame.add(panel, BorderLayout.NORTH);¶	}¶	¶	public static void moveAvatar() {¶		System.out.println("test1");¶		scene.getChefList().get(2).getChef().move(30, 0);¶		scene.getChefList().get(2).getStove().move(10, 0);¶		System.out.println("Moving the stove: \n");¶		scene.getChefList().get(3).getStove().move(30, 30);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="5689" _type="PauseCommand" date="Wed Mar 23 15:59:38 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348670071">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2813]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5690" _type="MoveCaretCommand" caretOffset="1101" date="Wed Mar 23 15:59:38 EDT 2022" docOffset="1101" starttimestamp="1647716908162" timestamp="348670519" />
  <Command __id="5692" _type="PauseCommand" date="Wed Mar 23 15:59:43 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348674942">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4423]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5691" _type="MoveCaretCommand" caretOffset="1062" date="Wed Mar 23 15:59:43 EDT 2022" docOffset="1062" starttimestamp="1647716908162" timestamp="348674942" />
  <Command __id="5693" _type="MoveCaretCommand" caretOffset="1062" date="Wed Mar 23 15:59:43 EDT 2022" docOffset="1062" starttimestamp="1647716908162" timestamp="348674942" />
  <Command __id="5688" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:59:38 EDT 2022" docASTNodeCount="870" docActiveCodeLength="4723" docExpressionCount="594" docLength="4723" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348670071">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AnAvatar.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶import java.beans.PropertyChangeListener;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.annotations.Tags;¶import util.misc.ThreadSupport;¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({¶	"Arms",¶	"Legs",¶	"Neck",¶	"Torso",¶	"head",¶	"text",¶	"plate"¶})¶@EditablePropertyNames({¶	"Arms",¶	"Legs",¶	"Neck",¶	"Torso",¶	"head",¶	"text"¶})¶public class AnAvatar implements Avatar {¶	Angle Legs;¶	Angle Arms;¶	Line Torso;¶	Line Neck;¶	StringShape text;¶	Head head;¶	String headImage = "";¶	String plateImage = "images/12.png";¶	Plate plate;¶	¶	int INIT_X = 50;¶	int INIT_Y = 50;¶	int INIT_Radius = 20;¶	int INIT_Neck = 10;¶	int INIT_Head = 99;¶¶	¶	public AnAvatar() {¶		Legs = new AnAngle();¶		Legs.moveX(INIT_X);¶		Legs.moveY(INIT_Y+40);¶		"), Diff(INSERT,"Legs.getLeftLine().setZIndex(400);¶		Legs.getRightLine().setZIndex(400);¶		"), Diff(EQUAL,"Arms = new AnAngle();¶		Arms.moveX(INIT_X);¶		Arms.moveY(INIT_Y);¶		Torso = new ALine();¶		Torso.setX(INIT_X);¶		Torso.setY(INIT_X);¶		Neck = new ALine();¶		Neck.setHeight(10);¶		Neck.setWidth(0);¶		Neck.setRadius(INIT_Radius);¶		Neck.setX(INIT_X);¶		Neck.setY(INIT_Y-INIT_Neck);¶		head = new AHead();¶		text = new AStringShape();¶		text.setText("");¶		head.setImageFileName(headImage);¶		head.setX(13);¶		head.setY(INIT_Y-INIT_Head);¶		head.setHeight(90);¶		head.setWidth(80);¶		plate = new APlate();¶		plate.setImageFileName(plateImage);¶		plate.setHeight(0);¶		plate.setWidth(0);¶		plate.setX(INIT_X-20);¶		plate.setY(INIT_Y+30);¶		plate.setZIndex(1);¶	}¶	¶	@Override¶	public Plate getPlate() {¶		return plate;¶	}¶¶	@Override¶	public void setPlate(Plate newPlate) {¶		plate = newPlate;¶	}¶¶	@Override¶	public Angle getArms() {¶		return Arms;¶	}¶	¶	@Override¶	public void setArms(Angle NewArms) {¶		Arms = NewArms;¶	}¶¶¶	@Override¶	public Angle getLegs() {¶		return Legs;¶	}¶	¶	@Override¶	public void setLegs(Angle NewLegs) {¶		Legs = NewLegs;¶	}¶¶¶	@Override¶	public Line getTorso() {¶		return Torso;¶	}¶	¶	@Override¶	public void setTorso(Line NewTorso) {¶		Torso = NewTorso;¶	}¶¶¶	@Override¶	public Line getNeck() {¶		return Neck;¶	}¶	¶	@Override¶	public void setNeck(Line newNeck) {¶		Neck = newNeck;¶	}¶	¶	@Override¶	public StringShape getText() {¶		return text;¶	}¶	¶	@Override¶	public void setText(StringShape NewText) {¶		text = NewText;¶	}¶	¶¶	@Override¶	public Head getHead() {¶		return head;¶	}¶¶	@Override¶	public void setHead(Head NewHead) {¶		head = NewHead;¶	}¶	¶	@Override¶	public void dropPlate(String imageName) {¶		plate.setImageFileName(imageName);¶		plate.setHeight(40);¶		plate.setWidth(40);¶		plate.setZIndex(1);¶	}¶	¶	@Override¶	public void goBack(int X, int Y) {¶		Legs.move(X, Y);¶		Arms.move(X, Y);¶		Torso.move(X, Y);¶		Neck.move(X, Y);¶		head.move(X, Y);¶	}¶	¶	@Override¶	public void move(int X, int Y) {¶		Legs.move(X, Y);¶		Arms.move(X, Y);¶		Torso.move(X, Y);¶		Neck.move(X, Y);¶		head.move(X, Y);¶		plate.move(X, Y);¶	}¶	¶	@Override¶	public void moveTo(int newX, int newY) {¶		Legs.moveTo(newX, newY);¶		Arms.moveTo(newX, newY);¶		Torso.moveTo(newX, newY);¶		Neck.moveTo(newX, newY);¶		head.moveTo(newX, newY);	¶		plate.moveTo(newX, newY);¶	}¶	¶	@Override¶	public void scale(double ratio) {¶		Legs.getRightLine().setRadius(Legs.getRightLine().getRadius()*ratio);¶		Legs.getLeftLine().setRadius(Legs.getLeftLine().getRadius()*ratio);¶		Arms.getRightLine().setRadius(Arms.getRightLine().getRadius()*ratio);¶		Arms.getLeftLine().setRadius(Arms.getLeftLine().getRadius()*ratio);¶		Neck.setRadius(Neck.getRadius()*ratio);¶		Torso.setRadius(Torso.getRadius()*ratio);¶	}¶	¶	¶	@Override¶	public void addPropertyChangeListener(Avatar avatarParameter, PropertyChangeListener aListener) {¶		avatarParameter.getArms().addPropertyChangeListener(getArms(), aListener);¶		avatarParameter.getLegs().addPropertyChangeListener(getLegs(), aListener);¶		avatarParameter.getHead().addPropertyChangeListener(aListener);¶		avatarParameter.getNeck().addPropertyChangeListener(aListener);¶		avatarParameter.getTorso().addPropertyChangeListener(aListener);¶		avatarParameter.getText().addPropertyChangeListener(aListener);¶	}¶	¶	public static void main(String[] args) {¶		Avatar scene = new AnAvatar();¶		scene.getHead().setImageFileName("images/0.png");¶		OEFrame editor = ObjectEditor.edit(scene);¶		editor.showDrawPanel();¶	}¶¶¶¶¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package graphics;
import java.beans.PropertyChangeListener;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.misc.ThreadSupport;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({
	"Arms",
	"Legs",
	"Neck",
	"Torso",
	"head",
	"text",
	"plate"
})
@EditablePropertyNames({
	"Arms",
	"Legs",
	"Neck",
	"Torso",
	"head",
	"text"
})
public class AnAvatar implements Avatar {
	Angle Legs;
	Angle Arms;
	Line Torso;
	Line Neck;
	StringShape text;
	Head head;
	String headImage = "";
	String plateImage = "images/12.png";
	Plate plate;
	
	int INIT_X = 50;
	int INIT_Y = 50;
	int INIT_Radius = 20;
	int INIT_Neck = 10;
	int INIT_Head = 99;

	
	public AnAvatar() {
		Legs = new AnAngle();
		Legs.moveX(INIT_X);
		Legs.moveY(INIT_Y+40);
		Legs.getLeftLine().setZIndex(400);
		Legs.getRightLine().setZIndex(400);
		Arms = new AnAngle();
		Arms.moveX(INIT_X);
		Arms.moveY(INIT_Y);
		Torso = new ALine();
		Torso.setX(INIT_X);
		Torso.setY(INIT_X);
		Neck = new ALine();
		Neck.setHeight(10);
		Neck.setWidth(0);
		Neck.setRadius(INIT_Radius);
		Neck.setX(INIT_X);
		Neck.setY(INIT_Y-INIT_Neck);
		head = new AHead();
		text = new AStringShape();
		text.setText("");
		head.setImageFileName(headImage);
		head.setX(13);
		head.setY(INIT_Y-INIT_Head);
		head.setHeight(90);
		head.setWidth(80);
		plate = new APlate();
		plate.setImageFileName(plateImage);
		plate.setHeight(0);
		plate.setWidth(0);
		plate.setX(INIT_X-20);
		plate.setY(INIT_Y+30);
		plate.setZIndex(1);
	}
	
	@Override
	public Plate getPlate() {
		return plate;
	}

	@Override
	public void setPlate(Plate newPlate) {
		plate = newPlate;
	}

	@Override
	public Angle getArms() {
		return Arms;
	}
	
	@Override
	public void setArms(Angle NewArms) {
		Arms = NewArms;
	}


	@Override
	public Angle getLegs() {
		return Legs;
	}
	
	@Override
	public void setLegs(Angle NewLegs) {
		Legs = NewLegs;
	}


	@Override
	public Line getTorso() {
		return Torso;
	}
	
	@Override
	public void setTorso(Line NewTorso) {
		Torso = NewTorso;
	}


	@Override
	public Line getNeck() {
		return Neck;
	}
	
	@Override
	public void setNeck(Line newNeck) {
		Neck = newNeck;
	}
	
	@Override
	public StringShape getText() {
		return text;
	}
	
	@Override
	public void setText(StringShape NewText) {
		text = NewText;
	}
	

	@Override
	public Head getHead() {
		return head;
	}

	@Override
	public void setHead(Head NewHead) {
		head = NewHead;
	}
	
	@Override
	public void dropPlate(String imageName) {
		plate.setImageFileName(imageName);
		plate.setHeight(40);
		plate.setWidth(40);
		plate.setZIndex(1);
	}
	
	@Override
	public void goBack(int X, int Y) {
		Legs.move(X, Y);
		Arms.move(X, Y);
		Torso.move(X, Y);
		Neck.move(X, Y);
		head.move(X, Y);
	}
	
	@Override
	public void move(int X, int Y) {
		Legs.move(X, Y);
		Arms.move(X, Y);
		Torso.move(X, Y);
		Neck.move(X, Y);
		head.move(X, Y);
		plate.move(X, Y);
	}
	
	@Override
	public void moveTo(int newX, int newY) {
		Legs.moveTo(newX, newY);
		Arms.moveTo(newX, newY);
		Torso.moveTo(newX, newY);
		Neck.moveTo(newX, newY);
		head.moveTo(newX, newY);	
		plate.moveTo(newX, newY);
	}
	
	@Override
	public void scale(double ratio) {
		Legs.getRightLine().setRadius(Legs.getRightLine().getRadius()*ratio);
		Legs.getLeftLine().setRadius(Legs.getLeftLine().getRadius()*ratio);
		Arms.getRightLine().setRadius(Arms.getRightLine().getRadius()*ratio);
		Arms.getLeftLine().setRadius(Arms.getLeftLine().getRadius()*ratio);
		Neck.setRadius(Neck.getRadius()*ratio);
		Torso.setRadius(Torso.getRadius()*ratio);
	}
	
	
	@Override
	public void addPropertyChangeListener(Avatar avatarParameter, PropertyChangeListener aListener) {
		avatarParameter.getArms().addPropertyChangeListener(getArms(), aListener);
		avatarParameter.getLegs().addPropertyChangeListener(getLegs(), aListener);
		avatarParameter.getHead().addPropertyChangeListener(aListener);
		avatarParameter.getNeck().addPropertyChangeListener(aListener);
		avatarParameter.getTorso().addPropertyChangeListener(aListener);
		avatarParameter.getText().addPropertyChangeListener(aListener);
	}
	
	public static void main(String[] args) {
		Avatar scene = new AnAvatar();
		scene.getHead().setImageFileName("images/0.png");
		OEFrame editor = ObjectEditor.edit(scene);
		editor.showDrawPanel();
	}




	
}
]]></snapshot>
  </Command>
  <Command __id="5695" _type="PauseCommand" date="Wed Mar 23 15:59:48 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348680744">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5801]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5696" _type="MoveCaretCommand" caretOffset="298" date="Wed Mar 23 15:59:49 EDT 2022" docOffset="560" starttimestamp="1647716908162" timestamp="348681198" />
  <Command __id="5698" _type="PauseCommand" date="Wed Mar 23 15:59:50 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348682527">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1329]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5697" _type="MoveCaretCommand" caretOffset="396" date="Wed Mar 23 15:59:50 EDT 2022" docOffset="658" starttimestamp="1647716908162" timestamp="348682527" />
  <Command __id="5694" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 15:59:48 EDT 2022" docASTNodeCount="213" docActiveCodeLength="1414" docExpressionCount="138" docLength="1414" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348680743">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\APlate.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeEvent;¶¶import javax.swing.ImageIcon;¶¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.models.PropertyListenerRegisterer;¶¶@StructurePattern(StructurePatternNames.IMAGE_PATTERN)¶@PropertyNames({¶	"x",¶	"y",¶	"height",¶	"width",¶	"imageFileName",¶	"ZIndex"¶})¶@EditablePropertyNames({¶	"x",¶	"y",¶	"height",¶	"width",¶	"imageFileName",¶	"ZIndex"¶})¶public class APlate extends ABoundedShape implements Plate, PropertyListenerRegisterer {¶	¶	int x;¶	int y;¶	int height, width;¶	String imageFileName;¶	private ImageIcon icon;¶	¶	public APlate() {¶		icon = new ImageIcon(imageFileName);¶	}¶¶	@Override¶	public String getImageFileName() {¶		return imageFileName;¶	}¶¶	@Override¶	public void setImageFileName(String newName) {¶		String oldImageFileName = imageFileName;¶		imageFileName = newName;¶		this.icon = new ImageIcon(imageFileName);¶		¶		propertySupport.notifyAllListeners(new PropertyChangeEvent (this, "ImageFileName", oldImageFileName, getImageFileName()));¶	}¶¶	@Override¶	public void move(int newX, int newY) {¶		setX(getX() + newX);¶		setY(getY() + newY);¶	}¶¶	@Override¶	public void moveTo(int newX, int newY) {¶		setX(newX);¶		setY(newY);¶	}¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="5700" _type="PauseCommand" date="Wed Mar 23 16:00:04 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="348695957">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13430]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5701" _type="SelectTextCommand" caretOffset="199" date="Wed Mar 23 16:00:04 EDT 2022" end="199" start="183" starttimestamp="1647716908162" timestamp="348696677" />
  <Command __id="5699" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 16:00:04 EDT 2022" docASTNodeCount="45" docActiveCodeLength="289" docExpressionCount="20" docLength="289" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348695957">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\Plate.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package graphics;

import util.models.PropertyListenerRegisterer;

public interface Plate extends BoundedShape, PropertyListenerRegisterer {

	String getImageFileName();
	void setImageFileName(String newName);
	void move(int newX, int newY);
	void moveTo(int newX, int newY);
}
]]></snapshot>
  </Command>
  <Command __id="5703" _type="PauseCommand" date="Wed Mar 23 16:00:14 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348706015">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[9338]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5704" _type="MoveCaretCommand" caretOffset="396" date="Wed Mar 23 16:00:14 EDT 2022" docOffset="658" starttimestamp="1647716908162" timestamp="348706767" />
  <Command __id="5706" _type="PauseCommand" date="Wed Mar 23 16:00:16 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="348708789">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2022]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5705" _type="MoveCaretCommand" caretOffset="340" date="Wed Mar 23 16:00:16 EDT 2022" docOffset="602" starttimestamp="1647716908162" timestamp="348708789" />
  <Command __id="5707" _type="SelectTextCommand" caretOffset="346" date="Wed Mar 23 16:00:17 EDT 2022" end="346" start="333" starttimestamp="1647716908162" timestamp="348708983" />
  <Command __id="5709" _type="PauseCommand" date="Wed Mar 23 16:00:18 EDT 2022" range="1s-2s" starttimestamp="1647716908162" timestamp="348710046">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1063]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5710" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 16:01:28 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348780461" type="Run" />
  <Command __id="5712" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 16:01:28 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348780461" type="Run" />
  <Command __id="5714" _type="PauseCommand" date="Wed Mar 23 16:01:34 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="348786246">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[5785]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5713" _type="ShellCommand" date="Wed Mar 23 16:01:34 EDT 2022" starttimestamp="1647716908162" timestamp="348786246" type="ECLIPSE_MINIMIZED" />
  <Command __id="5715" _type="ShellCommand" date="Wed Mar 23 16:01:34 EDT 2022" starttimestamp="1647716908162" timestamp="348786285" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5717" _type="PauseCommand" date="Wed Mar 23 16:07:29 EDT 2022" range="5m-10m" starttimestamp="1647716908162" timestamp="349141786">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[355501]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="5716" _type="BalloonCommand" date="Wed Mar 23 16:07:29 EDT 2022" message="*******************************************
Worked 15 minutes(fixed)/17 minutes(context based) from
Wed Mar 23 15:44:19 EDT 2022 to Wed Mar 23 16:01:34 EDT 2022
Edited 1 Projects: 
	ProducersConsumer
Edited 3 Files: 
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AnAvatar.java
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\AProducerConsumerScene.java
	C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\ALine.java
Number of insert: 348
Number of delete: 153
" starttimestamp="1647716908162" timestamp="349141786">
    <fineGrainedWorkTime><![CDATA[17]]></fineGrainedWorkTime>
    <insert><![CDATA[348]]></insert>
    <startTime><![CDATA[1648064659076]]></startTime>
    <endTime><![CDATA[1648065694447]]></endTime>
    <workTime><![CDATA[15]]></workTime>
    <delete><![CDATA[153]]></delete>
  </Command>
  <Command __id="5719" _type="PauseCommand" date="Wed Mar 23 17:59:35 EDT 2022" range=">1h" starttimestamp="1647716908162" timestamp="355867103">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[6725306]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5718" _type="ShellCommand" date="Wed Mar 23 17:59:35 EDT 2022" starttimestamp="1647716908162" timestamp="355867092" type="ECLIPSE_MAXIMIZED" />
  <Command __id="5720" _type="ShellCommand" date="Wed Mar 23 17:59:35 EDT 2022" starttimestamp="1647716908162" timestamp="355867789" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5722" _type="PauseCommand" date="Wed Mar 23 17:59:58 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="355890400">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[22611]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5721" _type="ShellCommand" date="Wed Mar 23 17:59:58 EDT 2022" starttimestamp="1647716908162" timestamp="355890400" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5724" _type="PauseCommand" date="Wed Mar 23 18:00:05 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="355897574">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7174]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5723" _type="ShellCommand" date="Wed Mar 23 18:00:05 EDT 2022" starttimestamp="1647716908162" timestamp="355897574" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5726" _type="PauseCommand" date="Wed Mar 23 18:00:09 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="355901516">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3941]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5725" _type="MoveCaretCommand" caretOffset="488" date="Wed Mar 23 18:00:09 EDT 2022" docOffset="750" starttimestamp="1647716908162" timestamp="355901515" />
  <Command __id="5728" _type="PauseCommand" date="Wed Mar 23 18:00:13 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="355905063">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3548]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5727" _type="ShellCommand" date="Wed Mar 23 18:00:13 EDT 2022" starttimestamp="1647716908162" timestamp="355905063" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5729" _type="ShellCommand" date="Wed Mar 23 18:00:13 EDT 2022" starttimestamp="1647716908162" timestamp="355905221" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5730" _type="ShellCommand" date="Wed Mar 23 18:00:13 EDT 2022" starttimestamp="1647716908162" timestamp="355905382" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5732" _type="PauseCommand" date="Wed Mar 23 18:00:26 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="355918553">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[13171]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5731" _type="ShellCommand" date="Wed Mar 23 18:00:26 EDT 2022" starttimestamp="1647716908162" timestamp="355918553" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5733" _type="ShellCommand" date="Wed Mar 23 18:00:26 EDT 2022" starttimestamp="1647716908162" timestamp="355918584" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5735" _type="PauseCommand" date="Wed Mar 23 18:00:29 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="355921726">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3142]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5734" _type="ShellCommand" date="Wed Mar 23 18:00:29 EDT 2022" starttimestamp="1647716908162" timestamp="355921726" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5736" _type="ShellCommand" date="Wed Mar 23 18:00:29 EDT 2022" starttimestamp="1647716908162" timestamp="355921768" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5738" _type="PauseCommand" date="Wed Mar 23 18:00:36 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="355928656">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6888]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5739" _type="ProgramExecutionEvent" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 18:00:39 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="355931835" type="Run" />
  <Command __id="5741" _type="RunCommand" className="/ProducersConsumer/src/main/MainClass.java" date="Wed Mar 23 18:00:39 EDT 2022" kind="HitBreakPoint" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="355931836" type="Run" />
  <Command __id="5743" _type="PauseCommand" date="Wed Mar 23 18:00:42 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="355934262">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2426]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5742" _type="ConsoleOutput" date="Wed Mar 23 18:00:42 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="355934262" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"0¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@31ff080d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@31ff080d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@31ff080d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@31ff080d]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6ba09e70]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@6ba09e70]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6ba09e70]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@6ba09e70]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@7dc06b8a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@7dc06b8a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@7dc06b8a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@7dc06b8a]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5c734157]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@5c734157]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5c734157]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@5c734157]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@f691835]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@f691835]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@f691835]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@f691835]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@10b1f3d7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@10b1f3d7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@10b1f3d7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@10b1f3d7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@2b3165c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@2b3165c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@2b3165c7]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@2b3165c7]¶W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: ZIndex of object: graphics.APlate@ebea3c9. Ignoring notification."), Diff(INSERT,"W*** public void graphics.AProducerConsumerScene.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5744" _type="ShellCommand" date="Wed Mar 23 18:00:43 EDT 2022" starttimestamp="1647716908162" timestamp="355934887" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5746" _type="PauseCommand" date="Wed Mar 23 18:00:45 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="355936917">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2030]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5745" _type="ConsoleOutput" date="Wed Mar 23 18:00:45 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="355936917" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)
W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. 

W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"public void graphics.AProducerConsumerScen"), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.APatron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Avatar.addPropertyChangeListener(graphics.Avatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. ¶¶W*** public void graphics.ATabl"), Diff(EQUAL,"e.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶")]]]></diff>
  </Command>
  <Command __id="5747" _type="ConsoleOutput" date="Wed Mar 23 18:00:45 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="355937000" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.A"), Diff(DELETE,"Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Patron.addPropertyChangeListener(graphics.Patron,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAvatar.addPropertyChangeListener(graphics.Avatar"), Diff(INSERT,"nAngle.addPropertyChangeListener(graphics.Angle"), Diff(EQUAL,",java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.A"), Diff(DELETE,"vatar"), Diff(INSERT,"ngle"), Diff(EQUAL,".addPropertyChangeListener(graphics.A"), Diff(DELETE,"vatar,java.beans.PropertyChangeListener)¶W*** Implicitly editable property: plate of class class graphics.AnAvatar not considered editable as it is not in editable property names list. ¶¶W*** public void graphics.ATable.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property "), Diff(INSERT,"ngle,java.beans.PropertyChange"), Diff(EQUAL,"Listener)¶")]]]></diff>
  </Command>
  <Command __id="5748" _type="ConsoleOutput" date="Wed Mar 23 18:00:45 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="355937119" type="ConsoleOutput">
    <outputString><![CDATA[W*** Implicit property ZIndex of  AHead ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. 
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AnAngle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Angle.addPropertyChangeListener(graphics.Angle,java.beans.PropertyChangeListener)"), Diff(INSERT,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5749" _type="ConsoleOutput" date="Wed Mar 23 18:00:45 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="355937603" type="ConsoleOutput">
    <outputString><![CDATA[W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Implicit property ZIndex of  AHead ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: ZIndex of class class graphics.AHead not considered editable as it is not in editable property names list. "), Diff(INSERT,"Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5751" _type="PauseCommand" date="Wed Mar 23 18:01:08 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="355960133">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22530]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5750" _type="ConsoleOutput" date="Wed Mar 23 18:01:08 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="355960133" type="ConsoleOutput">
    <outputString><![CDATA[test1
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4784e8ec]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4784e8ec]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4784e8ec]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4784e8ec]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@500e6ab0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@500e6ab0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@500e6ab0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@500e6ab0]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@161a096c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@161a096c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@161a096c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@161a096c]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1f6b6e18]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1f6b6e18]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@1f6b6e18]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@1f6b6e18]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7fc82691]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7fc82691]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@7fc82691]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@7fc82691]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5c309832]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5c309832]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@5c309832]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@5c309832]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1aa7bbb1]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1aa7bbb1]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1aa7bbb1]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1aa7bbb1]
Moving the stove: 
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public void graphics.AChef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)¶W*** Use annotation @ObserverRegisterer(interface java.beans.PropertyChangeListener) for method public abstract void graphics.Chef.addPropertyChangeListener(graphics.Chef,java.beans.PropertyChangeListener)"), Diff(INSERT,"test1¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4784e8ec]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@4784e8ec]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4784e8ec]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@4784e8ec]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@500e6ab0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@500e6ab0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@500e6ab0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=440; newValue=440; propagationId=null; source=graphics.ALine@500e6ab0]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@161a096c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@161a096c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@161a096c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@161a096c]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1f6b6e18]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@1f6b6e18]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@1f6b6e18]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@1f6b6e18]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7fc82691]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@7fc82691]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@7fc82691]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=400; newValue=400; propagationId=null; source=graphics.ALine@7fc82691]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5c309832]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=130; propagationId=null; source=graphics.ALine@5c309832]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@5c309832]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=390; newValue=390; propagationId=null; source=graphics.ALine@5c309832]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1aa7bbb1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=63; newValue=93; propagationId=null; source=graphics.AHead@1aa7bbb1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1aa7bbb1]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue=301; newValue=301; propagationId=null; source=graphics.AHead@1aa7bbb1]¶Moving the stove: "), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5753" _type="PauseCommand" date="Wed Mar 23 18:01:14 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="355966053">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5920]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="5752" _type="ConsoleOutput" date="Wed Mar 23 18:01:14 EDT 2022" overflow="false" starttimestamp="1647716908162" timestamp="355966053" type="ConsoleOutput">
    <outputString><![CDATA[0
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@742f5510]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@742f5510]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@742f5510]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@742f5510]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@659794f5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@659794f5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@659794f5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=140; newValue=160; propagationId=null; source=graphics.ALine@659794f5]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@153802c4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@153802c4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@153802c4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@153802c4]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@17ca65b8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@17ca65b8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@17ca65b8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@17ca65b8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@21eec568]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@21eec568]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@21eec568]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=100; newValue=120; propagationId=null; source=graphics.ALine@21eec568]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@62a90f3f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=200; newValue=560; propagationId=null; source=graphics.ALine@62a90f3f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@62a90f3f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=90; newValue=110; propagationId=null; source=graphics.ALine@62a90f3f]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@7af339c8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=163; newValue=523; propagationId=null; source=graphics.AHead@7af339c8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@7af339c8]
java.beans.PropertyChangeEvent[propertyName=x; oldValue=1; newValue=21; propagationId=null; source=graphics.AHead@7af339c8]
W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: ZIndex of object: graphics.APlate@31627291. Ignoring notification.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"test1"), Diff(INSERT,"0"), Diff(EQUAL,"¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"4784e8ec"), Diff(INSERT,"742f5510"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"4784e8ec"), Diff(INSERT,"742f5510"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"4784e8ec"), Diff(INSERT,"742f5510"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"4784e8ec"), Diff(INSERT,"742f5510"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"500e6ab0"), Diff(INSERT,"659794f5"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"500e6ab0"), Diff(INSERT,"659794f5"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"500e6ab0"), Diff(INSERT,"659794f5"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"40; newValue="), Diff(DELETE,"44"), Diff(INSERT,"16"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"500e6ab0"), Diff(INSERT,"659794f5"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@1"), Diff(DELETE,"61a096c"), Diff(INSERT,"53802c4"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@1"), Diff(DELETE,"61a096c"), Diff(INSERT,"53802c4"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@1"), Diff(DELETE,"61a096c"), Diff(INSERT,"53802c4"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@1"), Diff(DELETE,"61a096c"), Diff(INSERT,"53802c4"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@1"), Diff(DELETE,"f6b6e1"), Diff(INSERT,"7ca65b"), Diff(EQUAL,"8]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@1"), Diff(DELETE,"f6b6e1"), Diff(INSERT,"7ca65b"), Diff(EQUAL,"8]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@1"), Diff(DELETE,"f6b6e1"), Diff(INSERT,"7ca65b"), Diff(EQUAL,"8]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@1"), Diff(DELETE,"f6b6e1"), Diff(INSERT,"7ca65b"), Diff(EQUAL,"8]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"7fc82691"), Diff(INSERT,"21eec568"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"7fc82691"), Diff(INSERT,"21eec568"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"7fc82691"), Diff(INSERT,"21eec568"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"4"), Diff(INSERT,"1"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"40"), Diff(INSERT,"12"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"7fc82691"), Diff(INSERT,"21eec568"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5c309832"), Diff(INSERT,"62a90f3f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL,"00; newValue="), Diff(DELETE,"13"), Diff(INSERT,"56"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5c309832"), Diff(INSERT,"62a90f3f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(EQUAL,"90; newValue="), Diff(DELETE,"39"), Diff(INSERT,"11"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5c309832"), Diff(INSERT,"62a90f3f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"3"), Diff(EQUAL,"90; newValue="), Diff(DELETE,"39"), Diff(INSERT,"11"), Diff(EQUAL,"0; propagationId=null; source=graphics.ALine@"), Diff(DELETE,"5c309832"), Diff(INSERT,"62a90f3f"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"63; newValue="), Diff(DELETE,"9"), Diff(INSERT,"52"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"1aa7bbb1"), Diff(INSERT,"7af339c8"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(INSERT,"1"), Diff(EQUAL,"63; newValue="), Diff(DELETE,"9"), Diff(INSERT,"52"), Diff(EQUAL,"3; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"1aa7bbb1"), Diff(INSERT,"7af339c8"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"30"), Diff(EQUAL,"1; newValue="), Diff(DELETE,"30"), Diff(INSERT,"2"), Diff(EQUAL,"1; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"1aa7bbb1"), Diff(INSERT,"7af339c8"), Diff(EQUAL,"]¶java.beans.PropertyChangeEvent[propertyName=x; oldValue="), Diff(DELETE,"30"), Diff(EQUAL,"1; newValue="), Diff(DELETE,"30"), Diff(INSERT,"2"), Diff(EQUAL,"1; propagationId=null; source=graphics.AHead@"), Diff(DELETE,"1aa7bbb1]¶Moving the stove: "), Diff(INSERT,"7af339c8]¶W*** Received notification(s) for unknown (possibly invisible or unrecognized atomic-shape) property: ZIndex of object: graphics.APlate@31627291. Ignoring notification."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="5755" _type="PauseCommand" date="Wed Mar 23 18:01:36 EDT 2022" range="20s-30s" starttimestamp="1647716908162" timestamp="355988486">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22433]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5754" _type="ShellCommand" date="Wed Mar 23 18:01:36 EDT 2022" starttimestamp="1647716908162" timestamp="355988486" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5702" _type="DiffBasedFileOpenCommand" date="Wed Mar 23 16:00:14 EDT 2022" docASTNodeCount="213" docActiveCodeLength="1414" docExpressionCount="138" docLength="1414" projectName="ProducersConsumer" starttimestamp="1647716908162" timestamp="348706015">
    <filePath><![CDATA[C:\Users\wid\eclipse-workspace\ProducersConsumer\src\graphics\APlate.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package graphics;¶¶import java.beans.PropertyChangeEvent;¶¶import javax.swing.ImageIcon;¶¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶import util.models.PropertyListenerRegisterer;¶¶@StructurePattern(StructurePatternNames.IMAGE_PATTERN)¶@PropertyNames({¶	"x",¶	"y",¶	"height",¶	"width",¶	"imageFileName",¶	"ZIndex"¶})¶@EditablePropertyNames({¶	"x",¶	"y",¶	"height",¶	"width",¶	"imageFileName",¶	"ZIndex"¶})¶public class APlate extends ABoundedShape implements Plate, PropertyListenerRegisterer {¶	¶	int x;¶	int y;¶	int height, width;¶	String imageFileName;¶	private ImageIcon icon;¶	¶	public APlate() {¶		icon = new ImageIcon(imageFileName);¶	}¶¶	@Override¶	public String getImageFileName() {¶		return imageFileName;¶	}¶¶	@Override¶	public void setImageFileName(String newName) {¶		String oldImageFileName = imageFileName;¶		imageFileName = newName;¶		this.icon = new ImageIcon(imageFileName);¶		¶		propertySupport.notifyAllListeners(new PropertyChangeEvent (this, "ImageFileName", oldImageFileName, getImageFileName()));¶	}¶¶	@Override¶	public void move(int newX, int newY) {¶		setX(getX() + newX);¶		setY(getY() + newY);¶	}¶¶	@Override¶	public void moveTo(int newX, int newY) {¶		setX(newX);¶		setY(newY);¶	}¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="5757" _type="PauseCommand" date="Wed Mar 23 18:01:40 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="355992465">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3979]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="5758" _type="MoveCaretCommand" caretOffset="1062" date="Wed Mar 23 18:01:41 EDT 2022" docOffset="1062" starttimestamp="1647716908162" timestamp="355993287" />
  <Command __id="5760" _type="PauseCommand" date="Wed Mar 23 18:01:47 EDT 2022" range="5s-10s" starttimestamp="1647716908162" timestamp="355998891">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5604]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5759" _type="MoveCaretCommand" caretOffset="1059" date="Wed Mar 23 18:01:47 EDT 2022" docOffset="1059" starttimestamp="1647716908162" timestamp="355998891" />
  <Command __id="5761" _type="MoveCaretCommand" caretOffset="1059" date="Wed Mar 23 18:01:47 EDT 2022" docOffset="1059" starttimestamp="1647716908162" timestamp="355998891" />
  <Command __id="5762" _type="SelectTextCommand" caretOffset="1060" date="Wed Mar 23 18:01:47 EDT 2022" end="1060" start="1057" starttimestamp="1647716908162" timestamp="355999075" />
  <Command __id="5763" _type="SelectTextCommand" caretOffset="1060" date="Wed Mar 23 18:01:47 EDT 2022" end="1060" start="1057" starttimestamp="1647716908162" timestamp="355999075" />
  <Command __id="5765" _type="PauseCommand" date="Wed Mar 23 18:01:50 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="356002167">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3091]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5764" _type="MoveCaretCommand" caretOffset="1126" date="Wed Mar 23 18:01:50 EDT 2022" docOffset="1126" starttimestamp="1647716908162" timestamp="356002166" />
  <Command __id="5766" _type="MoveCaretCommand" caretOffset="1126" date="Wed Mar 23 18:01:50 EDT 2022" docOffset="1126" starttimestamp="1647716908162" timestamp="356002167" />
  <Command __id="5768" _type="PauseCommand" date="Wed Mar 23 18:01:54 EDT 2022" range="2s-5s" starttimestamp="1647716908162" timestamp="356006737">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4570]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5767" _type="MoveCaretCommand" caretOffset="1783" date="Wed Mar 23 18:01:54 EDT 2022" docOffset="1783" starttimestamp="1647716908162" timestamp="356006737" />
  <Command __id="5769" _type="MoveCaretCommand" caretOffset="1783" date="Wed Mar 23 18:01:54 EDT 2022" docOffset="1783" starttimestamp="1647716908162" timestamp="356006737" />
  <Command __id="5771" _type="PauseCommand" date="Wed Mar 23 18:02:09 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="356021211">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[14474]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="5770" _type="MoveCaretCommand" caretOffset="1783" date="Wed Mar 23 18:02:09 EDT 2022" docOffset="1783" starttimestamp="1647716908162" timestamp="356021211" />
  <Command __id="5772" _type="MoveCaretCommand" caretOffset="1783" date="Wed Mar 23 18:02:09 EDT 2022" docOffset="1783" starttimestamp="1647716908162" timestamp="356021211" />
  <Command __id="5774" _type="PauseCommand" date="Wed Mar 23 18:02:20 EDT 2022" range="10s-20s" starttimestamp="1647716908162" timestamp="356032432">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11221]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="5773" _type="ShellCommand" date="Wed Mar 23 18:02:20 EDT 2022" starttimestamp="1647716908162" timestamp="356032432" type="ECLIPSE_MINIMIZED" />
  <Command __id="5775" _type="ShellCommand" date="Wed Mar 23 18:02:20 EDT 2022" starttimestamp="1647716908162" timestamp="356032476" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="5777" _type="PauseCommand" date="Wed Mar 23 18:07:29 EDT 2022" range="5m-10m" starttimestamp="1647716908162" timestamp="356341782">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[309305]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="5776" _type="BalloonCommand" date="Wed Mar 23 18:07:29 EDT 2022" message="*******************************************
Worked 2 minutes(fixed)/2 minutes(context based) from
Wed Mar 23 17:59:35 EDT 2022 to Wed Mar 23 18:02:20 EDT 2022
Edited 0 Projects: 
Edited 0 Files: 
Number of insert: 0
Number of delete: 0
" starttimestamp="1647716908162" timestamp="356341781">
    <fineGrainedWorkTime><![CDATA[2]]></fineGrainedWorkTime>
    <insert><![CDATA[0]]></insert>
    <startTime><![CDATA[1648072775254]]></startTime>
    <endTime><![CDATA[1648072940638]]></endTime>
    <workTime><![CDATA[2]]></workTime>
    <delete><![CDATA[0]]></delete>
  </Command>
  <Command __id="5779" _type="PauseCommand" date="Wed Mar 23 18:09:15 EDT 2022" range="1m-2m" starttimestamp="1647716908162" timestamp="356447586">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[105805]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
</Events>
